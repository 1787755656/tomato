<<<<<<< HEAD
2010-11-15 Chris Allegretta <chrisa@asty.org>
	* Add a section to the FAQ about using nanorc on Win32 systems.

2010-11-12 Chris Allegretta <chrisa@asty.org>
	* Add check for RESTRICTED mode back to speller, suspend and insert file
	  routines, since adding key bindings broke the fact that they should be
	  disabled in restricted mode.  Fixes Savannah bug 31625 reported by
	  Charlie Somerville.

2010-08-10 - nano 2.2 branch cut here

GNU nano 2.2.5 - 2010.08.05
2010-08-04 Lauri Kasanen <curaga@operamail.comcuraga@operamail.com>
        * doc/syntax/mgp.nanorc: New Magicpoint syntax highlighting definition

2010-08-04 Peter <exodus@savannah>
	* doc/syntax/tex.nanorc: No longer highlight escaped comments

2010-06-20 Chris Allegretta <chrisa@asty.org>
	* New rc file option allow_insecure_backup, allows the previous security
	  fixes for backup files to be overridden if you're really positive
	  you want to.  Fixes Savannah bug 29732 by Brian Szymanski <skibrianski>.

2010-05-23 Chris Allegretta <chrisa@asty.org>
	* files.c (write_file): Don't even try to chown() the backup
	  file unless we're root, since it's probably going to fail if
	  we're editing a file we don't own.  Fixes Savannah bug
	  29514: [nano 2.2.2] backup should ignore chown errors.

GNU nano 2.2.4 - 2010.04.15
2010-04-07 Chris Allegretta <chrisa@asty.org>
	* doc/man/nano.1,nanorc.5: Remove the backup file warnings now
          that a sufficient security fix exists for the backup file code.

2010-04-14 Chris Allegretta <chrisa@asty.org>
	* text.c (do_alt_speller): Skip invoking the alt speller if the file size 
	  is 0 bytes.  Fixes Savannah bug 29393 reported by Mike Frysinger.
	* files.c (wirte_file): Don't set current_stat when tmp == TRUE, check
	  whether current_stat is set when trying to use it, and don't do the
	  modification check if the filename changed, since we have no way
	  of knowing about it in that case.  Fixes Savannah bug 29392, reported
	  by Mike Frysinger.  [CVE-2010-1160]

2010-04-13 Felipe Bugno <necron@bol.com.br>
	* doc/syntax/cmake.nanorc: Added cmake syntax highlighting file.

2010-04-09 Chris Allegretta <chrisa@asty.org>
	* files.c (do_writeout): Better security fixes for backup file writing, 
	  mangled from submission by Dan Rosenberg <dan.j.rosenberg at gmail> 
          [CVE-2010-1161]

2010-04-08 Chris Allegretta <chrisa@asty.org>
	* files.c (do_writeout): Previous fixes should not cause a crash 
	  when saving a new file.  Discovered by Mike Frysinger <vapier@gentoo.org>.

2010-04-07 Chris Allegretta <chrisa@asty.org>
	* doc/man/nano.1,nanorc.5: Add warnings about using backup
	  mode as root due to the Dan Rosenberg security analysis.
 
2010-04-02 Chris Allegretta <chrisa@asty.org>
	* files.c (do_writeout): Expand modification check to include both the
	  original file's device ID and inode number as reasons to warn the 
          user that the file has been modified.  Also abort on writing a backup
	  file when its owner doesn't match the edited file. Based on security 
	  analysis on nano by Dan Rosenberg. [CVE-2010-1160]


2010-03-21 Chris Allegretta <chrisa@asty.org>
	* nano.c (page_stdin et al): Don't attempt to reset/reopen the terminal
	  settings when reading stdin if it was aborted with SIGINT.  May fix Savannah
	  bug 29114 reported by  Mike Frysinger.

2010-03-21 Mike Frysinger <vapier@gentoo.org>
	* doc/syntax/c.nanorc: Add additional support for #include_next and #pragma

2010-03-21 Chris Allegretta <chrisa@asty.org>
	* move.c (do_page_up, do_page_down()): Explicitly set current_y to 0 when paging 
	  up when not in smooth scroll mode, as previous fixes would otherwise cause 
	  the cursor to not really be moved to the stop of the screen.

2010-03-07 Chris Allegretta <chrisa@asty.org>
	* configure.ac, nano.c (handle_sigwinch): Create check for whether LINES and
	  COLS can safely be redefined.  Fixes compilation issues with cygwin, and likely
	  with newer versions of ncurses, fixes Savannah bug 28984 repoted by Andy Koppe
          and Eric Oliver via mailing list.
	* winio.c (get_mouseinput) - fix stray semicolon in code, also reported in
	  bug 28984.

GNU nano 2.2.3 - 2010.02.11
2010-01-28 Chris Allegretta <chrisa@asty.org>
	* move.c (do_page_up, do_page_down): Fix for smooth mode not preserving cusor 
	  position.  Part one of fix for Savannah bug 21178 by Mike Frysinger.

GNU nano 2.2.2 - 2010.01.17
2010-01-17 Chris Allegretta <chrisa@asty.org>
	* nano.c (main), prompt.c (do_statusbar_input): Handle problems with an unmapped 
	  function due to key rebinding, fixes crashes on FreeBSD repoted by Eitan 
	  Adler <eitanadlerlist@gmail.com>.

2010-01-14 Chris Allegretta <chrisa@asty.org>
	* files.c (do_writeout): Fix for crash / incorrect external modification warning
	  due to earlier fix in r4467.

2010-01-12 Chris Allegretta <chrisa@asty.org>
	* move.c (do_page_up, do_page_down): Fix issues with not enough scrolling down/up
	  and cursor centering.
	* winio.c (edit_scroll): Remove lots of needless checking of line length for 
	  soft wrapping code.
	* winio.c (edit_update) - Remove extra code for when updating with old_current outside
	  of the new buffer boundary and centering issues.

2010-01-05 Tito <farmatito@tiscali.it>
	* search.c (update_history): Fix bad length check causing search crash on armel platform.

2010-01-04 Chris Allegretta <chrisa@asty.org>
	* winio.c: edit_update, edit_redraw: Fix search not scrolling to the middle of the screen
	  (reported by alpha@qzx.com) and places where we rely on maxrows but should not.

2009-12-26 Jordi Mallach <jordi@gnu.org>
	* doc/man/nano.1: Avoid a groff warning by prepending a zero-width
	space to a line starting with '.

2009-12-22 Chris Allegretta <chrisa@asty.org>
	* files.c (write_file): Fix compatibility with previous stat fix and tiny mode.

2009-12-22 David Lawrence Ramsey <pooka109@gmail.com>
	* global.c: Add new strings for forward/back in the file browser.  New variables
	  nano_forwardfile_msg and nano_backfile_msg.

2009-12-20 Chris Allegretta <chrisa@asty.org>
	* files.c (is_file_writable): remove assert check for f, since it's not
	  initialized at the time.  Fixes Savannah bug 28309, reported by Zoltan Kovacs.

2009-12-20 Brian Szymanski <skibrianski via Savannah>
	* src/files.c (write_file): Check stat struct exists, and if not use just obtained stat data.
	  Fixes Ubuntu bug 471568, "reproducible crash in nano on trying to save to a file 
	  different than the one specified on the command line".

2009-12-15 Chris Allegretta <chrisa@asty.org>
	* doc/nanorc.sample.in - Remove erroneous 'set suspendenable' as it's actually a 
	  key binding (e.g. 'bind M-Z suspendenable all') and not a settable flag.  Fixes
	  Savannah bug 28299 reported by Mike Frysinger.

GNU nano 2.2.1 - 2009.12.12
2009-12-12 Chris Allegretta <chrisa@asty.org>
	* text.c (do_delete), nano.c (do_output): Add check for length of current line 
	  before and after adding/deleting text, and do full refresh if it is now
	  a different multiple of COLS.  Also get rid of superfluous do_refresh
	  vars now that we have edit_refresh_needed.

2009-12-09 David Lawrence Ramsey <pooka109@gmail.com>
	* global.c (shortcut_init), browser.c (do_browser): Fix M-W not being bound to 
	  research in either main menu or browser.

2009-12-09 Chris Allegretta <chrisa@asty.org>
	* files.c (read_file) - Add parameter for whether we should even try to check
	  file writability, as the message is useless when we're inserting into an 
	  existing buffer.  Fixes Savannah bug 28219.

2009-12-07 David Lawrence Ramsey <pooka109@gmail.com>
	* global.c (shortcut_init): Many fixes for keybindings code oversights, including
	  restore page up/down and GotoDir to browser, 
	* browser.c (do_browser): Fix breaking out of a submenu (e.g. gotodir) breaks out
	  of browser altogether.
	* doc/nanorc.sample.in: Add missing entries for fortran/ObjC/OCaml entries.

2009-12-03 David Lawrence Ramsey <pooka109@gmail.com>
	* global.c (shortcut_init) - Remove help shortcut from help shortcut list :-)  Tweaked 
	  to reorder exit shortcut to end of list to not mess up prev/next shortcut symmetry.

2009-12-03 Eitan Adler <eitanadlerlist@gmail.com>
	* doc/syntax/makefile.nanorc - Fix poor regex for all alpha characters which sometimes leads to
	  error messages, reported by gibboris@gmail.com.

2009-12-02 Chris Allegretta <chrisa@asty.org>
	* text.c (add_undo, do_undo, do_redo) - Do not execute cases for SPLIT when DISABLE_WRAPPING
	  is defined.  Fixes Savannah bug 28151 (anon).

2009-12-02 Jordi Mallach <jordi@gnu.org>
	* doc/man/nano.1: Fix escaping of hyphens for the -$ option.

2009-12-01 Kamil Dudka <kdudka@redhat.com>
	* chars.c, file.c - Better handle unused results for things like mbtowc(), new
	  macro IGNORE_CALL_RESULT.

2009-12-01 Chris Allegretta <chrisa@asty.org>
	* global.c (shortcut_init) - Remove redundant entries for ^Y/^V reported by
	  Christian Weisgerber.
	* doc/man/nanorc.5 - Fix typo in Meta documentation, reported by gibboris@gmail.com.

2009-12-01 David Lawrence Ramsey <pooka109@gmail.com>
	* global.c (shortcut_init) - Add support for ^P and ^N in the help menu.
	* Update documentation for 2.2 features including sample nanorc file, texinfo
	  file, man pages, UPGRADE file, and update copyright noticed for the current year.

GNU nano 2.2.0 - 2009.11.30
2009-11-29 Chris Allegretta <chrisa@asty.org>
	* prompt.c (get_prompt_string) - Universally handle help key when is 
disabled.  Fixes Savannah
	  bug 28117 by David Lawrence Ramsey <pooka109@gmail.com>.
	* chars.c, files.c: Add junk vars to silence the compiler.  Sigh.

2009-11-29 David Lawrence Ramsey <pooka109@gmail.com>
	* Change several *chars to const char, additional cleanups and casts to make compilers happier.
	* global.c: Fix replace and insert file initializations for proper compilation options.
	* nano.c (do_suspend): Update comments to reflect actual code path, bad Chris and thanks for
	  noticing Jordi.
	* configure.ac: Fix typos

2009-11-27 Chris Allegretta <chrisa@asty.org>
	* nano.c (do_suspend): Don't clear the screen but do move the cursor down to the last line
	  first in an effort to not corrupt the screen, which contradicts Pico but is consistent
	  with almost all other text editors.  Fixes Savannah bug 28110/Debian bug 460510
	  reported by Tim Connors <reportbug@rather.puzzling.org>.
	* doc/dyntax/makefile.nanorc - Sample Makefile highlighting based on wiki.linuxhelp.net version.

2009-11-26 Chris Allegretta <chrisa@asty.org>
	* winio.c (edit_scroll): Adjust for long lines when scrolling.
	* rcfile.c (parse_rcfile), initialize size argument to getline(), fixes crash on FreeBSD 
	  reported by Eitan Adler <eitanadlerlist@gmail.com>.

2009-11-26 Jordi Mallach <jordi@gnu.org>
	* doc/man/*: Update all man pages to escape unescaped hyphens.

2009-11-24 Chris Allegretta <chrisa@asty.org>
	* move.c (do_page_up, do_page_down): Make these functions work better with soft
	  line wrapping.
	* winio.c (compute_maxrows): Make maxrows calculation more accurate when all lines are > COLS.

2009-11-22 Chris Allegretta <chrisa@asty.org>
	* nano.c (main): Allow edit_refresh_needed to take effect when using --enable-tiny
	  (fixes Savannah bug 28076 reported by David Lawrence Ramsey).

2009-11-22 David Lawrence Ramsey <pooka109@gmail.com>
	* nano.c (move_to_filestruct): Fix bug 71 (cut at top of line recenters)
	* Fix compilation with --enable-tiny

2009-11-22 Mike Frysinger <vapier@gentoo.org>
	* doc/syntax/gentoo.nanorc: Tweak comment highlighting.

GNU nano 2.1.99pre2 - 2009.11.21
2009-11-21 Chris Allegretta <chrisa@asty.org>
	* rcfile.c: Add unbinding keyword, fixes Savannah bug 22852 reported by frankd.
	* prompt.c (update_statusbar_line): Set statusbar_pww when updating the line.
	  Fixes Savannah bug 24957 by Mike Frysinger.

2009-11-19 Chris Allegretta <chrisa@asty.org>
	* nano.c (die_save_file) Try nd match the permissions of the file we were
	  editing but only make a minimal effort to do so. Fixes Savannah bug 27273
	  reported by Mike Frysinger.

2009-11-18 Adrian Bunk <bunk via Savannah>
	* nano.c (main): Allow --fill and --nowrap to override nanorc entries and each other
          on the command line.

2009-11-15 Chris Allegretta <chrisa@asty.org>
	* winio.c (edit_refresh): Always computer maxsize regardless of whether smooth scrolling
	  is enabled.  Fixes Savannah bug 28024 by Mike Frysinger.

GNU nano 2.1.99pre1 - 2009.11.15
2009-11-14 Chris Allegretta <chrisa@asty.org>
	* move.c (do_first_line, do_last_line): Just set edit_refresh_needed rather than 
	  get messy.
	* files.c (do_writeout) - Only mention file modification if we're writing the same
	  file we originally opened.

2009-11-13 Chris Allegretta <chrisa@asty.org>
	* winio.c: Add new static maxsize to be able to easier calculation with
	  softwrap.
	* nano.c (do_mouse): Fix mouse support not working with soft wrapping.  Fixes
	  Savannah bug 27549 reported by Hannes Schueller.

2009-11-11 Chris Allegretta <chrisa@asty.org>
	* winio.c: Large tweaking of cursor and text display based on COLS not COLS - 1, 
	  due to finally understanding that display_string wasn't being called properly
	  when softwrap was enabled.  Fixes Savnnah bug 27603, Return key doesn't scroll 
	  viewport reported by Hannes Schueller.
	* - Fix size_t formatting issues with -pedantic

2009-11-09 Chris Allegretta <chrisa@asty.org>
	* files.c (read_file): - Remove debugging messages from file load.  Fixes
	  Savannah bug 27838.

2009-11-07 Chris Allegretta <chrisa@asty.org>
	* nano.h - Add bogus value at begin of flags enumeration because it
	  causes casesens rcfile option to misbehave, reported by Helmut 
	  Jarausch <jarausch@igpm.rwth-aachen.de>

2009-11-03 Chris Allegretta <chrisa@asty.org>
	* nano.h - Fix comma at end of enumerator list which angers -pedantic.
	* rcfile.c - Add in specific check for UNDOABLE and fix declaration as
	  to what flag it toggles.  Fixes undo mode being able to be called from
	  the rc file, reported by Helmut Jarausch <jarausch@igpm.rwth-aachen.de>

2009-11-03 Mike Frysinger <vapier@gentoo.org>
	* files.c - Move up is_file_writable() to stop implicit definition complaints.

2009-10-27 Chris Allegretta <chrisa@asty.org>
	* browser.c (browser_init): Set column width to something sane when 
	  initializing in a directory with no file entries.  Fixes Savannah
	  bug 24163 found (and initial patch) by Paul Wise.

2009-09-15 Chris Allegretta <chrisa@asty.org>
	* winio.c: Clean up some unused variables from the soft wrapping code.

GNU nano 2.1.11 - 2009.09.14
2009-09-12 Chris Allegretta <chrisa@asty.org>
	* winio.c (edit_update) - properly update edittop when using soft wrapping.
	  Fixes lack of centering for searching for off-screen answers, found by 
	  Hannes <mr_creosote@mutantwatch.de>.

2009-09-03 Chris Allegretta <chrisa@asty.org>
	* global.c (shortcut_init): Fix up/down keys not responding in the file browser,
	  discovered by Hannes <mr_creosote@mutantwatch.de>.
	* move.c (do_up) - Fix another scrolling issue with softwrap when the
	  cursor is beyond COLS, discovered by Hannes <mr_creosote@mutantwatch.de>.

2009-09-02 Chris Allegretta <chrisa@asty.org>
	* Attempt to check file writability and emit a warning on the status bar
	  if nano doesn't think the file can be written to.  Feature originally
	  requested by Damien Jolders <madamien@skullsquad.com> et al.

2009-08-29 Chris Allegretta <chrisa@asty.org>
	* Fix more soft wrapping issues, particularly with scrolling,
	  discovered by Hannes <mr_creosote@mutantwatch.de>.

2009-08-19 Chris Allegretta <chrisa@asty.org>
	* Fix issue with soft wrapping not displaying the last character of each line,
	  fixed bug discovered by Hannes <mr_creosote@mutantwatch.de>.

2009-08-17 Mike Frysinger <vapier@gentoo.org>
	* doc/syntax/(gentoo|sh|tcl).nanorc: Fix problems with empty regexes on POSIX.
	  Fixes Savannah bug 27175.

2009-08-17 Chris Allegretta <chrisa@asty.org>
	* Initial soft line wrapping implementation.  Command line flags
	  -$ or --softwrap.  
	* nano.c, text.c: Clean up some fprintf warnings in debug mode due to printing
	  a size_t without using the zd specifier.
2009-08-13 Chris Allegretta <chrisa@asty.org>
	* New global flag implementation courtesy of Adam Wysocki <gophi@arcabit.pl>, allows
 	  previous undo flag to be implemented consistent with other flags.

GNU nano 2.1.10 - 2009.07.28
2009-07-27 Chris Allegretta <chrisa@asty.org>
	* text.c (undo_cut, redo_cut): Don't actually try and undo/redo an empty cut, i.e. the magicline. 
	  Fixes crash on cutting last line discovered by Eitan Adler <eitanadlerlist@gmail.com>.

2009-07-11 Chris Allegretta <chrisa@asty.org>
	* nano-regress: Small tweaks
	* Change undo code to off unless unabled via a command line option (-u/--undo).  Until this code
	  stabilizes this is the only responsible way to treat it.

2009-03-08 Chris Allegretta <chrisa@asty.org>
	* TODO - Break out some targets for various features into 2.2 
	  and 2.4 series for things which are feasible.

2009-02-28 Chris Allegretta <chrisa@asty.org>
	* configure.ac: Add check for whether _XOPEN_SOURCE_EXTENDED is needed for
	  curses to work w/color.  Fixes compilation on HP-UX with older GCC, 
	  reported by jay.krell@cornell.edu.

2009-02-23 Eitan Adler <eitanadlerlist@gmail.com>
	* doc/man/Makefile.am: Fix make variable substitution to be more portable

2009-02-23 Chris Allegretta <chrisa@asty.org>
	* rcfile.c (parse_keybinding) - Define a var before tryung to use it.  Whoops!
	* fix some redefinitions causing compiler warnings, from Eitan Adler.  Other
	  (hopefully) fixes for uncasted malloc()s, reported by the same.
	* doc/man/fr/Makefile.am: Add groff check fix to fr files.

GNU nano 2.1.9 - 2009.02.16
2009-02-16 Chris Allegretta <chrisa@asty.org>
	* Add new argument to reset_multis for force redraws without attempting to
	  guess whether we need to, for functions that we don't have good info about
	  the text state.  New utility function color.c:reset_multis_for_id().  

2009-02-15 Chris Allegretta <chrisa@asty.org>
	* configure.ac, doc/man/Makefile.am - Add check for HTML output support in GNU
	  groff.  Fixes Savannah bug #24461: build traps on groff.  Also, add installation
	  of html-ized man pages to $datadir/nano/man-html, since we should probably
	  install files we went to all the trouble of generating.

2009-02-14 Chris Allegretta <chrisa@asty.org>
        * nano.c (precalc_multicolorinfo) - Add debugging so we have a better clue if further
          issues arise.   Also start at the beginning of later lines when trying to match the
          end of a multi-line regex.  Fixes more overly aggressive highlighting found by 
          Mike Frysinger.  Finally, advance to the match end for performance.

2009-02-11 Chris Allegretta <chrisa@asty.org>
	* nanorc.c (parse_include): Do call real_dir_from_tilde() on included
	  files in .nanorc, but still avoiding bug #25297.  Fixes ~ and ~user
	  specifications for nanorc include files, as reported by Eitan Adler.

2009-02-09 Chris Allegretta <chrisa@asty.org>
	* New option -q, --quiet, rcfile option "quiet" implemented.  Skips printing
	  errors about the rcfile and asking user to press enter.  Also, nano should
	  now only ask for one enter press when there is an error when not using -q.
	  Based on discussion between Eitan Adler and Mike Frysinger.
	* rcfile.c (parse_keybinding) -  Significant cleanups and fixes for 
	  detecting and reporting errors in key bindings code.

2009-02-08 Chris Allegretta <chrisa@asty.org>
	* Make reset_multidata reset more lines, since contrary to previous problems the
	  syntax highlting is now too *un*ambitious, causing display glitches when
	  deleting a regex boundary.
	* Add more multidata initliazers for new buffers and 'magic lines'.  Fixes segfaults
	  with syntax highlighting in new buffers, initially reported by Mike Frysinger.

GNU nano 2.1.8 - 2009.02.07
2009-02-06 Chris Allegretta <chrisa@asty.org>
	* rcfile.c (parse_include): Abort on being unable to open an included rcfile.  Fixes
	  Savannah bug 25490, nanorc: "include"ing a file which doesn't exist causes nano to segfault.

2009-02-05 Chris Allegretta <chrisa@asty.org>
	* More color syntax speedups:  Determine in reset_multis() whether we really need to call
	  edit_refresh().  Additional global var edit_refresh_needed() to hopefully reduce
	  repeated calls to the function.  New helper funcs reset_multis_before() and 
	  reset_multis_after().

2009-02-02 Chris Allegretta <chrisa@asty.org>
	* New color precalculation code for mult-line regexes.  New function precalc_multicolorinfo(),
	  new structure multidata for keeping track of where regexes start/stop.  More 
	  performance improvements forthcoming.

2009-01-29 Chris Allegretta <chrisa@asty.org>
	* nano.c (move_to_filestruct) - properky initialize new fileage for multiswatching, sigh.
	  Fix cut sefaults discovered by Mike Frysinger.

2009-01-29 Chris Allegretta <chrisa@asty.org>
	* nano.c (main): Add support for nano acting like a pager when invoked with - as first
	  file argument.

2009-01-28 Davide Pesavento <davidepesa@gmail.com>
	* doc/syntax/gentoo.nanorc: Updates from David and Mike Frysinger.

2009-01-25 Chris Allegretta <chrisa@asty.org>
	* files.c (open_file), nanorc.c (parse_include): Don't get_full_path on 
	  included rc files, due to it potentially impacting the ability
	  to read files in nano's cwd().  Fixes Savnanah bug #25297 reported by Mike 
	  Frysinger)

2009-01-24 Chris Allegretta <chrisa@asty.org>
	* First pass at some caching of caching color info.  Right now it's only for
	  multi-line regexes but this may not be enough to increase performance.
	* Add interruptability to search functions.  New functions enable_nodelay and
	  disable_nodelay and changes to the routines to handle checking for pending
	  searches.  Fixes Savnnah bug 24946: Need interrrupt for search.

2009-01-19 Chris Allegretta <chrisa@asty.org>
	* Change function definitions to shorts instead of (void *)s.  New mapping function
          iso_me_harder_funcmap().  Fixes compilation complaints with -pedantic, 
	  reported by Eitan Adler <eitanadlerlist@gmail.com>.

GNU nano 2.1.7 - 2008.11.10
2008-10-20 Chris Allegretta <chrisa@asty.org>
	* files.c (do_writeout): Add check for file modification when saving
	  the file so the user can at least know they may be blowing away changes.

2008-10-14 Chris Allegretta <chrisa@asty.org>
	* nanorc.5: Fix redo man page entry and update explanation, reported by
	  Eitan Adler <eitanadlerlist@gmail.com>
	* global.c (shortcut_init), search.c (search_init): Fix add_to_sclist for ^W^T so
	  invalid messages will display properly.  Fixes Savannah bug 24507.

2008-10-13 Chris Allegretta <chrisa@asty.org>
	* Remove CUTTOEND as an undo type as it's unneeded, fix u->to_end logic in undo struct.
	* undo.c (update_undo): Don't free cutbuffer if NULL, fix for Savannah bug #24499

2008-10-04 Chris Allegretta <chrisa@asty.org>
	* cut.c (Add_undo): Save last cut undo information so it can be used for next uncut, fixes
	  Savannah bug 24183.

GNU nano 2.1.6 - 2008.10.03
2008-10-03 Pascal Gentil <pascal.gentil@univ-rennes1.fr>
	* fortran.nanorc: Sample python syntax highlighting file

2008-09-30 Dirkjan Ochtman <dirkjan@ochtman.nl>
	* python.nanorc: Small python syntax update

2008-09-30 <bluestorm_dylc@hotmail.com>
	* ocaml.nanorc: Sample OCaml syntax highlighting file

2008-09-30 Dave Geering <dgeering@toshiba-tap.com>
	* objc.nanorc: Sample Objective-C Syntax Hightlighting file

2008-09-30 Chris Allegretta <chrisa@asty.org>
        * configure.ac: Change extra, multibuffer, color and rcfile configure options to default to enabled
          --enable-tiny will now disable these options as well
	* python.nanorc, ruby.nanorc: Add header lines for python and ruby as well

2008-09-21 Chris Allegretta <chrisa@asty.org>
	* rcfile.c, color.c, nano.h: Add new capability for matching a syntax type by the "header" (1st line)
	  of a file being edited.  Based on Savannah bug 24197 and inital proof of concept by Dave Geering 
	  <dgeering@toshiba-tap.com>

2008-09-16 Chris Allegretta <chrisa@asty.org>
	* text.c: Add support for undoing a text uncut.  Split out the undo and redo of a text cut 
	  in order to avoid code duplication.

2008-09-06 Chris Allegretta <chrisa@asty.org>
	* nano.c: Do call disable_signals at startup regardless, since under cygwin we can't generate
	  ^C without it.

GNU nano 2.1.5 - 2008.08.30
2008-08-29 Chris Allegretta <chrisa@asty.org>
	* configure.ac, color.c, rcfile.c, utils.c: 1st attempt at supporting systems which don't support
	  GNU-style word boundaries.  New function fixbounds() to translate from GNU-style to 
	  BSD-style, autoconf option GNU_WORDBOUNDS.
	* nano-regress: New perl script to check for some of the more obvious issues with compilation
	  issues with certain configure options.
	* global.c, help.c, browser.c, files.c, proto.h: Fix several compipation and programmatic 
	  issues with --disable-help, especially that do-writeout was treating ^G the same as ^M.

2008-08-28 Chris Allegretta <chrisa@asty.org>
	* configure.ac, rcfile.c:  Add support for an alternate rcfilename at configure time.  Maybe this
	  should become a command line option some day, but I don't see the need currently.  Start of
	  fix for Savannah bug #24128: Add nanorc support to win32 platform.

2008-08-21 Chris Allegretta <chrisa@asty.org>
	* text.c: Change error messages where we may possibly get into a bad state and urge
	  the user to save when this happens.  Originally by Benno Schulenberg <bensberg@justemail.net>
	* text.c (do_enter):  Fix issue when compiled with --enable-debug, fixes Savannah bug 24092.

2008-08-08 Magnus Granberg <zorry@ume.nu> / Adam Conrad <?>
	* files.c (write_file): Add needed flags to open() calls when writing out files.  Fixes Savannah bug 
	  #23827: Compilation fails with -D_FORTIFY_SOURCE=2

2008-08-08 Chris Allegretta <chrisa@asty.org>
	* files.c (write_file): Check exit code of fclose(), since in certain out of space conditions the OS will
	  happily report successful fwrite()s until you try and close the file.  Fix for Savannah bug
	  #24000: no free space on partition - nano claims successful write - file empty 

GNU nano 2.1.4 - 2008.08.09
2008-08-08 Chris Allegretta <chrisa@asty.org>
	* files.c (write_file): Do not go on and attempt to write the main file if writing the backup file failed,
	  related to Savannah bug 24000.
	* text.c (do_redo): Fix improperly restoring the text when redoing a line split.
        * text.c (add_undo): Fix check for multi-line cut check skips adding other new legit events.

2008-07-23 Chris Allegretta <chrisa@asty.org>
	* text.c: Reset openfile-> to OTHER after an undo or redo so we don't mistakenly
	  mistakenly think this is an update when it's really an add.  Also
          Fix an extra ; after an if statement which makes nano try to free a struct which
          may be NULL

GNU nano 2.1.3 - 2008.08.04
2008-07-23 Chris Allegretta <chrisa@asty.org>
	* configure.ac: Add ncursesw dir to include path if lib detected

2008-07-11 Mike Frysinger <vapier@gentoo.org>
	* doc/nanorc.sample.in: Include the updates files in the default sample nanorc.

2008-07-11 Fabian Groffen <grobian@gentoo.org>
	* nano.c: Don't include langinfo.h if not using ENABLE_UTF8
	  (Savannah patch 6565)

2008-07-11 Mitsuya Shibata <mty.shibata@gmail.com>
	* text.c: Fix crashing in help menu when using certain locales
	  (Savannah bug 23751)

2008-07-09 Chris Allegretta <chrisa@asty.org>
        * nano.c/nano.h/global.c/text.c: New generalized undo code, currently
	  just works for adding and deleting text and splitting and unsplitting lines.

2008-06-29 Chris Allegretta <chrisa@asty.org>
	* global.c: Fix for not having search history when --disable-justify is used
	  (Savannah bug 23733)


GNU nano 2.1.2 - 2008.06.24
2008-06-24 Chris Allegretta <chrisa@asty.org>
	* rcfile.c: Added function check_bad_binding() to look for sequences which
	  shouldn't be bound, per Savannah bug 22674.

2008-05-31 Chris Allegretta <chrisa@asty.org>
	* prompt.c,search.c,global.c: Tentative fix for bug #23144: using arrow 
	  keys in search buffer affects main window (by Mike Frysinger)

2008-05-31 Chris Allegretta <chrisa@asty.org>
	* global.c: Fix for Savannah bug #23442: left/right arrow keys 
	  do not work with --enable-tiny (by Mike Frysinger)

2008-05-31 Chris Allegretta <chrisa@asty.org>
	* files.c,proto.h,text.c: Fix for conflicts with AIX curses
	  variables, from William Jojo <jojowil@hvcc.edu>

2008-05-31 Chris Allegretta <chrisa@asty.org>
	* global.c: Fix for compile error when --disable-speller is used 
	  (Savannah bug 23227 by Mike Frysinger)

2008-05-31 Chris Allegretta <chrisa@asty.org>
	* Fix for seg fault when window size too small, by 
          Andreas Amann <andreas.amann@tyndall.ie>

GNU nano 2.1.1 - 2008.04.01
2008-05-31 Chris Allegretta <chrisa@asty.org>
	* Added the following contributed files, by owner:
	  Donnie Berkholz <dberkholz@gentoo.org>
	    * Sample awk.nanorc
	  Simon Rupf <simon.rupf@int-ag.ch>
	    * Sample css.nanorc
	  Josef 'Jupp' Schugt <jupp@rubyforge.org>
	    * sample ruby.nanorc

2008-03-31 Chris Allegretta <chrisa@asty.org>
	* global.c: Fix for issues compiling with --enable-tiny and
	  --enable-multibuffer, as reported by Mike Frysinger.
	* files.c: Fix the fact that the insert file prompt text did not
	  properly appears in tiny mode.

2008-03-19  Benno Schulenberg <bensberg@justemail.net>
	* help.c, nano.c: Fix toggle help not being translated, fix allocation
	  issue.

2008-03-19  Chris Allegretta <chrisa@asty.org>
	* gloabl.c: Fix bracket matching sequence to be M-] not M-[, as reported
	  Nick Warne <nick@ukfsn.org>.
	* doc/syntax/Makefile.am - Actually include new syntaxes from Mike, etc
	* debian.nanorc - New debian sources.list config since we're including
	  gentoo, adapted from Milian Wolff <mail@milianw.de>

2008-03-18  Mike Frysinger <vapier@gentoo.org>
	* winio.c: Remove unneeded variable in parse_kbinput()
	* rcfile.c: relocate check_vitals_mapped() function to just above 
	  where it actually gets used and declare it "static void" in the process
	* global.c: only declare nano_justify_msg when justify support is enabled
	* php.nanorc: Php syntax highlighting config
	* tcl.nanorc: Tcl syntax highlighting config
	* gentoo.nanorc: Gentoo syntax highlighting config

2008-03-17  Benno Schulenberg <bensberg@justemail.net>
	* global.c: Fix incorrect first line jump messsage, fix
	  more comments to assist translators
	* winio.c: Fix shortcut labels not being translated.

2008-03-17  Mike Frysinger <vapier@gentoo.org>
	 * */.gitignore: Git ignore files for those running a local git
	   against SVN.

2008-03-16  Benno Schulenberg <bensberg@justemail.net>
	* src/help.c, src/global: Fix help strings no longer being 
	  translated properly.
	* src/global.c, doc/man/nanorc.5: Fix typos and poorlly worded lines
	  in the source and man pages.

2008-03-04  Chris Allegretta <chrisa@asty.org
	* everything: New shortcut backend.  New structs subnfunc
	for menu functions and toggles and sc for shortcut keys, old 
	'shortcut' and 'toggles' structs are gone.  The current implementation 
	has a bunch of broken stuff (some of which is documented in BUGS). 
	Updated nanorc.5 with some mostly complete documentation on configuring.

2007-12-20  David Lawrence Ramsey  <pooka109@gmail.com>

	* AUTHORS, doc/faq.html: Update maintenance information.
	* NEWS: Resync with NEWS from the 2.0 branch.

2007-12-18  David Lawrence Ramsey  <pooka109@gmail.com>

	* nano.c (print_opt_full): Use strlenpt() instead of strlen(),
	so that tabs are placed properly when displaying translated
	strings in UTF-8, as found by Jean-Philippe Guérard.

2007-12-17  David Lawrence Ramsey  <pooka109@gmail.com>

	* configure.ac, doc/texinfo/nano.texi, nano.c (terminal_init):
	Change slang curses emulation support to turn off the same
	options as --enable-tiny, as it's hopelessly broken otherwise.
	* nano.c (disable_signals, main): Simplify terminal handling by
	using raw mode instead of cbreak mode.
	* text.c (execute_command): Call terminal_init() instead of just
	disable_signals() after executing the command, as the command
	may have changed the terminal settings.
	* ChangeLog.pre-2.1: Add missing attribution.
	* NEWS: Resync with NEWS from the 2.0 branch.

2007-12-10  David Lawrence Ramsey  <pooka109@gmail.com>

	* nano.c (main): Exit if initscr() fails.

2007-12-09  David Lawrence Ramsey  <pooka109@gmail.com>

	* faq.html: Add minor punctuation and wording fixes, and update
	various sections to account for Alpine.

2007-12-08  David Lawrence Ramsey  <pooka109@gmail.com>

	* prompt.c (do_statusbar_mouse, reset_statusbar_cursor,
	update_statusbar_line, need_statusbar_horizontal_update): Fix
	minor display and cursor placement problems when scrolling
	between pages at the statusbar prompt.

2007-12-07  David Lawrence Ramsey  <pooka109@gmail.com>

	* winio.c (get_mouseinput): Fix longstanding problem where mouse
	clicks on the statusbar prompt text wouldn't be recognized
	unless the NO_HELP flag was turned off.
	* doc/man/rnano.1, doc/man/fr/rnano.1: Update copyright notices,
	as Thijs Kinkhorst's copyrights have now been assigned to the
	Free Software Foundation.

2007-12-04  David Lawrence Ramsey  <pooka109@gmail.com>

	* nano.c (main), prompt.c (get_prompt_string), winio.c
	(do_replace_highlight): Per OKATA Akio's patch, with minor
	tweaks by me, add wnoutrefresh() calls after
	reset_(statusbar_)?cursor() calls, to ensure that the cursor is
	placed properly when using NetBSD curses.
	* nano.c (disable_mouse_support, enable_mouse_support): When
	toggling mouse support on or off, save and restore the mouse
	click interval.

2007-11-29  Jean-Philippe Guérard <jean-philippe.guerard@tigreraye.org>

	* doc/man/fr/*.1, doc/man/fr/nanorc.5: Fix copyright notices.
	The copyrights are disclaimed on these translations, but the
	copyrights of the untranslated works also apply.

2007-11-28  David Lawrence Ramsey  <pooka109@gmail.com>

	* doc/man/fr/nanorc.5: Remove trailing whitespace.

2007-11-17  David Lawrence Ramsey  <pooka109@gmail.com>

	* files.c (read_file): Improve autodetection of DOS and Mac
	format files to not trigger on carriage returns in the middle of
	files, as found by Kjell Braden.

2007-11-06  David Lawrence Ramsey  <pooka109@gmail.com>

	* doc/man/rnano.1, doc/man/fr/rnano.1: Update copyright notices,
	as Jordi Mallach's copyrights have now been assigned to the Free
	Software Foundation.

2007-11-05  David Lawrence Ramsey  <pooka109@gmail.com>

	* search.c (do_gotolinecolumn): Use a clearer error message if
	we enter an invalid line or column number, per Mike Melanson's
	suggestion.

2007-10-11  David Lawrence Ramsey  <pooka109@gmail.com>

	* doc/man/nano.1, doc/man/fr/nano.1, doc/texinfo/nano.texi,
	src/*.c, src/*.h: Update copyright notices, as Chris
	Allegretta's copyrights have now been assigned to the Free
	Software Foundation.
	* doc/man/nanorc.5, doc/man/fr/nanorc.5: Make copyright notices
	for these files consistent in style.
	* files.c (cwd_tab_completion): Remove unneeded assert.
	* files.c (username_tab_completion, cwd_tab_completion): Rename
	variable buflen to buf_len, for consistency.
	* files.c (input_tab): Disable completion of usernames,
	directories, and filenames if the cursor isn't at the end of the
	line, as it can lead to odd behavior (e.g. adding a copy of the
	entire match to the middle of the line instead of just the
	uncompleted part of the match).

2007-10-05  David Lawrence Ramsey  <pooka109@gmail.com>

	* src/*.c, src/*.h: Update copyright notices, as my copyrights
	have now been assigned to the Free Software Foundation.

2007-09-16  David Lawrence Ramsey  <pooka109@gmail.com>

	* winio.c (edit_scroll): Fix problem where the screen wouldn't
	be updated properly if you paged up with the first line of the
	file onscreen and the mark on.

2007-08-26  David Lawrence Ramsey  <pooka109@gmail.com>

	* doc/faq.html: Update links to the Free Translation Project.

2007-08-23  Jean-Philippe Guérard <jean-philippe.guerard@tigreraye.org>

	* doc/man/fr/*.1, doc/man/fr/nanorc.5: Add translation of new
	licensing terms.

2007-08-23  David Lawrence Ramsey  <pooka109@gmail.com>

	* doc/man/fr/*.1, doc/man/fr/nanorc.5: Delete translation of
	old licensing terms, until it can be updated.

2007-08-22  David Lawrence Ramsey  <pooka109@gmail.com>

	* COPYING.DOC: Add a copy of the GNU FDL version 1.2.
	* Makefile.am: Add COPYING.DOC to EXTRA_DIST.
	* doc/man/*.1, doc/man/nanorc.5, doc/man/fr/*.1,
	doc/man/fr/nanorc.5, doc/texinfo/nano.texi: Relicense to the GNU
	GPL version 3 or later/the GNU FDL version 1.2 or later with no
	Invariant Sections, Front-Cover Texts, or Back-Cover Texts.

2007-08-21  David Lawrence Ramsey  <pooka109@gmail.com>

	* doc/man/rnano.1, doc/man/fr/rnano.1: Add missing copyright
	notice from nano-tiny.1, which rnano.1 is based on.
	* doc/man/fr/nano.1, doc/man/fr/nanorc.5, doc/man/fr/rnano.1:
	Make all copyright notices consistent.

2007-08-16  David Lawrence Ramsey  <pooka109@gmail.com>

	* files.c (do_insertfile): Properly handle more cases of
	inserting a file with the mark on.
	* nano.c (copy_from_file): Properly handle more cases of
	uncutting text with the mark on.

2007-08-15  David Lawrence Ramsey  <pooka109@gmail.com>

	* Makefile.am: Remove erroneous backslash after
	ChangeLog.pre-2.1 in EXTRA_DIST, so that "make dist" works
	again.
	* files.c (do_insertfile): Make sure the mark is always properly
	positioned after inserting a file with the mark on.
	* nano.c (copy_from_file): Make sure the mark is always properly
	positioned after uncutting multiple lines with the mark on.

2007-08-11  David Lawrence Ramsey  <pooka109@gmail.com>

	* COPYING: Add a copy of the GNU GPL version 3.
	* configure.ac, *.c, *.h: Relicense to the GNU GPL version 3 or
	later.

2007-08-10  David Lawrence Ramsey  <pooka109@gmail.com>

	* files.c (username_tab_completion, cwd_tab_completion,
	input_tab): Update copyright notice to account for
	modifications.
	* utils.c (ngetdelim): Simplify.
	* utils.c (ngetline, ngetdelim): Update copyright notice to
	account for modifications.

2007-08-07  David Lawrence Ramsey  <pooka109@gmail.com>

	* nano.c (copy_from_file): Fix potential segfault, found by Paul
	Goins, after uncutting one line of text with the mark on by
	properly preserving the beginning of the mark.
	* nano.c (copy_from_file): Make sure the mark is always properly
	positioned after uncutting one line of text with the mark on.

2007-08-01  David Lawrence Ramsey  <pooka109@gmail.com>

	* nano.c (version): Display copyright notices.

2007-07-31  David Lawrence Ramsey  <pooka109@gmail.com>

	* configure.ac: Update copyright notice to account for
	modifications.

2007-07-29  David Lawrence Ramsey  <pooka109@gmail.com>

	* doc/faq.html: Update RPM links for nano 2.0.x.

2007-07-11  David Lawrence Ramsey  <pooka109@gmail.com>

	* files.c (copy_file): Assert that inn and out don't both point
	to the same file.

2007-07-10  David Lawrence Ramsey  <pooka109@gmail.com>

	* chars.c (nstrcasestr, mbstrcasestr, revstrstr, revstrcasestr,
	mbrevstrcasestr): Simplify and rewrite to use the strncasecmp()
	equivalents.

2007-07-09  David Lawrence Ramsey  <pooka109@gmail.com>

	* chars.c (nstrcasestr, mbstrcasestr, revstrstr, revstrcasestr,
	mbrevstrcasestr): Fix typo that broke the check for needle's
	being blank.
	* chars.c (mbstrncasecmp, mbstrnlen, mbstrpbrk,
	has_blank_mbchars): Simplify by using for loops instead of while
	loops where possible, to match the single-byte versions of these
	functions.
	* search.c (do_replace_loop): Fix problem where replacing e.g.
	single-byte characters with multibyte ones could result in
	openfile->totsize's being miscalculated.

2007-07-06  David Lawrence Ramsey  <pooka109@gmail.com>

	* chars.c (nstrcasestr, mbstrcasestr, revstrstr, revstrcasestr,
	mbrevstrcasestr): Return char* instead of const char*.

2007-07-02  David Lawrence Ramsey  <pooka109@gmail.com>

	* chars.c (nstrcasestr, mbstrcasestr, revstrstr, revstrcasestr,
	mbrevstrcasestr): For efficiency, return haystack/rev_start
	immediately if needle is blank.

2007-07-01  David Lawrence Ramsey  <pooka109@gmail.com>

	* chars.c (nstrncasecmp, mbstrncasecmp): For efficiency, return
	zero immediately if s1 and s2 point to the same string.

2007-06-30  David Lawrence Ramsey  <pooka109@gmail.com>

	* prompt.c (do_yesno_prompt): Remove redundant check for
	NO_HELP's being FALSE.

2007-06-28  David Lawrence Ramsey  <pooka109@gmail.com>

	* browser.c (do_browser), nano.c (do_mouse), prompt.c
	(do_statusbar_mouse, do_yesno_prompt): Further simplify
	processing of mouse events by consolidating if clauses.
	* winio.c (do_mouseinput): Return unconditionally if we get a
	mouse event that we don't deal with, instead of inside an else
	clause.

2007-05-29  David Lawrence Ramsey  <pooka109@gmail.com>

	* winio.c (do_mouseinput): Deal with clicks of the first mouse
	button again.  Oddly, ncurses built without --enable-ext-mouse
	needs this, but ncurses built with --enable-ext-mouse doesn't.

2007-05-25  David Lawrence Ramsey  <pooka109@gmail.com>

	* configure.ac, nano.c (main): Replace the current hackish check
	for a UTF-8 locale with a proper call to nl_langinfo().
	* winio.c (get_key_buffer): Fix inaccurate comments.

2007-05-22  David Lawrence Ramsey  <pooka109@gmail.com>

	* browser.c (do_browser), nano.c (do_mouse), prompt.c
	(do_statusbar_mouse, do_yesno_prompt), winio.c (do_mouseinput):
	Simplify processing of mouse events.  Instead of calling
	wenclose() to get the window a mouse event took place in and
	manually adjusting the returned coordinates to be relative to
	that window the mouse event took place in, call wmouse_trafo(),
	which does both.

2007-05-20  David Lawrence Ramsey  <pooka109@gmail.com>

	* browser.c (do_browser), nano.c (do_mouse), prompt.c
	(do_statusbar_mouse, do_yesno_prompt), winio.c (do_mouseinput):
	Fix processing of mouse events so that those we don't handle are
	ignored instead of being erroneously passed through.
	* winio.c (do_mouseinput): Simplify handling of mouse events
	involving the first mouse button by only dealing with releases.
	* winio.c (do_mouseinput): Improve mouse wheel support to only
	move the cursor if we're in the edit window or on the statusbar.

2007-05-15  David Lawrence Ramsey  <pooka109@gmail.com>

	* winio.c (do_mouseinput): Add mouse wheel support, per Helmut
	Jarausch's suggestion.  Now, if mouse support is enabled, and
	nano is using a version of ncurses compiled with the
	--enable-ext-mouse option, rolling the mouse wheel up or down
	will move the cursor three lines up or down.

2007-04-23  David Lawrence Ramsey  <pooka109@gmail.com>

	* TODO: Add entries for fixing limitations with pasting text and
	handling bad/incomplete UTF-8 sequences.

2007-04-22  David Lawrence Ramsey  <pooka109@gmail.com>

	* text.c (backup_lines): Avoid a segfault when the mark begins
	and ends on the line after the last line of the paragraph.

2007-04-21  David Lawrence Ramsey  <pooka109@gmail.com>

	* files.c (do_writeout): If we're in restricted mode, we're not
	allowed to write selections to files, so don't display the
	"Write Selection to File" prompt.
	* files.c (do_writeout): Simplify.

2007-04-19  David Lawrence Ramsey  <pooka109@gmail.com>

	* files.c (tail): Remove unneeded if statement.

2007-04-18  John M. Gabriele  <jmg3000@gmail.com>

	* doc/faq.html: Add a new section 4.14 (with minor tweaks by
	David Lawrence Ramsey) to explain how autoindent affects pasted
	text.

2007-04-18  David Lawrence Ramsey  <pooka109@gmail.com>

	* files.c (open_file): Open files using their full paths
	whenever possible, so that ~user/file.txt and "~user/file.txt"
	are treated the same way if ~user is a user's home directory.
	* files.c (real_dir_from_tilde): Simplify.
	* files.c (do_writeout): Properly display the warning in all
	cases if we try to save (a) an existing file under a different
	name, or (b) a file with no name under an existing file's name.
	* files.c (do_writeout): Rename variable different_name to
	do_warning, for clarity.
	* rcfile.c (parse_include): Open files using their full paths
	whenever possible, so that ~user/file.txt and "~user/file.txt"
	are treated the same way if ~user is a user's home directory.
	* rcfile.c (parse_include): Properly check for the included
	file's being a directory, a character file, or a block file.
	* rcfile.c (parse_include): For consistency, display the
	filename as the user entered it if we can't read the specified
	file.
	* winio.c (parse_kbinput): Interpret Cancel and Shift-Cancel.
	* winio.c (get_escape_seq_kbinput): Add missing comments.

2007-04-17  David Lawrence Ramsey  <pooka109@gmail.com>

	* files.c (real_dir_from_tilde): Fix long-standing problem,
	found by Justin Fletcher, where directory names that began with
	"~", but that weren't users' home directories, could be
	erroneously treated as users' home directories (e.g. "~d/" would
	be treated as "~daemon/").
	* files.c (input_tab): Don't bother checking if num_matches is
	less than zero, as it's a size_t and hence unsigned.

2007-04-16  David Lawrence Ramsey  <pooka109@gmail.com>

	* files.c (real_dir_from_tilde): Fix segfault, found by Justin
	Fletcher, when dealing with directory names that begin with "~",
	but that aren't users' home directories.

2007-04-11  Mike Frysinger  <vapier@gentoo.org>

	* doc/syntax/asm.nanorc, doc/syntax/c.nanorc,
	doc/syntax/sh.nanorc: Copy the regex that highlights trailing
	whitespace (with minor tweaks by David Lawrence Ramsey) from
	doc/syntax/java.nanorc to these files, as it's also useful in
	them.

2007-04-04  David Lawrence Ramsey  <pooka109@gmail.com>

	* AUTHORS, faq.html: Update email address.
	* winio.c (get_escape_seq_kbinput): Add escape sequences for
	Terminal.

2007-02-01  Benno Schulenberg  <bensberg@justemail.net>

	* global.c (shortcut_init): Reword the movement shortcut
	descriptions so that they use "Go to" instead of "Move to",
	since not all of them move the cursor in the same way.
	* global.c (shortcut_init): Reword the paragraph movement
	shortcut descriptions to more accurately describe how they work.
	* nano.c (usage): Reword the description of the -S/--smooth
	command line option in order to differentiate it from the
	associated toggle description.

2007-01-29  David Lawrence Ramsey  <pooka109@cox.net>

	* ChangeLog: Rework the 2.1 branch's changelog to be more
	readable, per Jordi Mallach's suggestion.
	* ChangeLog.pre-2.1: Move the 2.0 branch's changelog here, per
	Jordi Mallach's suggestion.
	* Makefile.am: Add ChangeLog.pre-2.1 to EXTRA_DIST.
	* src/help.c (help_init): Add a missing space to the "Execute
	Command" help text.
=======
Changes between v2.7.5 and v2.8.0:
----------------------------------

Benno Schulenberg (56):
      bindings: accept "q" and "x" to exit from help viewer and file browser
      bindings: group the three search-again shortcuts together
      bump version numbers and add a news item for the 2.8.0 release
      docs: mention some more differences with Pico in the Info document
      files: drop the pointless "[from ./]" from the insert-file prompt
      files: on second thought... keep the "[from ./]"
      input: count a manually entered unicode as one character
      moving: don't try to redraw lines that have gone outside the viewport
      moving: /do/ redraw the prior line when the viewport hasn't changed
      moving: the current chunk cannot be beyond the last chunk of a line
      oops -- that's what you get when you don't test things before pushing
      painting: don't try to start highlighting before column zero
      screen: don't push the longer-line indicator ($) to the next row
      spelling: keep the cursor at end-of-line if it was there
      startup: add option 'nopauses' to disable pausing after a warning
      tweaks: add a warning for a condition that should never occur
      tweaks: avoid a few needless reallocations
      tweaks: chuck some debugging stuff and some useless asserts
      tweaks: condense some declarations by reshuffling
      tweaks: correct some formatting irregularities in the FAQ
      tweaks: don't loop over an initializer
      tweaks: don't optimize for the wrong case
      tweaks: don't turn the mark off before it's needed
      tweaks: ehm... the warning is more important for the softwrap case
      tweaks: elide an intermediate variable
      tweaks: elide a small intermediate buffer
      tweaks: elide a variable
      tweaks: elide two variables, and condense some statements
      tweaks: factor out a bit of common code
      tweaks: fix compilation with --enable-tiny --enable-help
      tweaks: frob a couple of comments
      tweaks: frob some parentheses and other things, to be more consistent
      tweaks: gettextize a forgotten error message
      tweaks: make WhereIsNext available in browser in tiny version
      tweaks: mark a message for translation
      tweaks: optimize determining the number of columns that a text spans
      tweaks: reduce the scope of five variables, and frob some comments
      tweaks: remove a disabled warning, and adjust a translator hint
      tweaks: rename and shorten a small helper function
      tweaks: rename a variable and invert its logic
      tweaks: rename a variable, drop a false assert, and reshuffle a bit
      tweaks: rename three variables, to better distinguish bytes from columns
      tweaks: rename two variables, to be more distinctive
      tweaks: reshuffle some lines and adjust some comments
      tweaks: reshuffle some more lines and improve four comments
      tweaks: reshuffle some statements, to avoid double assignments
      tweaks: reshuffle the bindings to group things more logically
      tweaks: reshuffle three statements, and shorten a comment
      tweaks: reshuffle two declarations for a more consistent order
      tweaks: shorten a bit of logic
      tweaks: simplify and correct a computation
      tweaks: suggest a separate color scheme for root
      tweaks: trim a displayable string in a more efficient manner
      tweaks: use two extra variables to make it clearer what is being done
      usage: don't mention +LINE,COLUMN as an option, because it isn't
      wrapping: add the correct char length when skipping consecutive blanks

David Lawrence Ramsey (52):
      configure: don't check for the existence of iswspace() anymore
      display: don't compensate for chunks before firstcolumn
      display: don't draw more chunks than the screen can hold
      display: limit an optimization to non-softwrap mode
      display: make PageUp/PageDown use the correct beginning of the viewport
      docs: update README.GIT for gnulib-related changes
      files: revamp the insertion of a file, to be more like pasting text
      moving: determine the correct leftedge when paging up/down too
      replacing: fix spotlight() to highlight words properly in softwrap mode
      softwrap: account for firstcolumn in reset_cursor()
      softwrap: account for firstcolumn when checking for offscreen current
      softwrap: account for firstcolumn when scrolling up a line
      softwrap: account for softwrap in get_page_start()
      softwrap: account for softwrapped chunks when adding text
      softwrap: account for softwrap when checking whether current is offscreen
      softwrap: add two chunk-iterator functions
      softwrap: adjust firstcolumn when the window width changes
      softwrap: count softwrapped chunks properly in do_gotolinecolumn()
      softwrap: count softwrapped chunks properly in do_uncut_text()
      softwrap: count softwrapped chunks properly in read_file()
      softwrap: improve End's behavior with softwrapped chunks
      softwrap: improve Home's behavior with softwrapped lines
      softwrap: improve Left and Right's behavior with softwrapped chunks
      softwrap: improve PageUp and PageDown's behavior with softwrapped chunks
      softwrap: improve Up and Down's behavior with softwrapped chunks
      softwrap: iterate through softwrapped chunks better in do_mouse()
      softwrap: iterate through softwrapped chunks in adjust_viewport()
      softwrap: iterate through softwrapped chunks in edit_scroll()
      softwrap: move the updating of a softwrapped line to a new function
      softwrap: prepare for a more flexible viewport
      softwrap: remove and replace workarounds for firstcolumn
      softwrap: save and restore firstcolumn when copying text
      softwrap: save and restore firstcolumn when internally spell-fixing text
      softwrap: save and restore firstcolumn when replacing text
      softwrap: save firstcolumn when justifying, restore it when unjustifying
      speller: fix replacing marked text in the alternate spell checker
      syntax: nanorc: color also the option "linenumbers" as being valid
      tweaks: add a parameter to do_home() and do_end()
      tweaks: fix a comment typo
      tweaks: mention nano's ability to read from standard input in usage()
      tweaks: move comments outside of if blocks in break_line()
      tweaks: prepare for improvements to do_home() and do_end()
      tweaks: remove cluttering #ifdefs from break_line()
      tweaks: rename need_horizontal_scroll() to line_needs_update()
      tweaks: slightly optimize an allocation in display_string()
      tweaks: stop converting text once we overshoot span columns
      undo: fix undoing/redoing insertions, since they no longer do partitioning
      usage: mention the -g/--showcursor option
      weeding: remove ensure_line_is_visible()
      weeding: remove maxlines and related code
      weeding: remove partitioning and related stuff from do_insertfile()
      weeding: remove partitioning and related stuff from do_justify()

Hans-Bernhard Broeker (1):
      tweaks: make sure calls to <ctype.h> functions/macros use "unsigned char"

Mike Frysinger (19):
      add an explicit test for set_escdelay()
      add support for gnulib
      assume getopt_long support is always available
      assume regex.h support is always available
      configure: require autoconf-2.69/automake-1.14
      configure: require gettext-0.18.3, and drop our bundled m4 files
      drop the getdelim/getline fallback functions
      drop the glib fallback for snprintf/vsnprintf
      drop the isblank/iswblank fallback functions
      drop the wchar.h/wctype.h/stdarg.h checks
      drop various str fallback functions
      fix build on systems without pwd.h
      handle builds on systems without termios.h
      handle deficient signal systems
      pull in the glob module from gnulib
      pull in the lstat module from gnulib
      pull in the nl_langinfo & wcwidth modules from gnulib
      pull in the sys_wait module from gnulib
      tweaks: disable gnulib's workaround for the globbing of broken symlinks


Changes between v2.7.4 and v2.7.5:
----------------------------------

Benno Schulenberg (65):
      bump version numbers and add a news item for the 2.7.5 release
      files: leave out the confusing "[from ./]" when prompting for a command
      general: stop the spell checker from crashing after the changes in search
      justify: reduce the character count when trimming trailing spaces
      painting: account for index maybe being zero after the preceding change
      painting: advance only when both start /and/ end match are zero-length
      painting: do not bluntly ignore zero-length start matches -- handle them
      painting: do not let a match for 'end' overlap a match for 'start'
      painting: don't look at the current multidata when coloring a line
      painting: make use of the multidata of the preceding line
      painting: mark an unpaired start match as CWOULDBE
      painting: properly detect a change in start/end matches
      painting: properly look for a new start match only after the end match
      painting: stay within the line when skipping zero-length matches
      painting: when skipping a zero-length match, skip a character, not a byte
      rcfile: don't accept empty regexes for syntax coloring
      replacing: compensate cursor position only for replacements /before/ it
      replacing: detect when the whole region has already been covered
      replacing: don't go outside of the selected region
      replacing: ignore the first match when the user said no
      replacing: start at the region's edge instead of one step before it
      replacing: stop searching in a region when edge of buffer is reached
      screen: don't compare a character index with a column position
      screen: ehm... no, that was wrong: page_start /is/ a column position
      search: begin from where we are, to be able to find the first \B
      search: make the \b and \B anchors work correctly in both directions
      spelling: correctly adjust the length of a single-line region
      spelling: don't unnecessarily fiddle with the viewport
      startup: report an error when the given line or column number is invalid
      statusbar: display at most three consecutive alert messages
      tweaks: adjust some comments, reshuffle a line, and use a while loop
      tweaks: adjust two comments, to be more accurate
      tweaks: adjust whitespace after preceding changes
      tweaks: and rename another variable, to keep in style
      tweaks: chuck some obscuring debugging stuff
      tweaks: condense a comment, rename a variable, and use a while loop
      tweaks: differentiate single-regex matches from paired-regex matches
      tweaks: discard the now unused multidata-resetting routine
      tweaks: elide a variable plus its corresponding dark logic
      tweaks: fiddle with some wordings in the texinfo document
      tweaks: free an option string also when it was invalid
      tweaks: move a comment and rewrap a line
      tweaks: normalize some paragraph formatting in the FAQ
      tweaks: rearrange some code to separate softwrap and normal mode more
      tweaks: rename a function, and drop an unneeded parameter
      tweaks: rename a function, to show it refers to screen rows
      tweaks: rename another variable, to be shorter
      tweaks: rename a variable and condense an if
      tweaks: rename a variable -- lines refers to buffer, rows to screen
      tweaks: rename a variable, to be more general
      tweaks: rename a variable, to be more general and match one elsewhere
      tweaks: rename some variables, to better distinguish rows from lines
      tweaks: rename some variables, to show they refer to screen rows
      tweaks: rename two variables, and always pass a valid result back
      tweaks: rename two variables, to avoid double negatives
      tweaks: reshuffle an assignment and trim some comments
      tweaks: reshuffle a test to a better place
      tweaks: reshuffle three variables
      tweaks: scrap a bunch of debugging lines -- they obscure the logic
      tweaks: scrap some debugging stuff
      tweaks: slightly speed up the change detection for multiline matches
      tweaks: swap two blocks of code to reduce the number of #ifdefs
      tweaks: update some copyright years
      tweaks: use a cheaper way to detect an end-of-line
      tweaks: use a subtraction instead of a counter

David Lawrence Ramsey (16):
      docs: mention the ability to read from stdin
      screen: don't hide two-column characters at left edge in softwrap mode
      tweaks: adjust and correct some comments
      tweaks: always directly do a refresh when the margin changes
      tweaks: do a comparison a bit differently in do_output() and do_deletion()
      tweaks: fix compilation when configured with --enable-tiny
      tweaks: improve comments and formatting in update_line()
      tweaks: let update_line() return the correct value on error
      tweaks: reduce duplicate code in new_magicline() and move_to_filestruct()
      tweaks: rename a variable and adjust some types in edit_scroll()
      tweaks: rename a variable in edit_redraw(), to make sense
      tweaks: rename a variable in edit_scroll(), to make sense
      tweaks: rename mouse_x & mouse_y to mouse_col & mouse_row in do_mouse()
      tweaks: rename the functions for moving to and copying from a buffer
      tweaks: rewrap two lines and fix two typos
      tweaks: split the grafting code off from copy_from_buffer()

Mike Frysinger (3):
      syntax: c++: add override keyword
      syntax: gentoo: flag mixed whitespace
      syntax: gentoo: match .eblit files too


Changes between v2.7.3 and v2.7.4:
----------------------------------

Benno Schulenberg (48):
      build: check for GNU-style word-boundary support also in the tiny version
      build: include the old Changelogs in the tarball
      build: install the Info and Html manuals even when 'makeinfo' is missing
      build: move all documentation into a single directory
      build: move the syntax files out of the doc/ directory
      build: rename the sample config file, so it will be colored like a nanorc
      bump version numbers and add a news item for the 2.7.4 release
      copy: properly set preferred x position when region was marked backwards
      cut: indicate a buffer as modified only if actually something was deleted
      docs: add a new Changelog -- a list of the short commit messages
      docs: bring some air into the FAQ, so that <Ctrl+Up/Down> become useful
      docs: fix some spellos and trim some trailing tabs in the old Changelog
      docs: rename the Changelogs to indicate which periods they cover
      docs: snip some obsolete items from the FAQ, and normalize its dates
      docs: standardize the dates in the old Changelog
      inserting: adjust the desired x position (don't restore the old one)
      screen: examine the whole line when painting, to set the correct info
      search: make a regex with a beginning-of-word anchor work correctly
      softwrap: don't scroll half a page when just a few lines will do
      softwrap: when pasting an overlong line, ensure it is fully visible
      softwrap: when typing M-/, ensure the last line is fully visible
      syntax: html: be more precise with tags, and paint attribute names
      tweaks: adjust whitespace after the previous change
      tweaks: chuck a couple of useless asserts
      tweaks: condense two ifs to a single one
      tweaks: discard some conditional compilation
      tweaks: don't compare a character offset with a column position
      tweaks: don't use a variable for two different purposes
      tweaks: fix compilation when configured with --disable-wrapping
      tweaks: frob some comments, and transform one variable
      tweaks: frob some comments, elide a variable, and use 'while' loops
      tweaks: if there is no end match, there is nothing to paint
      tweaks: miscellaneous frobbings
      tweaks: rearrange and reindent some lines in the painting routines
      tweaks: remove the cluttering conditional compilation of a parameter
      tweaks: rename another variable, to show it refers to columns not chars
      tweaks: rename a variable, chuck an assert, and frob a comment
      tweaks: rename three painting variables, to be more distinct
      tweaks: rename two variables, for distinguishing characters from columns
      tweaks: rename two variables to be just one as they play the same role
      tweaks: rename two variables, to be more telling
      tweaks: reshuffle a statement to a better place and condense some comments
      tweaks: set the length of a search match in a clearer manner
      tweaks: slightly condense a function and its comment
      tweaks: terminate lots of sentences with a period in the old Changelog
      tweaks: the starting point for painting /cannot/ be offscreen
      tweaks: when allow_tabs is FALSE, allow_files is irrelevant
      undo: properly create separate items for deletes at different positions

David Lawrence Ramsey (7):
      screen: properly place the cursor after inserting a file
      softwrap: ensure the current line is fully visible after inserting a file
      tweaks: avoid an unnecessary fiddling with current_y in do_mouse()
      tweaks: line numbers are ssize_t, not int
      tweaks: move a setting, fix a type, and rearrange a line in do_mouse()
      weeding: remove another unnecessary setting of openfile->current_y
      weeding: remove unnecessary settings of openfile->current_y

Felix Janda (1):
      speller: fix build when tiny build is enabled


Changes between v2.7.2 and v2.7.3:
----------------------------------

Arturo Borrero González (1):
      syntax: nftables: add two new families, and add set references

Benno Schulenberg (62):
      binding: use plain codes instead of function calls for the jumping keys
      binding: use the code for the Enter directly instead of a function call
      bump version numbers and add a news item for the 2.7.3 release
      chars: optimize for the most common case
      chars: use memory on the stack instead of calling malloc() and free()
      docs: clarify the difference between "Esc Esc ddd" and "M-V xxxxxx"
      files: don't change embedded newlines into nulls in filenames
      files: show newlines in filenames as ^J also in error messages
      general: simplify the detection of a SIGWINCH
      history: avoid crashing when the positionlog file is malformed
      history: don't bother encoding search items -- they cannot contain newlines
      history: encode newlines in filenames as nulls
      history: search for the two position numbers from EOL instead of BOL
      history: search items *can* contain newlines -- encoded NUL bytes
      input: detect again when both Shift and Ctrl are being held on a VT
      input: discard a verbatim 0x0A or 0x00 byte, depending on the mode
      input: don't crash when receiving a KEY_CANCEL
      locking: disable an annoying warning
      memory: don't bother making a snug fit for things that will be freed soon
      oops: forgot to add and amend this to the previous commit
      po: update translations and regenerate POT file and PO files
      prompt: do not treat a leading newline in a filename specially
      prompt: represent newlines as ^J instead of breaking the bar
      screen: display byte value 0x0A in the right places as ^@ or as ^J
      screen: draw new content immediately, to prevent color flashes
      screen: show an embedded newline in filenames as ^J instead of ^@
      text: avoid a crash when a spell-checked line has gotten shorter
      text: discard the undo stack after formatting and after spell checking
      titlebar: always pass a pathname through display_string()
      tweaks: adjust some comments and indentation and ordering
      tweaks: chuck a special case, and reduce the scope of two variables
      tweaks: condense the setting of three flags
      tweaks: conditionalize a function that is not used in the tiny version
      tweaks: delete a bunch of unneeded asserts
      tweaks: don't bother making the next line of an end point NULL
      tweaks: don't bother reallocating a string of which there is only one
      tweaks: don't bother trimming the final newline from a position item
      tweaks: drive closer to the edge
      tweaks: elide a counter and a comparison
      tweaks: elide a function that is called just once
      tweaks: move a setting to a better place -- it needs setting just once
      tweaks: put some prototypes in the proper order, and move a bit of code
      tweaks: remove pointless or obscuring asserts
      tweaks: rename a function to describe what it does
      tweaks: rename a function to something less abbrevy
      tweaks: rename a variable and rewrap two lines
      tweaks: rename a variable to be shorter and clearer
      tweaks: rename five variables, for uniformity with a few others
      tweaks: rename four variables, for density and aptness
      tweaks: rename three variables, for visibility
      tweaks: rename three variables, to be more fitting
      tweaks: rename two variables, for self-documentation
      tweaks: retype, rename, and reshuffle a function
      tweaks: start searching at a better place
      tweaks: use a faster comparison
      tweaks: use a slightly faster comparison
      tweaks: use memory on the stack instead of calling malloc() and free()
      tweaks: write two pieces of conditionalized code like all others
      undo: there are just two forms of deletion: backspacing and deleting
      utils: go on to parse the line number even if the column number is bad
      utils: slightly speed up the calculation of the size of a buffer
      version: properly mention --disable-wordcomp if it was used

David Lawrence Ramsey (2):
      tweaks: adjust the type of two arguments
      tweaks: elide two unneeded variables from line numbering mode


Changes between v2.7.1 and v2.7.2:
----------------------------------

Benno Schulenberg (53):
      binding: allow to rebind the word-completion function, and document it
      binding: always initialize some keycode variables to a standard value
      build: add configure option --disable-wordcomp to disable word completion
      build: clean out the revision.h file, to make 'make distcheck' pass
      bump version numbers and add a news item for 2.7.2
      docs: correct and improve the description of --disable-wrapping
      docs: harmonize the indentation of the README, and tweak some wordings
      docs: mention that a foreground color can be bright
      docs: mention that libncursesw5-dev is needed for building from git
      docs: note Sumedh as the author of the word-completion feature
      docs: tweak some lines in the NEWS file
      files: trying to open a non-existent file will never succeed
      input: add the shifted PageUp and PageDown keycodes produced by VTE
      input: distinguish <Alt+Left> from <Alt+Right> on an rxvt terminal
      input: distinguish <Shift+Home> from <Home> on an rxvt terminal
      mouse: use the correct screen width for calculating the cursor position
      oops: the yesno prompt for replacing does not want a visible cursor
      po: update translations and regenerate POT file and PO files
      prompt: remove two fragments of dead code
      rcfile: actually avoid opening directories and devices
      rcfile: actually don't try to open things that cannot be syntax files
      rcfile: check the vital shortcuts just once, not for every included file
      rcfile: let a 'set fill' reenable hardwrapping
      screen: do a refresh before changing the value of 'focusing'
      screen: don't hide the cursor when --constantshow is used
      screen: don't request an update of the edit window for every yesno prompt
      screen: don't restore the previous menu after a yesno prompt
      screen: remove an unneeded blanking of the statusbar
      screen: switch the cursor back on only in the main loop
      screen: use the correct width to determine whether a softwrap occurred
      spelling: correctly restore the selected region
      startup: activate restricted mode earlier, so --help will reflect it
      syntax: don't leave the number after 'fill' and 'tabsize' in red
      syntax: give the statistics part of a git patch a different color
      tweaks: add a few translator hints
      tweaks: correct the wording of a string
      tweaks: delete some obscuring debugging stuff
      tweaks: factor out a small function
      tweaks: fix compilation when configured with --enable-tiny
      tweaks: get rid of some spurious textual references to edit_refresh()
      tweaks: miscellaneous frobbings and rewrappings
      tweaks: move a cursor-on switch to a more logical place (again)
      tweaks: move a switching on of the cursor to a more logical place
      tweaks: remove a bit of obscuring conditional compilation
      tweaks: remove an annoying conditional compilation of an argument
      tweaks: remove a superfluous cleanup call
      tweaks: remove some cluttering conditional compilation
      tweaks: remove some more annoying conditional compilation
      tweaks: rename two variables to make more sense
      tweaks: replace some unneeded direct calls of edit_refresh()
      tweaks: reshuffle some things in a more linear manner
      tweaks: reshuffle three initializations and trim some comments
      tweaks: use a while loop when the end point is not known in advance

David Lawrence Ramsey (8):
      docs: add info about Slang to README.GIT, and improve info about glib2
      files: give feedback when restricted mode prevents overwriting a file
      general: gettextize three overlooked statusbar messages
      input: make Shift+Alt+Arrow work properly on rxvt and Eterm terminals
      input: properly check the full escape sequences for all keys
      moving: always account for the margin when in line numbering mode
      tweaks: adjust the type of four lockfile variables
      tweaks: conditionalize a bit of softwrap code

Mike Frysinger (3):
      configure: fix ncurses lib symbol checking
      syntax: avoid using black colors
      syntax: gentoo: various updates

Sumedh Pendurkar (1):
      new feature: complete a fragment to a longer word found in the buffer


Changes between v2.7.0 and v2.7.1:
----------------------------------

Benno Schulenberg (71):
      binding: fix some duplicated carets and too restrictive menus
      binding: properly conditionalize the UTF-8 parts
      binding: supply the keycode for most special keys directly
      binding: use arrows instead of words to designate the cursor keys
      browser: add the option showcursor, to place the cursor on the highlight
      build: avoid an annoying warning at configure time
      build: avoid updated PO files being remerged upon every make
      bump version numbers and add a news item for 2.7.1
      docs: add 'linenumbers' and 'numbercolor' to the sample nanorc
      docs: add 'set linenumbers' and '--linenumbers' to the texinfo document
      docs: brush up the TODO list
      docs: mark some rebindable function names as deprecated
      docs: mention the existence of the toggles in the man page
      docs: refresh some info in the FAQ
      docs: remove a reference that was only valid on Debian systems
      files: alert about an unwritable file also in the tiny version
      files: mark a new buffer as modified after inserting command output
      general: add the option -g/--showcursor, to match Pico
      general: include word-jumping and block-jumping into the tiny version
      history: slate the search-history migration for removal
      input: don't return zero when some function is completely unbound
      input: handle the "resize key" in a better way
      input: keep the Ctrl+Arrow keys working when their synonyms are unbound
      moving: adjust the Y position to correspond with the changed X position
      po: update translations and regenerate POT file and PO files
      rcfile: add an option to customize the color of line numbers
      screen: defeat a VTE bug by doing an extra cursor move and update
      screen: keep the help items aligned in more configurations
      screen: keep the help items nicely lined up also in the tiny version
      screen: move the margin determination to the main loop
      screen: refresh when a new magicline is added in line-numbering mode
      screen: repaint the edit window in a single place -- the main loop
      screen: suppress line numbers when the terminal is very narrow
      scrolling: don't put the last line at the bottom when softwrap in on
      scrolling: use a comparison that will work also in softwrap mode
      softwrap: ensure the current line is fully visible when moving in it
      softwrap: initialize 'editwincols' early, for computing the number of wraps
      softwrap: scroll 'enough' whenever it surpasses 'amount'
      softwrap: scroll the current line fully into view when jumping words
      softwrap: scroll when searching lands on an overlong bottom line
      startup: allow to rebind the RegExp toggle also in the tiny version
      startup: always initialize 'margin' and 'editwincols'
      syntax: make the contents of the X-Bugs field in a PO file stand out
      syntax: show another deprecated keyword (replace2) in red
      syntax: show deprecated keywords in red, and 'wordchars' in green
      tweaks: adjust some comments and reduce the scope of some variables
      tweaks: adjust some indentation
      tweaks: adjust some whitespace and a comment
      tweaks: compile two parameters unconditionally
      tweaks: don't bother redrawing some lines when whole screen will be redrawn
      tweaks: don't spread a statement over multiple lines unnecessarily
      tweaks: elide an unneeded variable
      tweaks: elide a parameter that is always FALSE
      tweaks: fix compilation when configured with --enable-tiny
      tweaks: frob a few comments
      tweaks: make several small adjustments to the documentation
      tweaks: make tiny nano a teeny bit smaller
      tweaks: move a variable that doesn't need to be global
      tweaks: preen some comments, and reshuffle a few ifdefs
      tweaks: remove a band-aid condition that is no longer needed
      tweaks: remove a bit of duplication
      tweaks: remove a superfluous blanking of the statusbar
      tweaks: remove a superfluous setting, and add a comment
      tweaks: remove a useless cursor movement
      tweaks: rename a function to better describe what it does
      tweaks: rename a variable, for consistency
      tweaks: reshuffle a couple of items
      tweaks: reshuffle an if statement
      tweaks: reshuffle some ifdefs, for less fragmentation
      tweaks: stop compiling the whole_word_only parameter conditionally
      tweaks: use hard-baked keycodes where possible

Faissal Bensefia (1):
      new feature: the ability to show line numbers before the text

Rishabh Dave (2):
      rcfile: reject key names that are wrong or too long
      rcfile: reject rebindings that have no effect or have side effects


Changes between v2.6.3 and v2.7.0:
----------------------------------

Benno Schulenberg (47):
      AUTHORS: add Mahyar Abbaspour and Mike Scalora for their contributions
      bottombar: only count help items that have a shortcut bound to them
      bump version numbers and add a news item for 2.7.0
      docs: explain how to contribute code
      files: close a lockfile after reading it
      input: ignore the resize "key", to prevent reporting an unbound key
      input: look at the modifier keys only when compiled on Linux
      input: unset a softmark whenever a character is typed
      moving: make PgUp and PgDown functional also in very flat terminals
      new feature: allow text selection by holding Shift with the cursor keys
      po: update translations and regenerate POT file and PO files
      prompt: don't crash when the terminal is less than four columns wide
      prompt: leave always at least the last character of the answer visible
      prompt: mouse clicks that moved the cursor need no further processing
      prompt: recompose the statusbar text whenever the window size changes
      prompt: set up the prepared answer before allowing to change it
      prompt: show a trailing $ when the tail of the answer is offscreen
      prompt: use angular brackets as continuation mark, as Pico does
      prompt: work around a VTE bug by outdancing an ncurses optimization
      restore the GNU marker in nano's name
      screen: continue to function also in a terminal with very few lines
      screen: don't die when the window is narrower than four columns
      screen: retain the placewewant also when using an alternate speller
      startup: don't crash when dying early
      statusbar: leave out the brackets when the message is very long
      tweaks: adjust indentation after previous change
      tweaks: adjust indentation after previous change
      tweaks: adjust some braces and indentations
      tweaks: adjust some comments and remove needless asserts
      tweaks: don't bother avoiding unneeded rewrites of the promptbar
      tweaks: don't bother trimming the prompt again
      tweaks: elide a variable and rename some others
      tweaks: fix compilation when configured with --with-slang
      tweaks: fix compilation with --disable-histories
      tweaks: fix compilation with --enable-tiny again
      tweaks: improve some indentation and reshuffle a few lines
      tweaks: make a call in one place instead of in four different ones
      tweaks: remove an unneeded check, reshuffle some things, add a comment
      tweaks: rename a function and adjust indentation
      tweaks: rename three variables
      tweaks: rename two variables, to make some sense
      tweaks: reshuffle some stuff in a more logical order
      tweaks: reshuffle some things, and remove a misplaced comment
      tweaks: simplify the determination of the number of shown help items
      tweaks: use a separate function to ask ncurses for keycodes
      update the copyright notices
      update the license text to the preferred version


Changes between v2.6.2 and v2.6.3:
----------------------------------

Benno Schulenberg (53):
      bump version numbers and add a news item for 2.6.3
      chars: don't persist when only one of the compared sequences is invalid
      chars: make searching case-insensitively some ten percent faster
      chars: properly compare strings of different lengths
      chars: remove a special case that never occurs
      chars: remove superfluous afterchecks
      chars: straighten out the flow of a loop, so it is easier to follow
      debug: add a timing instrument to the main search routine
      docs: tweak some spacing and spelling
      files: avoid a warning about not being able to write a lockfile
      files: make allowances for 32-bit PIDs
      input: after an Esc, don't discard starter byte of a multibyte sequence
      input: be more strict in recognizing certain escape sequences
      input: don't bother putting a keycode into byte range
      input: don't use a function call when a literal value will do
      input: fix a pasto from eight years ago, from commit e347efb
      input: ingest as verbatim just one control code or one or two escapes
      input: make the Ctrl+Arrow keys work on a Linux console
      locking: remove any lock files when dying
      po: update translations and regenerate POT file and PO files
      screen: don't look at placewewant but at where we actually were and are
      screen: remove redundant redrawings of the entire edit window
      shortcuts: group the setting of key string and keycode into one function
      shortcuts: remove any unnecessary classifying of keys
      spelling: don't abort when a misspelled word isn't found, just note it
      spelling: don't consider digits as word parts, because GNU spell doesn't
      tweaks: add a variable, in preparation for making returning easier
      tweaks: adjust indentation after previous changes
      tweaks: adjust indentation after the previous changes
      tweaks: check earlier on for sufficient length of the sequence
      tweaks: compile a parameter unconditionally
      tweaks: condense three asserts into a single one
      tweaks: consistently use a parameter instead of a struct element
      tweaks: correct one comment, and adjust another
      tweaks: don't bother setting meta_key to false when a key is invalid
      tweaks: don't optimize for a special case -- it is far too seldom
      tweaks: don't use a function call when reference to the variable will do
      tweaks: elide the global variable 'func_key'
      tweaks: move some debugging stuff, and move modified editing keys too
      tweaks: move the modified editing keys again
      tweaks: normalize some indentation
      tweaks: normalize some whitespace and adjust several comments
      tweaks: reduce two comparisons to a single one
      tweaks: remove some unnecessary keycodes from a switch statement
      tweaks: rename a function, and adjust some comments
      tweaks: rename a struct element, to be more fitting
      tweaks: rename three constants, for clarity, and hardcode two others
      tweaks: replace a three-case switch with an if and an else
      tweaks: reshuffle two ifs for a little more speed
      tweaks: restore earlier conditions to prevent superfluous redrawings
      tweaks: return quicker from the key parsing routine
      tweaks: unconditionally compile a couple of parameters
      usage: show that the option --wordchars needs an argument

Rishabh Dave (1):
      shortcuts: zero the value of 'toggle' for keys that are not toggles


Changes between v2.6.1 and v2.6.2:
----------------------------------

Benno Schulenberg (81):
      browser: elide another call of opendir()
      browser: trim all trailing slashes (just in case there are more)
      build: refresh the git description whenever something is recompiled
      build-sys: ignore the revision header file
      bump version numbers and add a news item for 2.6.2
      chars: delete a now-unused function
      chars: don't try to see a character in an empty line
      chars: invalid sequences are not blank, nor text, nor punctuation
      chars: look at bytes in their context, so only valid sequences are accepted
      chars: measure invalid sequences and unassigned codepoints more quickly
      chars: plug a gushing memory leak
      chars: represent the high-bit controls more intelligibly
      chars: speed up the determination whether something is a control character
      chars: speed up two reverse-searching routines a bit
      chars: the representation of a control character is always two bytes
      color: forget about aborting the precalculation for multiline regexes
      color: integrate the hilite attribute into the pair number
      color: push the resets further when start and end match are equal
      color: refresh the screen whenever the active syntax changes
      credits: don't bother blanking the second line nor the help lines
      debug: remove duplicate information
      files: beep whenever writing out a file fails
      input: accept only the four iTerm sequences that actually get handled
      input: add some missing keycodes to the parsing routine
      input: consider only O, o and [ as starters of multi-character sequences
      input: don't crash when the window is resized during verbatim input
      input: don't drop a keystroke on the floor when the terminal resizes
      input: don't drop the first byte when user starts typing during loading
      input: elide an extra buffer for inserting stuff into the text
      input: plug a memory leak
      input: report keystroke M-[ as being unbindable instead of just unbound
      input: treat Ctrl+Alt+key different from Esc followed by Ctrl+key
      moving: don't do an automatic smart home with Ctrl+Up and Ctrl+Down
      new feature: add the option --wordchars, to set extra word characters
      new feature: functions to jump to previous or following block of text
      po: update translations and regenerate POT file and PO files
      screen: again, look at the bytes in their context
      screen: avoid converting each character twice from multibyte to wide
      screen: avoid looking up the width of whitespace and control codes
      screen: don't check for every character whether there is still enough space
      screen: don't simulate a sigwinch but directly reinitialize the screen
      screen: elide another intermediate buffer for every visible character
      screen: elide the intermediate buffer for every single character
      screen: include a workaround only when compiling against older ncurses
      search: match a beginning-of-line anchor just once per line
      tweaks: adjust a comment for removed definitions
      tweaks: adjust a couple of comments
      tweaks: adjust indentation after the previous change, and edit comments
      tweaks: avoid a runtime error when compiled with -fsanitize=undefined
      tweaks: avoid two compiler warnings
      tweaks: compute the sizes of the subwindows in a more direct manner
      tweaks: correct a comment
      tweaks: delete an element that is always FALSE and never used
      tweaks: don't bother resetting the Unicode code holder
      tweaks: don't call a thing malloc... when it doesn't call malloc()
      tweaks: elide a bit of code duplication
      tweaks: elide a typedef, as it now has just one element
      tweaks: elide two unneeded variables
      tweaks: factor out a common condition
      tweaks: fix compilation with --enable-tiny
      tweaks: fuse two handlings of a delete key, and fix a comment
      tweaks: improve a few comments
      tweaks: improve two comments
      tweaks: move a debug statement to its proper place, and improve aspect
      tweaks: put all the movement functions together
      tweaks: put similar things together
      tweaks: put some case labels closer to their statements
      tweaks: put the case labels (the keycodes) in a more sensible order
      tweaks: rearrange a function in my style, and rename a variable
      tweaks: reduce the scope of two variables
      tweaks: rename another variable, for aptness
      tweaks: rename a variable and a type, to be less confusing
      tweaks: rename a variable to be more accurate
      tweaks: rename a variable, to clarify it refers to columns, not to bytes
      tweaks: rename a variable -- to match others and to be more concise
      tweaks: rename two variables, to match others
      tweaks: shuffle the resetting of a counter to the tail of the routine
      tweaks: straighten out the flow of a loop
      tweaks: trim some comments, and simplify a condition
      tweaks: use mallocstrcpy() instead of strdup(), for a graceful death
      utils: don't bother to check line and column for NULL

David Lawrence Ramsey (1):
      input: provide feedback on the Unicode digits typed so far

Dirkjan Ochtman (1):
      syntax: allow capital letters in Rust struct/trait names

Rishabh Dave (4):
      browser: elide a variable by fusing the uses of 'newpath' and 'path'
      browser: select an inaccessible directory also when tabbed
      tweaks: reduce the number of wattron/wattrof calls
      utils: accept mistypings and common separators between line and column


Changes between v2.6.0 and v2.6.1:
----------------------------------

Benno Schulenberg (20):
      browser: don't use a term that is not explained in the documentation
      bump version numbers and add a news item for 2.6.1
      docs: adjust the description of the verbatim function
      linter: refresh the edit window in order to actually place the cursor
      main: let the main loop restore the main menu, if needed
      moving: allow specifying negative numbers in "Go To Line"
      moving: ignore any number when ^Y or ^V is given
      po: make the linguas script regenerate the POT file
      po: update translations and regenerate POT file and PO files
      tabs: compute the number of required spaces without iterating
      tweaks: add a reporter's name
      tweaks: add a translator hint
      tweaks: elide an impossible case
      tweaks: elide an intermediate copy of some line data
      tweaks: elide an unneeded variable
      tweaks: fix a date and an email address
      tweaks: normalize a type, and rewrap a line
      tweaks: reshuffle two lines and improve two comments
      tweaks: rewrap a bunch of lines and some comments
      tweaks: try to distinguish between keystrokes and characters

Jordi Mallach (2):
      docs: bump pointers to the newest version available
      docs: use https for nano-editor.org, and drop the www

Luke Francl (1):
      syntaxes: add highlighting rules for Rust

Rishabh Dave (1):
      browser: don't seem to enter a directory when it is inaccessible


Changes between v2.5.3 and v2.6.0 since 2016 April 1:
-----------------------------------------------------

Benno Schulenberg (192):
      all: eradicate SVN's $Id$ tags
      backups: take an unlikely condition into account
      browser: add a binding for the refresh function
      browser: after getting a mouse click, don't try any further interpretation
      browser, files: use full path in error message when in confined mode
      browser: fix a memory leak
      browser: keep the highlight in the same spot or column, when possible
      browser: make Ctrl+Left and Ctrl+Right jump to left and right column
      browser: make the calculation of files-per-line a straightforward one
      browser: provide tab completion also outside of the working directory
      browser: rearrange the search loop to elide two unneeded variables
      browser: show a message when getcwd() fails, instead of just beeping
      browser: show an error message when selecting an inaccessible directory
      browser: use the reselection mechanism also after resizing and after help
      browser: when nothing was found, restore the global search flags
      build-sys: detect a build from git and show its short commit hash
      build-sys: identify a build from git not as one from svn
      build-sys: ignore .patch, .orig and .swp files
      chars: a control character can never be an invalid multibyte sequence
      chars: ensure that files are sorted also when strncasecmp() is strange
      chars: make comparing multibyte strings twice as fast
      chars: the representation of control characters is always two columns wide
      docs: add a list of the important changes since version 2.2.6
      docs: mention that pkg-config is needed when building from git
      docs: rename a file, to be less confusing
      docs: update the version number for the upcoming release
      files: allocate enough space for the prompt when finding a lock file
      files: do not call free on the result of dirname
      files: do not use two variables for two different purposes each
      files: don't reuse a variable that may have been modified by dirname()
      files: fix a memory leak
      files: free all the multidata when a file is saved, then recompute it
      files: handle systems that disallow NULL as first parameter of getcwd
      files: it is fine to "change" the name of a nameless buffer
      files: limit the number of attempts at climbing up the directory tree
      files: make an 'if' more transparent and snip an unneeded condition
      files: miscellaneous tweaks of braces, comments, and variable names
      files: prevent dereferencing a possible (although very unlikely) NULL
      files: prune a message to be less than 76 characters
      files: recompute the multidata only when the applicable syntax changed
      files: remove a redundant condition
      files: remove a superfluous condition, and do not ignore a "No"
      files: remove the special 'quiet' mechanism for not overwriting messages
      files: report an unwritable file in a separate message
      files: rewrap en reindent some lines
      files: tweak the function tail() and rename two variables
      files: upgrade the locking errors, so they will not be overwritten
      files: when opening a buffer, make sure to expand a tilde in its name
      files: when the requested operating directory cannot be set, fail
      files: when writing a lockfile fails, continue loading the file
      help: add an extra blank line to the lists of searching shortcuts
      help: bring some air into the lists of shortcuts, giving the eye a hold
      help: only speak of Control and Meta sequences
      i18n: advise the translators about the maximum length of some strings
      i18n: gather three more translatable strings into the POT file
      input: after an unknown sequence, reenable cursor only when in main menu
      input: distinguish an unknown escape sequence from an unbound key
      input: don't allocate too much, and don't move too many
      input: don't take multiple keystrokes to be a single sequence
      input: give more detailed feedback when an unbound key is struck
      input: properly restore waiting mode, or retain non-waiting mode
      input: simplify a bit of code, reducing a four-case switch to a single if
      input: trim some oververbose comments
      input: write a few ifs more compactly
      inserting: differentiate not finding a file from not finding a string
      inserting: don't bother zero-terminating every single character
      inserting: prune a duplicate variable
      inserting: prune some superfluous settings, and do one differently
      inserting: reshuffle some conditions for a teeny bit more speed
      inserting: strip a carriage return before copying the line
      inserting: treat also the final \r of a Mac file as a newline
      justify: enable cursor display also for the first keystroke afterward
      keyboard: reshuffle some lines to avoid an empty while
      locking: don't try to read more bytes than the buffer can hold
      po: correctly advertise whether new PO files have arrived
      po: delete an obsolete script
      po: regenerated POT file, and updated PO files from TP
      prompt: properly save and restore the x position in the statusbar
      rcfile: disallow 'bind' and 'unbind' in an included file
      rcfile: make an error message equal to another, and more informative
      README.GIT: reformat the text a bit
      remove the GNU marker from nano's name
      replacing: properly detect when we've rereached the starting position
      screen: a full refresh is only needed when softwrap is on
      screen: avoid redrawing a line twice
      screen: catch a window resize also when the keyboard is in nodelay mode
      screen: check for the most frequent character first: a space
      screen: concentrate the setting of placewewant
      screen: displaying the cursor position should not suppress it next time
      screen: don't always set 'edit_refresh_needed' when adjusting edittop
      screen: don't redraw some lines when doing a full refresh anyway
      screen: don't redraw the current line unnecessarily
      screen: elide a variable and serialize some logic for clarity
      screen: fix compilation when configured with --enable-tiny
      screen: improve the conditional placement of a help-line item
      screen: make better use of the available space in the titlebar
      screen: rename a variable, because 'disable' sounds too permanent
      screen: rename 'edit_refresh_needed' to 'refresh_needed'
      screen: when using positionlog, show as much of the file as possible
      scrolling: catch the special case of reading a file from standard input
      scrolling: center the cursor when inserted stuff does not fit on screen
      scrolling: don't scroll too much when having to bridge blank lines
      scrolling: elide a variable, to make clearer that edittop is being moved
      search: avoid saving and restoring placewewant when bracket matching
      search: don't set placewewant when we are just iterating
      search: elide an unneeded function
      search: find, and thus delete, only exact matches from history
      search: fix compilation when configured with --enable-tiny
      searching: don't keep track of current_y, but calculate it at the end
      search: modify a function to take a length as parameter instead of a word
      search: rename a variable and a function, for clarity and contrast
      search: terminate the loop a tiny bit earlier when spell checking
      search: untangle two lines and tweak two comments
      search: when looking for whole words, examine the entire line
      search: when polling the keyboard, consume all waiting keystrokes
      softwrap: adjust for current_x when computing the amount to scroll
      speller: don't proceed when the user aborts the searching
      speller: simplify the calculation of the width of the misspelled word
      spelling: don't partition the file for replacements in a marked region
      spelling: gettextize the next-word message
      spelling: if rereading the file fails, don't destroy the current buffer
      spelling: pass the correct position of the cursor
      spelling: retreat one x position, to not miss the first word
      spelling: separate the fixing of different words with a short pause
      startup: show an error message when argument of --operatingdir is invalid
      statusbar: add a non-beeping message type that does not get overwritten
      statusbar: prevent error messages from overwriting each other
      syntax: don't call getcwd() with a NULL pointer
      tabbing: avoid recalculating the length of the first match every time
      tabbing: don't null-terminate a directory name on the slash but after it
      tabbing: don't refresh the edit window when nothing was printed on it
      tabbing: fix erroneous use of strnlenpt()
      tabbing: make sure to refresh the edit window when returning to it
      tabbing: refresh the edit window in case a previous tab listed names
      tabbing: refresh the window also when Goto-Dir in browser was cancelled
      tabbing: rename four variables, snipping a redundant part
      text: add an undo item before starting to comment or uncomment lines
      text: after undoing or redoing something, unset the mark
      text: remove a pointless setting of an undo element; it is never used
      text: remove a redundant undo element
      text: store the new file size in the undo item also when joining lines
      titlebar: snip two superfluous tests for having enough space
      TODO: tidy up the punctuation
      tweaks: add come comments and rename a variable
      tweaks: adjust a couple of comments
      tweaks: a few last tiny adjustments before release
      tweaks: avoid a warning when configured with --disable-wrapping
      tweaks: do an assignment in a more transparent way
      tweaks: elide an unneeded variable
      tweaks: elide four #ifdefs, improve one comment and unwrap some others
      tweaks: elide unneeded intermediate assignments
      tweaks: fix compilation when configured with --enable-tiny
      tweaks: fix compilation when configured with --enable-tiny --enable-browser
      tweaks: harmonize some indentations, elide an #ifdef, and rewrap a line
      tweaks: harmonize the routine for tabs with the one for spaces
      tweaks: improve a couple of comments
      tweaks: improve a few comments
      tweaks: improve a few comments
      tweaks: make advancing and retreating more symmetrical
      tweaks: make the conditions for statusbar blanking more transparent
      tweaks: more consistently use * instead of [0] when checking for '\0'
      tweaks: normalize some whitespace
      tweaks: normalize some whitespace
      tweaks: put some conditions in a better order: the main one first
      tweaks: rearrange some key reading stuff in a clearer way
      tweaks: reindent and rewrap a few lines, and shorten a comment
      tweaks: remove an unnecessary intermediate assignment
      tweaks: remove a redundant assignment
      tweaks: remove a superfluous call of 'wnoutrefresh'
      tweaks: remove a superfluous condition
      tweaks: remove a superfluous setting of 'refresh_needed'
      tweaks: remove the fiddling with an unrelated setting
      tweaks: remove two redundant assignments
      tweaks: rename a function, and move the sorting there too
      tweaks: rename a variable, because nothing is returned there
      tweaks: rename a variable, for aptness
      tweaks: rename a variable, to indicate better what it contains
      tweaks: rename a variable, to indicate what it contains
      tweaks: rename some variables for contrast
      tweaks: rename some variables to be more readable
      tweaks: rename two more variables
      tweaks: rename two variables, and elide a third
      tweaks: rename two variables, to avoid using a name for different purposes
      tweaks: reshuffle a few things
      tweaks: trim or improve some comments, and rewrap two lines
      tweaks: use an available macro to silence a compiler warning
      undo: start renumbering from the head of the paste, not from its tail
      utils: distinguish between width (columns) and length (bytes)
      utils: provide a failure message for all uses of 'fsfromline'
      utils: rename some variables, to match those in strnlenpt()
      utils: snip a superfluous check for NULL
      version: cover the copyrights that are not assigned to the FSF

Chris Allegretta (2):
      add /intl to gitignore
      rename README.SVN -> README.GIT and take out the branch details

Mike Frysinger (3):
      more svn->git updates
      README.GIT: update a few more points to match current tree
      syntax: changelog: support more bug/issue styles

Mike Scalora (3):
      keyboard: recognize four escape sequences produced by iTerm2
      new feature: comment/uncomment current line or selected lines
      text: keep the file size correct when undoing/redoing a comment/uncomment

Rishabh Dave (2):
      browser: keep the same file selected when the directory contents change
      browser: move all openings and closings of a directory to the same function
>>>>>>> origin/tomato-shibby-RT-AC
