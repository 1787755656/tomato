                                  _   _ ____  _
                              ___| | | |  _ \| |
                             / __| | | | |_) | |
                            | (__| |_| |  _ <| |___
                             \___|\___/|_| \_\_____|

                                  Changelog

<<<<<<< HEAD
Version 7.37.0 (20 May 2014)

Daniel Stenberg (20 May 2014)
- THANKS: 18 new contributors for 7.37.0

- RELEASE-NOTES: synced with 85f4075bdbf3
  
  Possibly the final update before release...

Steve Holme (20 May 2014)
- README: Added some outstanding tasks to the TODO list
  
  Added a couple of outstanding tasks to the TODO section that we didn't
  get time to do before the release.

Daniel Stenberg (20 May 2014)
- http2: make connection re-use work
  
  Http2 connections would wrongly get closed after each individual
  request.
  
  Co-authored-by: Tatsuhiro Tsujikawa
  Bug: http://curl.haxx.se/bug/view.cgi?id=1374

- [Fabian Frank brought this change]

  ALPN: fix typo in http/1.1 identifier
  
  According to https://tools.ietf.org/html/draft-ietf-tls-applayerprotoneg-05
  it is "http/1.1" and not "http/1.0".

Steve Holme (20 May 2014)
- build-openssl.bat: Added check for OpenSSL source directory

- build-openssl.bat: Added default source directory when not specified
  
  Added a default source directory so the user doesn't have to specify
  one - the same as that, which the Visual Studio project files expect
  the OpenSSL dependencies to be in.

- Makefile.am: Fixed missing / in VC10+ project file generation

- INSTALL: Updated MSVC 6 caveats
  
  To use an up to date download link as well as remove duplicate
  information.

- INSTALL: Updated for new Visual Studio project files

- build: Slight rename of new LIB_* makefile file variables
  
  In order to try and be consistent between curl and libcurl renamed the
  recently introduced LIB_* makefile file variables.

- build: Removed old Visual Studio project files

Daniel Stenberg (18 May 2014)
- maketgz: two more CRLF
  
  grrr, missed them in my previous fix

- test1014: GSS-API is only in curl-config. not in curl
  
  Follow-up to commit 121bcfee5d1. curl-config --features now lists
  GSS-API but it is not a listed feature in curl -V. This should probably
  be synchronized.

- test1134: verify CREDSPERREQUEST for HTTP
  
  Verifies that the change in 68f0166a92 works as intended and that
  different HTTP auth credentials to the same host still re-uses the
  connection properly.

- maketgz: remove CRLF newlines

Steve Holme (18 May 2014)
- Makefile.am: Corrected a couple of grammar errors

- Makefile.am: Added new Visual Studio project file generation for curl tool

- Makefile.inc: Added resource file to assist Visual Studio project generation

- [Daniel Stenberg brought this change]

  maketgz: run make vc-ide before make dist
  
  To get the VC project files generated before packaging!

- Makefile.am: Added new Visual Studio project file generation for libcurl

- Makefile.am: Removed old Visual Studio project file generation

Daniel Stenberg (17 May 2014)
- RELEASE-NOTES: synced with 831f6dd1d986c9

Steve Holme (17 May 2014)
- build: Fixed another tabulation issue in the Visual Studio file generator

Dan Fandrich (17 May 2014)
- axtls: Fixed too long source line

Daniel Stenberg (17 May 2014)
- configure: add GSS-API to supported features
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1344
  Reported-by: Michael Osipov

- configure: add SPNEGO to supported features
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1343
  Reported-by: Michael Osipov

Dan Fandrich (16 May 2014)
- axtls: Add a TODO to a potential blocking call with no timeout

Daniel Stenberg (16 May 2014)
- curl_easy_getinfo.3: clarify CURLINFO_SIZE_DOWNLOAD
  
  It counts "body" data only, no meta data, no headers.

- curl_easy_setopt.3: prefer XFERINFOFUNCTION to PROGRESSFUNCTION

- HTTP: CREDSPERREQUEST is for HTTP too
  
  Commit 517b06d657ace (in 7.36.0) that brought the CREDSPERREQUEST flag
  only set it for HTTPS, making HTTP less good at doing connection re-use
  than it should be. Now set it for HTTP as well.
  
  Simple test case
  
  "curl -v -u foo:bar localhost --next -u bar:foo localhos"
  
  Bug: http://curl.haxx.se/mail/lib-2014-05/0127.html
  Reported-by: Kamil Dudka

- RELEASE-NOTES: synced with 53a5b95c21586

- CURLINFO_SSL_VERIFYRESULT: assign at first connect call
  
  The variable wasn't assigned at all until step3 which would lead to a
  failed connect never assigning the variable and thus returning a bad
  value.
  
  Reported-by: Larry Lin
  Bug: http://curl.haxx.se/mail/lib-2014-04/0203.html

- timers: fix timer regression involving redirects / reconnects
  
  In commit 0b3750b5c23c25f (released in 7.36.0) we fixed a timeout issue
  but instead broke the timings.
  
  To fix this, I introduce a new timestamp to use for the timeouts and
  restored the previous timestamp and timestamp position so that the old
  timer functionality is restored.
  
  In addition to that, that change also broke connection timeouts for when
  more than one connect was used (as it would then count the total time
  from the first connect and not for the most recent one). Now
  Curl_timeleft() has been modified so that it checks against different
  start times depending on which timeout it checks.
  
  Test 1303 is updated accordingly.
  
  Bug: http://curl.haxx.se/mail/lib-2014-05/0147.html
  Reported-by: Ryan Braud

Steve Holme (15 May 2014)
- darwinssl: Updated copyright following recent changes

Nick Zitzmann (14 May 2014)
- darwinssl: fix potential crash when attempting to copy an identity
  from a P12 file
  
  This could've happened if SecPKCS12Import() returned noErr _and_ no
  identity.

Steve Holme (12 May 2014)
- RELEASE-NOTES: Synced with 52d16c84d2

Daniel Stenberg (12 May 2014)
- openssl: unbreak PKCS12 support
  
  Regression introduced in ce362e8eb9c (7.31.0)
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1371
  Reported-by: Dmitry

Steve Holme (11 May 2014)
- Makefile.inc: Added resource file to assist Visual Studio project generation

- build: Fixed some tabulation issues in the Visual Studio file generator

- tests: Fixed up DIGEST-MD5 tests following commit 8342b6e1dc

- sasl: Fixed missing qop in the client's challenge-response message
  
  Whilst the qop directive isn't required to be present in a client's
  response, as servers should assume a qop of "auth" if it isn't
  specified, some may return authentication failure if it is missing.

- tool_operate.c: Fixed compilation warning
  
  An enumerated type is mixed with another type.

- Makefile.inc: Separated the lib and lib/vtls source file variables
  
  To cater for the automatic generation of the new Visual Studio project
  files, moved the lib file list into a separated variable so that lib
  and lib/vtls can be referenced independently.

- RELEASE-NOTES: Synced with 0ab2c444b5

- Makefile.b32: Fixed for vtls changes
  
  Follow up fix to commits a47c142a88, 11e8066ef9 and 92b9ae5c5d.
  
  Bug: http://curl.haxx.se/mail/lib-2014-05/0025.html
  Reported and assisted by: Jon Torrey

Daniel Stenberg (9 May 2014)
- lib1506: make sure the transfers are not within the same ms
  
  Just to make sure the test is properly repeatable.
  
  Bug: http://curl.haxx.se/mail/lib-2014-05/0081.html
  Reported-by: Henrik

- libtests: add a wait_ms() function
  
  This allows a libcurl test to portably sleep for a given number of
  milliseconds.

Steve Holme (9 May 2014)
- tool_operate.c: Fixed TAB is white space from commit 5b8ae0a985

- tool_urlglob.c: Fixed compilation warning
  
  An enumerated type is mixed with another type.

- tool_operate.c: Fixed compilation warnings
  
  An enumerated type is mixed with another type.

- getinfo.c: Fixed compilation warning
  
  The indicated statement is not reachable.

Daniel Stenberg (9 May 2014)
- CONTRIBUTE: mention our Bug/Reported-by commit style

Kamil Dudka (9 May 2014)
- http: avoid auth failure on a duplicated header
  
  ... 'WWW-Authenticate: Negotiate' received from server
  
  Reported by: David Woodhouse
  Bug: https://bugzilla.redhat.com/1093348

Daniel Stenberg (9 May 2014)
- cacertinmem: fix memory leak
  
  While "just" an example it still isn't nice to leak memory.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1368
  Fixed-by: Marko

- TODO: firefox will soon support SSL (HTTPS) to proxy

Dan Fandrich (9 May 2014)
- test87: Get rid of extraneous square brackets in tag

Daniel Stenberg (8 May 2014)
- [Patrick Watson brought this change]

  mk-ca-bundle: added -p
  
  -p takes a list of Mozilla trust purposes and levels for certificates to
  include in output.  Takes the form of a comma separated list of
  purposes, a colon, and a comma separated list of levels.

- FAQ: Added 5.18 Does libcurl use threads?

Dan Fandrich (7 May 2014)
- RELEASE-NOTES: Added contributor

- [Aaro Koskinen brought this change]

  configure: Don't set LD_LIBRARY_PATH when cross-compiling
  
  Most of LD_LIBRARY_PATH adjustments are already guarded, but not all.
  
  The patch fixes cross-compilation failure when libidn is present.

Steve Holme (7 May 2014)
- [Tatsuhiro Tsujikawa brought this change]

  http2: Compile with latest nghttp2
  
  Now nghttp2_submit_request returns assigned stream ID, we don't have
  to check stream ID using before_stream_send_callback.  The
  adjust_priority_callback was removed.

- curl.1: Added missing --login-options option
  
  ...and removed ;OPTIONS from --user as that functionality was removed
  in 7.34.0.

- tool_help: Fixed missing --login-options option
  
  ...and removed ;OPTIONS from --user as that functionality was removed
  in 7.34.0.

- url.c: Fixed compilation warning/error
  
  Depending on compiler line 3505 could generate the following warning or
  error:
  
  * warning: ISO C90 forbids mixed declarations and code
  * A declaration cannot appear after an executable statement in a block
  * error C2275: 'size_t' : illegal use of this type as an expression

- TODO: Fixed some spelling mistakes

- TODO: Add support for concurrent connections in ftpserver.pl

- build: Fixed file format version number in VC12 solution files
  
  Unlike previous versions of Visual Studio the VC12 solution file format
  does not increment the format version number, but instead, only changes
  the version comment text.
  
  This incorrectly set version number would cause problems for any third
  party piece of software that would read the solution file expecting the
  version number to be 12.00 and found it to be 13.00, such as some build
  accelerators.
  
  Verified against a freshly created solution file which was generated
  with VC12.

- [Ivo Bellin Salarin brought this change]

  build-openssl.bat: Corrected use of angled brackets in help output
  
  Angled brackets were used in the help output to indicate that the
  compiler and platform arguments are mandatory. Unfortunately this
  caused a "< was unexpected at this time" error as the characters are
  interpreted as re-direction characters when not escaped.

Dan Fandrich (6 May 2014)
- RELEASE-NOTES: changed encoding to UTF-8

Daniel Stenberg (6 May 2014)
- RELEASE-NOTES: synced with 5de8d84098db1bd2

- fix_hostname: strip off a single trailing dot from host name
  
  Primarily for SNI, we need the host name without a trailing dot.
  "https://www.example.com." resolves fine but fails on SNI unless the dot
  is removed.
  
  Reported-by: Leon Winter
  Bug: http://curl.haxx.se/mail/lib-2014-04/0161.html

- curl: bail on cookie use when built with disabled cookies

- [Daniel Johnson brought this change]

  Enable poll on darwin13
  
  Poll has long been broken on Mac OS X. Starting with 10.9 (darwin13) it
  now works correctly so this patch enables it there.

- curl_easy_setopt.3: added the proto for CURLOPT_SSH_KNOWNHOSTS

Dan Fandrich (5 May 2014)
- tests: Use standard libtest return codes when relevant

- test1513: Don't return an uninitialized variable on init failure

Daniel Stenberg (5 May 2014)
- [Jeff King brought this change]

  curl_multi_cleanup: ignore SIGPIPE better
  
  When looping and closing each individual connection left open, the
  SIGPIPE ignoring was not done and could thus lead to death by signal 13.
  
  Bug: http://thread.gmane.org/gmane.comp.version-control.git/238242

- TODO: the FTP HOST command is now in RFC 7151

- TODO: Update date and version in man pages
  
  Mentioned in bug #1342

- schannel: don't use the connect-timeout during send
  
  As there's a default connection timeout and this wrongly used the
  connection timeout during a transfer after the connection is completed,
  this function would trigger timeouts during transfers erroneously.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1352
  Figured-out-by: Radu Simionescu

- mprintf: allow %.s with data not being zero terminated
  
  If the precision is indeed shorter than the string, don't strlen() to
  find the end because that's not how the precision operator works.
  
  I also added a unit test for curl_msnprintf to make sure this works and
  that the fix doesn't a few other basic use cases. I found a POSIX
  compliance problem that I marked TODO in the unit test, and I figure we
  need to add more tests in the future.
  
  Reported-by: Török Edwin

Steve Holme (4 May 2014)
- RELEASE-NOTES: Synced with 4febbedc5a

- curl_ntlm_core: Fixed use of long long for VC6 and VC7
  
  Commit 07b66cbfa4 unfortunately broke native NTLM message support in
  compilers, such as VC6, VC7 and others, that don't support long long
  type declarations. This commit fixes VC6 and VC7 as they support the
  __int64 extension, however, we should consider an additional fix for
  other compilers that don't support this.

- config-win32.h: Fixed HAVE_LONGLONG for Visual Studio .NET 2003 and up
  
  Fixed the HAVE_LONGLONG declaration as long long is supported in Visual
  Studio .NET 2003 (VC7.1) onwards.

Daniel Stenberg (4 May 2014)
- openssl: biomem->data is not zero terminated
  
  So printf(%s) on it or reading before bounds checking is wrong, fixing
  it. Could previously lead to reading out of boundary.
  
  Reported-by: Török Edwin

- BUILD.WINDOWS: update URL for windows prereqs

- easy_perform: spelling mistake in error message

Steve Holme (1 May 2014)
- Makefile.am: Added build-openssl.bat as README file references it
  
  Missed in commit dce748d3f1.

- build: Fixed Visual Studio project file generator missing some files
  
  As of commit 6cdd88f22c the Visual Studio project file generator would
  skip the first and last file from each group of files.

- build: Added OpenSSL VC build helper for side-by-side compilations

- build: Added Visual Studio 2003 .NET (VC7.1) project files
  
  Carrying on from commit 11025613b9 added VC7.1 project files which are
  capable of supporting side-by-side compilation, as well as support for
  some of the third-party libraries curl uses.

Dan Fandrich (1 May 2014)
- test585: Fixed NULL pointer dereference in fopen

Steve Holme (30 Apr 2014)
- build: Fixed generation when source file names contain spaces
  
  This shouldn't happen with the source files in the repository, but
  fixed the output when there are spurious files lying around that
  contain spaces. For example "pop3 - Copy.c"
  
  By including the offending source file in the project files the user
  can then see the file and remove it if necessary.

- build: Added VC7 and VC7.1 support to the project file generator
  
  Note: VC7.1 templates are currently not available.

- build: Added VC6 and VC12 support to the project file generator

- build: Added VC11 support to the project file generator

- build: Added VC9 and VC10 support to the project file generator

- build: Added Visual Studio project file generator
  
  Added a batch file for generating the Visual Studio project files from
  the new template files.

- copyright: Updated following recent edits

Dan Fandrich (29 Apr 2014)
- runtests.pl: Improved the check for a crash during torture tests

- Added a few more const where possible

- unit1395: Fixed null pointer dereference on torture test

Daniel Stenberg (27 Apr 2014)
- [Tatsuhiro Tsujikawa brought this change]

  http2: Compile with latest nghttp2
  
  commit 6d5f40238028f2d8c (Apr 27) or later nghttp2 is now required

Steve Holme (27 Apr 2014)
- build: Added other VC6 output files to the .gitignore list

- build: Corrected libcurl PDB file name for x64 builds in VC8 through VC12

- build: Added Visual Studio .NET (VC7) project files
  
  Carrying on from commit 11025613b9 added VC7 project files which are
  capable of supporting side-by-side compilation, as well as support for
  some of the third-party libraries curl uses.

- build: Added Visual Studio 6.0 (VC6) project files
  
  Carrying on from commit 11025613b9 added a more thorough version of
  the VC6 project files which are capable of supporting side-by-side
  compilation, as well as support for some of the third-party libraries
  curl uses.

Daniel Stenberg (26 Apr 2014)
- INFILESIZE: fields in UserDefined must not be changed run-time
  
  set.infilesize in this case was modified in several places, which could
  lead to repeated requests using the same handle to get unintendent/wrong
  consequences based on what the previous request did!

Kamil Dudka (25 Apr 2014)
- nss: propagate blocking direction from NSPR I/O
  
  ... during the non-blocking SSL handshake

Daniel Stenberg (23 Apr 2014)
- test325: verify --proto-redir https=>http

- handler: make 'protocol' always specified as a single bit
  
  This makes the findprotocol() function work as intended so that libcurl
  can properly be restricted to not support HTTP while still supporting
  HTTPS - since the HTTPS handler previously set both the HTTP and HTTPS
  bits in the protocol field.
  
  This fixes --proto and --proto-redir for most SSL protocols.
  
  This is done by adding a few new convenience defines that groups HTTP
  and HTTPS, FTP and FTPS etc that should then be used when the code wants
  to check for both protocols at once. PROTO_FAMILY_[protocol] style.
  
  Bug: https://github.com/bagder/curl/pull/97
  Reported-by: drizzt

Steve Holme (23 Apr 2014)
- build: Added Visual Studio 2013 (VC12) project files
  
  Carrying on from commit 11025613b9 added VC12 project files which are
  capable of supporting side-by-side compilation, 32-bit and 64-bit
  builds as well as support for some of the third-party libraries curl
  uses.

Dan Fandrich (23 Apr 2014)
- cyassl: Use error-ssl.h when available
  
  Versions since at least 2.9.4 renamed error.h to error-ssl.h, so use
  whichever one is available.

Steve Holme (22 Apr 2014)
- RELEASE-NOTES: Synced with 386ed2d590

Daniel Stenberg (22 Apr 2014)
- gtls: fix NULL pointer dereference
  
  gnutls_x509_crt_import() must not be called with a NULL certificate
  
  Bug: http://curl.haxx.se/mail/lib-2014-04/0145.html
  Reported-by: Damian Dixon

- curl_global_init_mem: bump initialized even if already initialized
  
  As this makes curl_global_init_mem() behave the same way as
  curl_global_init() already does in that aspect - the same number of
  curl_global_cleanup() calls is then required to again decrease the
  counter and then eventually do the cleanup.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1362
  Reported-by: Tristan

Kamil Dudka (22 Apr 2014)
- nss: implement non-blocking SSL handshake

- nss: split Curl_nss_connect() into 4 functions

Dan Fandrich (22 Apr 2014)
- tests: Fixed torture test for tests 1526 & 1527

Marc Hoersken (22 Apr 2014)
- sockfilt.c: clean up threaded approach and add documentation

- sockfilt.c: zero initialize variable

- sockfilt.c: fixed getting stuck waiting for MinGW stdin pipe

Daniel Stenberg (22 Apr 2014)
- configure: use the nghttp2 path correctly with pkg-config
  
  When --with-nghttp2 was used (without a given path), the
  PKG_CONFIG_LIBDIR varialbe could get clobbered and ruin a proper
  detection of the library.
  
  Reported-by: Dilyan Palauzov
  Bug: http://curl.haxx.se/mail/lib-2014-04/0159.html

- [Dilyan Palauzov brought this change]

  configure: fix wrong comment
  
  copy and paste error

Steve Holme (21 Apr 2014)
- build: Fixed output name for Release builds in VC10 and VC11

Marc Hoersken (20 Apr 2014)
- sockfilt.c: properly handle disk files, pipes and character input

- sockfilt.c: ignore non-key-events and continue waiting for input

- sockfilt.c: free memory in case of memory allocation errors

- multi.c: fix possible invalid memory access in case nfds overflows
  
  ufds might not be allocated in case nfds overflows to zero while
  extra_nfds is still non-zero. udfs is then accessed within the
  extra_nfds-based for loop.

- netrc.c: fix multiple possible dereferences of null pointers

- parsedate.c: check sscanf result before passing it to strlen

- telnet.c: check sscanf results before passing them to snprintf

- telnet.c: fix possible use of uninitialized variable

- telnet.c: fix possible use of non-null-terminated strings

- url.c: fix possible use of non-null-terminated string with strlen
  
  Follow up on b0e742544be22ede33206a597b22682e51e0c676

- tool_writeout.c: initialize string pointer variable

- tool_formparse.c: fix possible use of non-null-terminated strings

- url.c: fix possible use of non-null-terminated string with strlen

- connect.c: fix multiple possible dereferences of null pointers
  
  In case the first address in the tempaddr array is NULL,
  the code would previously dereference an unchecked null pointer.

- tftp.c: fix possible dereference of null pointer

- tool_urlglob.c: added some comments to clarify for loop conditions
  
  I was tempted to change those to >= 0 until I saw that this is
  actually a for loop that terminates once i underflows.

- socks_sspi.c: added pointer guards to FreeContextBuffer calls
  
  The FreeContextBuffer SAL declaration does not declare the pointer
  as optional, therefore it must not be NULL.

- md5.c: fix use of uninitialized variable

- curl_schannel.c: added explicit cast of structure pointers

- curl_schannel.c: fix possible dereference of null pointer

Steve Holme (18 Apr 2014)
- RELEASE-NOTES: Synced with 33e0cba8f1

- curl_easy_setopt: Updated CURLOPT_URL to include IMAP PARTIAL FETCH example

- imap: Extended FETCH support to include PARTIAL URL specifier

- url.c: Fixed typo in comment

- curl_easy_setopt: Updated CURLOPT_URL to include IMAP query string examples

- test810: Updated to use new IMAP URL query string functionality

- imap: Expanded mailbox SEARCH support to use URL query strings

- imap: Added support for parsing URL query strings
  
  Added support for parsing query strings from the URL as defined by
  RFC-5092.

- imap: Introduced the SEARCH state

- imap: Fixed untagged response detection when no data after command
  
  Should a command return untagged responses that contained no data then
  the imap_matchresp() function would not detect them as valid responses,
  as it wasn't taking the CRLF characters into account at the end of each
  line.

- build: Added Visual Studio 2012 (VC11) project files
  
  Carrying on from commit 11025613b9 added VC11 project files which are
  capable of supporting side-by-side compilation, 32-bit and 64-bit
  builds as well as support for some of the third-party libraries curl
  uses.

- build: Corrected Visual Studio solutions for DLL Release x64

Daniel Stenberg (17 Apr 2014)
- README.http2: mention some alt-svc thoughts

Steve Holme (16 Apr 2014)
- Makefile.am: Missed separator in commit fbaa2f8660

- build: Added Visual Studio 2010 (VC10) project files
  
  Carrying on from commit 11025613b9 added VC10 project files which are
  capable of supporting side-by-side compilation, 32-bit and 64-bit
  builds as well as support for some of the third-party libraries curl
  uses.

Dan Fandrich (14 Apr 2014)
- url: only use if_nametoindex() if IFNAMSIZ is available

- symbian: fixed typo in comment

Steve Holme (9 Apr 2014)
- build: Added Visual Studio 2008 (VC9) project files
  
  Carrying on from commit 11025613b9, added VC9 project files which are
  capable of supporting side-by-side compilation, 32-bit and 64-bit
  builds as well as support for some of the third-party libraries curl
  uses.

- sas: Added DIGEST-MD5 qop-option validation in native challange handling
  
  Given that we presently support "auth" and not "auth-int" or "auth-conf"
  for native challenge-response messages, added client side validation of
  the quality-of-protection options from the server's challenge message.

Daniel Stenberg (8 Apr 2014)
- dist: include the projects/ files in releases
  
  ... the recent MSVC project files added by Steve Holme

- strerror: fix comment about vxworks' strerror_r buffer size
  
  Bug: http://curl.haxx.se/mail/lib-2014-04/0063.html
  Reported-by: Jeroen Koekkoek

Steve Holme (6 Apr 2014)
- sasl: Added forward declaration of structures following recent changes
  
  To avoid urldata.h being included from the header file or that the
  source file has the correct include order as highlighted by one of
  the auto builds recently.

- RELEASE-NOTES: Synced with 5cdb61abb2

- tests: Disabled DIGEST-MD5 tests when running with SSPI enabled

- sasl: Fixed compilation warning
  
  warning: no previous prototype for 'Curl_sasl_create_digest_md5_message'

- sasl: Added curl_memory.h include as per test 1132

- sasl: Fixed compilation warning in SSPI builds
  
  warning: 'sasl_digest_get_key_value' defined but not used

- sasl: Corrected missing free of decoded challenge message from 607883f13c

- sasl: Corrected add of Curl_sasl_decode_digest_md5_message() from 2c49e96092

- sasl: Post DIGEST-MD5 SSPI code tidy up
  
  * Added comments to SSPI NTLM message generation
  * Added comments to native DIGEST-MD5 code
  * Removed redundant identity pointer

- sasl: Corrected pre-processor inclusion of SSPI based DIGEST-MD5 code
  
  When CURL_DISABLE_CRYPTO_AUTH is defined the DIGEST-MD5 code should not
  be included, regardless of whether USE__WINDOWS_SSPI is defined or not.
  This is indicated by the definition of USE_HTTP_NEGOTIATE and USE_NTLM
  in curl_setup.h.

- sasl: Added support for DIGEST-MD5 via Windows SSPI

- http_negotiate_sspi: Fixed compilation when USE_HTTP_NEGOTIATE not defined

- Makefile.vc6: Added curl_sasl_sspi.c

- Makefile.vc6: Follow up fix to commit 45d3f00803

- ntlm: Moved the identity generation into shared SSPI code

- sasl: Renamed SSPI module following short name clash

- sasl: Added initial stub functions for SSPI DIGEST-MD support

- sasl: Combined DIGEST-MD5 message decoding and generation

Marc Hoersken (5 Apr 2014)
- Makefile.vc6: added warnless.c to fix build

Steve Holme (5 Apr 2014)
- winbuild: Updated the VC++ make instructions following commit 11025613b9
  
  * Added information regarding the February 2003 Platform SDK for VC6
  * Updated the introduction to be similar to the IDE projects README

Daniel Stenberg (5 Apr 2014)
- [Tatsuhiro Tsujikawa brought this change]

  http2: Compile with current nghttp2, which supports h2-11

Steve Holme (5 Apr 2014)
- winbuild: Added Visual Studio 2005 (VC8) project files
  
  Added a more thorough version of the VC8 project files that exist in
  the "vs" folder with the intention to add support for other versions of
  Visual Studio. These files support side-by-side compilation, 32-bit and
  64-bit builds as well as support for some of the third-party libraries
  curl uses.

Daniel Stenberg (4 Apr 2014)
- curl_easy_setopt: fix wrong version number references

- docs: this is for 7.37.0
  
  And clarify for curl that --proxy-header now must be used for headers
  that are meant for a proxy, and they will not be included if the request
  is not for a proxy.

- PROXYHEADER: send these headers in "normal" proxy requests too
  
  Updated the docs to clarify and the code accordingly, with test 1528 to
  verify:
  
  When CURLHEADER_SEPARATE is set and libcurl is asked to send a request
  to a proxy but it isn't CONNECT, then _both_ header lists
  (CURLOPT_HTTPHEADER and CURLOPT_PROXYHEADER) will be used since the
  single request is then made for both the proxy and the server.

- test1428: verify --proxy-header

- curl.1: documented --proxy-header

- [Maciej Puzio brought this change]

  curl: add --proxy-header

- symbols-in-versions: Added CURLHEADER_*
  
  ... and sorted the list

- CURLOPT_HEADEROPT: added
  
  Modified the logic so that CURLOPT_HEADEROPT now controls if PROXYHEADER
  is actually used or not.

- CURLOPT_PROXYHEADER: set headers for proxy-only
  
  Includes docs and new test cases: 1525, 1526 and 1527
  
  Co-written-by: Vijay Panghal

- HTTP: don't send Content-Length: 0 _and_ Expect: 100-continue
  
  Without request body there's no point in asking for 100-continue.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1349
  Reported-by: JimS

- ftp: in passive data connect wait for happy eyeballs sockets
  
  When doing passive FTP, the multi state function needs to extract and
  use the happy eyeballs sockets to wait for to check for completion!
  
  Bug: http://curl.haxx.se/mail/lib-2014-02/0135.html (ruined)
  Reported-by: Alan

- http2+openssl: fix compiler warnings in ALPN using code

Dan Fandrich (3 Apr 2014)
- tests: unified use of some keywords

- tests: added some missing closing tags

Daniel Stenberg (3 Apr 2014)
- runtests: insist on a <keywords> section
  
  Since all present tests now have <keywords> listed, this script will now
  refuse to run a given test case if no such section is provided.
  Hopefully this will help us make sure new test cases get keywords added
  at start.

- tests: add keywords to the last 7 tests lacking them

Steve Holme (1 Apr 2014)
- smtp: Fixed login denied with a RFC-821 based server
  
  In addition to commit fe260b75e7 fixed the same issue for RFC-821 based
  SMTP servers and allow the credientials to be given to curl even though
  they are not used with the server.

- tests: Added SMTP with credientials test when not supported by server

Daniel Stenberg (1 Apr 2014)
- urldata: spellfix comment
  
  Reported-by: Melissa

Steve Holme (31 Mar 2014)
- RELEASE-NOTES: Synced with dd07e79023

- tests: Added SMTP with credentials test for RFC-821 based server
  
  Added SMTP (RFC-821 only) based test case as a reference for the fix
  provided by commit fe260b75e7.

Daniel Stenberg (31 Mar 2014)
- ipv6: strip off zone identifiers in redirects too
  
  Follow up to 9317eced984 makes test 1056 work again.

Dan Fandrich (31 Mar 2014)
- docs: Removed mention of -g hack when using IPv6 literals
  
  This limitation was removed in commit 0bc4938e

Daniel Stenberg (31 Mar 2014)
- http2: let openssl mention the exact protocol negotiated
  
  Remove a superfluous "negotiated http2" info line

- http2: remove _DRAFT09 from the NPN_HTTP2 enum
  
  We're progressing throught drafts so there's no point in having a fixed
  one in a symbol that'll survive.

- [Till Maas brought this change]

  URL parser: IPv6 zone identifiers are now supported

- [Paul Marks brought this change]

  curl: stop interpreting IPv6 literals as glob patterns.
  
  This makes it possible to fetch from an IPv6 literal without specifying
  the -g option.  Globbing remains available elsehwere in the URL.
  
  For example:
    curl http://[::1]/file[1-3].txt
  
  This creates no ambiguity, because there is no overlap between the
  syntax of valid globs and valid IPv6 literals.  Globs contain hyphens
  and at most 1 colon, while IPv6 literals have no hyphens, and at least 2
  colons.
  
  The peek_ipv6() parser simply whitelists a set of characters and counts
  colons, because the real validation happens later on.  The character set
  includes A-Z, in case someone decides to implement support for scopes
  like [fe80::1%25eth0] in the future.
  
  Signed-off-by: Paul Marks <pmarks@google.com>

Steve Holme (30 Mar 2014)
- test938: Updated to use file input for upload
  
  As the second URL won't be passed input from stdin.

- test836: Fixed incorrect username in expected output

Daniel Stenberg (30 Mar 2014)
- DISABLED: 836, 882 and 938 hang

- runtests: check protocol before data
  
  When the protocol part fails, the data usually does too but the protocol
  part is often more fundamental and often provide the clues you need to
  fix the test case.

Steve Holme (30 Mar 2014)
- ftpserver.pl: Extended the full text reply regular expression
  
  Extended the regex to include other valid characters such as those used
  in the reply text of Test 836.

Daniel Stenberg (30 Mar 2014)
- keywords: sort case insensitive

- tests: remove trailing CRs from keywords

- keywords: sort keywords alphabetically

- keywords: don't use STDERR for good info

Steve Holme (30 Mar 2014)
- tests: Added email unit tests to verify login credential connection re-use

- tests: Corrected "APOP" authentication keyword

- tests: Replaced email authentication keywords with SASL based keywords
  
  As the email protocols implement SASL authentication rather than IMAP,
  POP3 and SMTP specific authentication, updated the authentication
  keywords to reflect this.

- tests: Added "Clear Text" authentication keyword

- tests: Added "SASL" authentication keyword

- imap-append.c: Fixed compilation errors on some platforms
  
  In the initializer for len, there is no prototype for "strlen".
  In this statement, there is no prototype for "memcpy".

- ftpserver.pl: Removed some unused variables

- ftpserver.pl: Reworked some variable names to be more meaningful

- ftpserver.pl: Corrected some indentation in senddata()

Daniel Stenberg (29 Mar 2014)
- lib1513: fix callback proto to silence warning

Steve Holme (29 Mar 2014)
- ftpserver.pl: Added fallback to <data> support when using multiple URLs
  
  Added support for falling back to <data> when <data1>, <data2>, etc...
  don't exist in the <reply> section of a unit test.

- ftpserver.pl: Updated email based get reply data code to use new method

- ftpserver.pl: Fixed syntax error from commit 3a29ee41

- ftpserver.pl: Updated argument code in STATUS_imap() to be more meaningful

- ftpserver.pl: Introduced common method for getting a test's reply data

- smtp: Fixed login denied when server doesn't support AUTH capability
  
  Specifying user credentials when the SMTP server doesn't support
  authentication would cause curl to display "No known authentication
  mechanisms supported!" and return CURLE_LOGIN_DENIED.
  
  Reported-by: Tom Sparrow
  Bug: http://curl.haxx.se/mail/lib-2014-03/0173.html

Daniel Stenberg (28 Mar 2014)
- [Cody Mack brought this change]

  winbuild: added warnless.c to fix build

Dan Fandrich (26 Mar 2014)
- hostcheck: added a system include to define struct in_addr

- test1397: Fixed compilation with some SSL backends
  
  The test is only valid when one of four SSL backends is in use,
  and must otherwise return success.

- test815/816: Use authentication for both URLs
  
  The improved connection reuse logic would otherwise create a new
  connection for each one, which isn't supported by the test
  server, nor expected by the test.

Daniel Stenberg (26 Mar 2014)
- mkhelp: generate code for --disable-manual as well
  
  This allows configure --disable-manual to run and build without having
  to regenerate the src/tool_hugehelp.c file which otherwise is necessary
  since we ship tarballs with that file present.
  
  Reported-by: Remi Gacogne
  Bug: http://curl.haxx.se/bug/view.cgi?id=1350

- bump: start the 7.37.0 race

Version 7.36.0 (26 Mar 2014)

Daniel Stenberg (26 Mar 2014)
- RELEASE-NOTES: 7.36.0

- [Richard J. Moore brought this change]

  test1397: unit test for certificate name wildcard handling

- Curl_cert_hostcheck: strip trailing dots in host name and wildcard
  
  Reported-by: Richard Moore

- Curl_cert_hostcheck: reject IP address wildcard matches
  
  There are server certificates used with IP address in the CN field, but
  we MUST not allow wild cart certs for hostnames given as IP addresses
  only. Therefore we must make Curl_cert_hostcheck() fail such attempts.
  
  Bug: http://curl.haxx.se/docs/adv_20140326B.html
  Reported-by: Richard Moore

- [Steve Holme brought this change]

  url: Fixed connection re-use when using different log-in credentials
  
  In addition to FTP, other connection based protocols such as IMAP, POP3,
  SMTP, SCP, SFTP and LDAP require a new connection when different log-in
  credentials are specified. Fixed the detection logic to include these
  other protocols.
  
  Bug: http://curl.haxx.se/docs/adv_20140326A.html

- THANKS: 14 new friends from the 7.36.0 announcement

- RELEASE-NOTES: synced with 3ebfaf6a0399b6a

Steve Holme (23 Mar 2014)
- tool_operate: Fixed uninitialised variable under some error situations
  
  For example when a URL is not specified or the headers file fails to
  open.

- tool_parsecfg: Reworked error handling from commit fc59a9e1

- tool_getparam: Removed "dead assignment" code introduced in commit 1a9b58fc

Daniel Stenberg (22 Mar 2014)
- [Gisle Vanem brought this change]

  polarssl: avoid extra newlines in debug messages
  
  The debug messages printed inside PolarSSL always seems to end with a
  newline. So 'infof()' should not add one. Besides the trace 'line'
  should be 'const'.

- rtsp: parse "Session:" header properly
  
  The parser skipped the initial letter, which presumably often is
  whitespace but doesn't have to be.
  
  Reported-by: Mike Hasselberg
  Bug: http://curl.haxx.se/mail/lib-2014-03/0134.html

- runtests.pl: verify specified test cases
  
  To better allow arguments like "1 to 9999" without flooding the terminal
  with error messages, the given test cases range is now checked and only
  test numbers with existing files are actually run.

Dan Fandrich (19 Mar 2014)
- RELEASE-NOTES: fixed typo

Daniel Stenberg (19 Mar 2014)
- trynextip: don't store 'ai' on failed connects...
  
  It leads to the "next family" tries starting from the wrong point and thus
  fails!
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1337
  Reported-by: ricker

- RELEASE-NOTES: synced with 47f8e99e78c

- [Gaël PORTAY brought this change]

  polarssl: fix possible handshake timeout issue in multi.
  
  Because of the socket is unblocking, PolarSSL does need call to getsock to
  get the action to perform in multi environment.
  
  In some cases, it might happen we have not received yet all data to perform
  the handshake. ssh_handshake returns POLARSSL_ERR_NET_WANT_READ, the state
  is updated but because of the getsock has not the proper #define macro to,
  the library never prevents to select socket for input thus the socket will
  never be awaken when last data is available. Thus it leads to timeout.

- [Gaël PORTAY brought this change]

  polarssl: break compatibility with version older than 1.3.
  
  Remove all #ifdef/else/endif macros that ensure compatibility with polarssl
  version previous than 1.3.

- [Gaël PORTAY brought this change]

  polarssl: drop use of 1.2 compatibility header.
  
  API has changed since version 1.3. A compatibility header has been created
  to ensure forward compatibility for code using old API:
   * x509 certificate structure has been renamed to from x509_cert to
     x509_crt
   * new dedicated setter for RSA certificates ssl_set_own_cert_rsa,
     ssl_set_own_cert is for generic keys
   * ssl_default_ciphersuites has been replaced by function
     ssl_list_ciphersuites()
  
  This patch drops the use of the compatibly header.

- polarssl: added missing end-of-comment from previous commit

- polarssl: now require 1.3.0+
  
  Also fixed a function name change in the version requirement bump

- [hasufell brought this change]

  polarssl: fix compilation
  
  Rename x509_cert to x509_crt and add "compat-1.2.h"
  include.
  This would still need some more thorough conversion
  in order to drop "compat-1.2.h" include.

Kamil Dudka (15 Mar 2014)
- nss: allow to enable/disable new AES GCM cipher-suites
  
  ... if built against a new enough version of NSS

- nss: allow to enable/disable new HMAC-SHA256 cipher-suites
  
  ... if built against a new enough version of NSS

- nss: do not enable AES cipher-suites by default
  
  ... but allow them to be enabled/disabled explicitly.  The default
  policy should be maintained at the NSS level.

Dan Fandrich (15 Mar 2014)
- tests: made the SASL modes separate keywords

- tests: added missing HTTP NTLM auth keywords
  
  Also, removed an unneeded strippart

- tests: disable valgrind on the remaining scp/sftp tests

- valgrind.supp: added another test 165 suppression
  
  This one seems to come and go as the optimizer decides how best
  to inline some functions.

- ssh: prevent a logic error that could result in an infinite loop

- docs: fixed a bunch of typos

- test640/1: add tests for --head with sftp and scp
  
  This option is currently rather useless with these protocols
  when no quote command is given, but it is valid.

- ssh: removed a redundant close state transition

- ssh: abort immediately on a header callback error

Daniel Stenberg (14 Mar 2014)
- chunked-encoding: provide a readable error string for chunked errors

- TODO: remove http2, we now have it

- [Tatsuhiro Tsujikawa brought this change]

  http2: free resources on disconnect
  
  ... and use Curl_safefree() instead of free()

- openssl: info massage with SSL version used
  
  Patch-by: byte_bucket

Steve Holme (9 Mar 2014)
- RELEASE-NOTES: Synced with 8ddda0e999

Daniel Stenberg (9 Mar 2014)
- README.http2: clarify the build prerequisites

- SSL-PROBLEMS: add "missing intermediate certificates" piece

- SSL-PROBLEMS: describes common curl+SSL problems

Nick Zitzmann (8 Mar 2014)
- docs: remove documentation on setting up krb4 support
  
  The information about building with Kerberos4 support was half a year out
  of date. We dropped support for that.

Daniel Stenberg (6 Mar 2014)
- ssh: fix compiler warning converting ssize_t to int

Dan Fandrich (6 Mar 2014)
- ssh: Fixed a style warning
  
  Also, combined a couple of #ifdef sections

- ssh: Pass errors from libssh2_sftp_read up the stack

Daniel Stenberg (6 Mar 2014)
- parse_remote_port: error out on illegal port numbers better

- remote_port: allow connect to port 0
  
  Port number zero is perfectly allowed to connect to. I moved to storing
  the remote port number in an int so that -1 means undefined and 0-65535
  can be used for legitimate port numbers.

- multi_runsingle: move timestamp into INIT
  
  Setting the TIMER_STARTSINGLE timestamp first in CONNECT has the
  drawback that for actions that go back to the CONNECT state, the time
  stamp is reset and for the multi_socket API there's no corresponding
  Curl_expire() then so the timeout logic gets wrong!
  
  Reported-by: Brad Spencer
  Bug: http://curl.haxx.se/mail/lib-2014-02/0036.html

- hostcheck: update comment after previous change

- hostcheck: Curl_cert_hostcheck is not used by NSS builds

- [Michael Osipov brought this change]

  configure: call it GSS-API
  
  ... since that’s how the RFC calls it.

- x509asn: moved out Curl_verifyhost from NSS builds
  
  ... as it isn't used then!

- NSS: avoid compiler warnings when built without http2 support

- [Jiri Malak brought this change]

  Rework Open Watcom make files to use standard Wmake features
  
  Remove slash/backslash problem, now only slashes are used,
  Wmake automaticaly translate slash/backslash to proper version or tools are not sensitive for it.
  Enable spaces in path.
  Use internal rm command for all host platforms
  Add error message if old Open Watcom version is used. Some old versions exhibit build problems for Curl latest version. Now only versions 1.8, 1.9 and 2.O beta are supported

- [Jiri Malak brought this change]

  parsedate: Fixed compilation warning
  
  Remove compilation message for platforms where size of long type
  is equal size of int type.

Steve Holme (2 Mar 2014)
- RELEASE-NOTES: Synced with 7fef4016de

- tool: Do not output libcurl source for the information only parameters
  
  Ensure a source file isn't generated for the following informational
  command line parameters when --libcurl is specified:
  
  --help, --manual, --version and --engine list
  
  As the output would only include a fairly empty looking main() function
  and a call to curl_easy_init() and curl_easy_cleanup() when performed
  with --engine list.

- tool: Fixed libcurl source output for multiple operations
  
  Correctly output libcurl source code that includes multiply operations
  as specified by --next. Note that each operation evaluates to a single
  curl_easy_perform() in source code form.
  
  Also note that the output could be optimised a little so global config
  options are only output once rather than per operation as is presently
  the case.

- tool_metalink.h: Fixed compilation warning
  
  warning: declaration of 'struct GlobalConfig' will not be visible
  outside of this function

- tool: Moved internal variable isatty to the global config

- tool_operate.c: Fixed compilation error
  
  incompatible types - from 'OperationConfig *' to 'GlobalConfig *'

- tool: Moved --libcurl to the global config

- tool: Moved --progress-bar to the global config

- tool: Moved --stderr to the global config

- transfer.c: Fixed non-HTTP2 builds from commit cde0cf7c5e

Daniel Stenberg (28 Feb 2014)
- [Tatsuhiro Tsujikawa brought this change]

  Fix bug that HTTP/2 hangs if whole response body is read with headers
  
  For HTTP/2, we may read up everything including responde body with
  header fields in Curl_http_readwrite_headers. If no content-length is
  provided, curl waits for the connection close, which we emulate it
  using conn->proto.httpc.closed = TRUE. The thing is if we read
  everything, then http2_recv won't be called and we cannot signal the
  HTTP/2 stream has closed. As a workaround, we return nonzero from
  data_pending to call http2_recv.

- http2: build with current nghttp2 version
  
  nghttp2 has yet again extended its callback struct and this is an
  attempt to make curl compile with nghttp2 from current git

Dan Fandrich (28 Feb 2014)
- tool_main: Fixed a memory leak on main_init error

Steve Holme (28 Feb 2014)
- test96: Updated accordly for recent changes

- tool_cfgable: Code policing of structure pointers

- tool: Moved --trace and --verbose to the global config

- tool_main: Forgot to initialise the first operation's global pointer

- tool: Moved --silient to the global config
  
  Other global options such as --libcurl, --trace and --verbose to
  follow.

- tool_cfgable: Added GlobalConfig pointer to OperationConfig
  
  In order to ease the moving of global options such as the error stream,
  updated the OperationConfig structure to point to the GlobalConfig.

- tool: Added support to .curlrc for URL specific options
  
  In addition to adding support for URL specific options via the command
  line with --next it is now possible to specify "next" in .curlrc.

- tool: Reworked argument parsing to use --next/-:
  
  Follow up to commit 1a9b58fcb2 to replace the : command line option
  with --next and -:.

- tool_getparam: Added initial support for --next/-:
  
  Added initial support for --next/-: which will be used to replace the
  rather confusing : command line operation what was used for the URL
  specific options prototype.

Dan Fandrich (26 Feb 2014)
- valgrind.supp: tweaked a test 165 suppression
  
  A recent change seems to have slightly changed the call stack
  produced by the gcc optimizer.

nickzman (25 Feb 2014)
- Merge pull request #93 from d235j/darwinssl_ip_address_fix
  
  darwinssl: don't omit CN verification when an IP address is used

Daniel Stenberg (25 Feb 2014)
- parse_args: fix a too long source code line

- [naota brought this change]

  configure: Tiny fix to honor POSIX
  
  Change "==" to "=" to honor POSIX test construction.

Steve Holme (25 Feb 2014)
- tool_help: Moved --no-alpn and --no-npn to be listed alphabetically
  
  ...and added the HTTP suffix as these options are only used for HTTP2
  based connections.

- tool: Moved --showerror to the global config
  
  Other global options such as --libcurl, --trace and --verbose to
  follow.

- tool_getparam: Added global config to getparameter()
  
  In preparation for parsing global options added the GlobalConfig
  structure to the getparameter() function.

- tool_getparam.h: Fixed compilation warning
  
  warning: declaration of 'struct GlobalConfig' will not be visible
  outside of this function

Marc Hoersken (24 Feb 2014)
- RELEASE-NOTES: Updated for 63fc8ee7

Steve Holme (24 Feb 2014)
- tool_cfgable: Added support for knowing the current operation

Marc Hoersken (24 Feb 2014)
- curl_schannel.c: Updated copyright years

- [David Ryskalczyk brought this change]

  winssl: Enable hostname verification of IP address using SAN or CN
  
  Original commit message was:
   Don't omit CN verification in SChannel when an IP address is used.
  
  Side-effect of this change:
   SChannel and CryptoAPI do not support the iPAddress subjectAltName
   according to RFC 2818. If present, SChannel will first compare the
   IP address to the dNSName subjectAltNames and then fallback to the
   most specific Common Name in the Subject field of the certificate.
  
   This means that after this change curl will not connect to SSL/TLS
   hosts as long as the IP address is not specified in the SAN or CN
   of the server certificate or the verifyhost option is disabled.

Steve Holme (24 Feb 2014)
- tool_operate: Moved easy handle cleanup into tool_main

Marc Hoersken (24 Feb 2014)
- tool_hugehelp: partially reverted 24e22e10
  
  Compilation was not possible if manuel is disabled due this error:
   error: macro "hugehelp" passed 1 arguments, but takes just 0
    void hugehelp(void) {}

Steve Holme (24 Feb 2014)
- tool_main: Moved easy handle into global config structure

David Ryskalczyk (23 Feb 2014)
- Don't omit CN verification in DarwinSSL when an IP address is used.

Steve Holme (23 Feb 2014)
- tool: Fixed line longer than 79 characters from commit 705a4cb549

- tool_main: Corrected typo from commit d6b9f054e9 in Symbian code

- tool_main: Moved OperateConfig cleanup into main_free()

- tool_main: Moved initial OperateConfig creation into main_init()

- tool_cfgable: Added global config structure

- tool_cfgable: Renamed Configurable structure to OperationConfig
  
  To allow for the addition of a global config structure and prevent
  confusion between the two.

- tool: Fixed incorrect return code with --version from commit c10bf9bb36

- RELEASE-NOTES: Synced with 8c80840d01

- tool_getparam: Moved tool_help() call into operate()

- tool_getparam: Moved hugehelp() call into operate()

- tool_getparam: Moved tool_version_info() call into operate()

- tool_cfgable: Removed list_engine flag from config structure
  
  In preparation for separating the global config options from the per
  operation config options, reworked the list engines code to not use a
  member variable in the Configurable structure.

- tool_operate: Start to use CURLcode rather than int for return codes
  
  To help assist with the detection of incorrect return codes, as per
  commits ee23d13a79, 33b8960dc8 and aba98991a5, updated the operate
  based functions to return CURLcode error codes.

- tool: Fixed incorrect return code when setting HTTP request fails
  
  During initialisation SetHTTPrequest() may fail and cURL would return
  PARAM_BAD_USE, which is equivalent to CURLE_NOT_BUILT_IN in cURL error
  terms.
  
  Instead, return CURLE_FAILED_INIT as we do for other functions that may
  fail during initialisation.

- tool_getparam: Moved version information into separate function in tool_help

- tool_operhlp.h: Fixed compilation warning
  
  warning: 'struct Configurable' declared inside parameter list

- tool_operhlp: Consolidated engine output code into tool_help

- tool_operate: Moved list engines into separate function in tool_help

Marc Hoersken (22 Feb 2014)
- RELEASE-NOTES: added note about impact of changes to WinSSL defaults

- stunnel: regenerated self-signed test certificate with SHA1 hash
  
  The previous test certificate contained a MD5 hash which is not
  supported using TLSv1.2 with Schannel on Windows 7 or newer.
  
  See the update to this blog post on IEInternals / MSDN:
  http://blogs.msdn.com/b/ieinternals/archive/2011/03/25/
  misbehaving-https-servers-impair-tls-1.1-and-tls-1.2.aspx
  
  "Update: If the server negotiates a TLS1.2 connection with a
  Windows 7 or 8 schannel.dll-using client application, and it
  provides a certificate chain which uses the (weak) MD5 hash
  algorithm, the client will abort the connection (TCP/IP FIN)
  upon receipt of the certificate."

Dan Fandrich (22 Feb 2014)
- easy: Fixed a memory leak on OOM condition

Steve Holme (20 Feb 2014)
- tool_paramhlp: Fixed compilation warnings
  
  declaration of 'index' shadows a global declaration

- lib1515.c: Fixed #include path in commit 647f83e809

Daniel Stenberg (19 Feb 2014)
- [Maks Naumov brought this change]

  test1515: fix compilation with msvc
  
  ... or any other systems lacking a native snprintf

- SFTP: skip reading the dir when NOBODY=1
  
  When asking for an SFTP directory with NOBODY set, no directory contents
  should be retrieved.
  
  Bug: http://curl.haxx.se/mail/lib-2014-02/0155.html

Dan Fandrich (18 Feb 2014)
- axtls: comment the call ssl_read repeatedly loop

Kamil Dudka (18 Feb 2014)
- curl.1: update the description of --tlsv1
  
  ... and mention the --tlsv1.[0-2] options in the --tslv1 entry
  
  Reported-by: Hubert Kario

Daniel Stenberg (18 Feb 2014)
- curl_version.3: recommend using curl_version_info() instead

- curl_version_info.3: added *HTTP2
  
  ... and edited language slightly

- curl_multi_assign.3: updated language

- libcurl.3: edited slightly to improve readability

- curl_easy_perform.3: extended and clarified

- curl_multi_add_handle.3: clarify multi vs easy use
  
  it is only WHILE added to a multi handle that it can't be used with the
  easy interface

- [Tatsuhiro Tsujikawa brought this change]

  http2: Support HTTP POST/PUT
  
  This patch enables HTTP POST/PUT in HTTP2.
  We disabled Expect header field and  chunked transfer encoding
  since HTTP2 forbids them.
  In HTTP1, Curl sends small upload data with request headers, but
  HTTP2 requires upload data must be in DATA frame separately.
  So we added some conditionals to achieve this.

- RELEASE-NOTES: synced with 854aca5420f

- multi: ignore sigpipe internally
  
  When the multi API is used we must also ignore SIGPIPE signals when
  caused by things we do, like they can easily be generated by OpenSSL.

Dan Fandrich (17 Feb 2014)
- tests: Made the crypto test feature usable
  
  This feature specifies the availability of cryptographic
  authentication, which can be disabled at compile-time

- configure: Fix the --disable-crypto-auth option
  
  It now disables NTLM and GSS authentication methods, and produces
  compilable code when SSL is enabled.

Daniel Stenberg (17 Feb 2014)
- curl_multi_setopt.3: clarify CURLMOPT_MAXCONNECTS

- [Shao Shuchao brought this change]

  ConnectionDone: default maxconnects to 4 x number of easy handles
  
  ... as documented!

- examples: remove all use of CURLM_CALL_MULTI_PERFORM
  
  ... since it is never returned since a long while back.

- [Colin Hogben brought this change]

  curl_easy_setopt.3: Add another non-matching hostname
  
  For the avoidance of doubt, show a domain which contains the no-proxy
  pattern but not at the top level.

- axtls: bump copyright year

- [Fabian Frank brought this change]

  axtls: call ssl_read repeatedly
  
  Perform more work in between sleeps. This is work around the
  fact that axtls does not expose any knowledge about when work needs
  to be performed. Depending on connection and how often perform is
  being called this can save ~25% of time on SSL handshakes (measured
  on 20ms latency connection calling perform roughly every 10ms).

- [Yehezkel Horowitz brought this change]

  url_easy_setopt.3: Add undocumented values of curl_infotype
  
  ... for debug function

- ConnectionExists: re-use connections better
  
  When allowing NTLM, the re-use connection logic was too focused on
  finding an existing NTLM connection to use and didn't properly allow
  re-use of other ones. This made the logic not re-use perfectly re-usable
  connections.
  
  Added test case 1418 and 1419 to verify.
  
  Regression brought in 8ae35102c (curl 7.35.0)
  
  Reported-by: Jeff King
  Bug: http://thread.gmane.org/gmane.comp.version-control.git/242213

Steve Holme (16 Feb 2014)
- tool_paramhlp: Added URL index to password prompt for multiple operations

Marc Hoersken (16 Feb 2014)
- sockfilt.c: add undefs which are required after 6239146e

Steve Holme (16 Feb 2014)
- warnless: Updated copyright year for recent changes

Marc Hoersken (16 Feb 2014)
- warnless: add wrapper function for read and write on Windows

Steve Holme (16 Feb 2014)
- examples: Added IMAP LSUB example

- tool_operate: Changed the required argument check/get to be upfront
  
  Rather than check for required arguments, and prompt for any host and
  proxy passwords, as each operation is performed, changed the code so
  all configurations are checked before any operations are performed.
  
  This allows the user to input all the required passwords, for example,
  upfront rather than wait for each operation.

- tool_operate: Moved required argument getting into separate function

Dan Fandrich (15 Feb 2014)
- valgrind: added another test 165 suppression
  
  This one is needed with the gcc options -fstack-protector-all -O2
  That brings the number of suppressions for test 165 to four, and I
  suspect I could find another two missing without trying very hard. I'm
  beginning to think suppressions isn't the best way to handle these
  kinds of cases.

Marc Hoersken (15 Feb 2014)
- testsuite: more Windows line-endings fixes

- test1114: fix line-endings checks on Windows after 75f00de

- test1113: fix line-endings checks on Windows after 75f00de5

- lib1515.c: Added support for Windows using the Sleep function

- HTTP tests: use CRLF as header seperator according to RFC 2616
  
  Updates the test suite to handle binary-mode header output.

- curl: output protocol headers using binary mode
  
  Since protocol headers contain explicit line-endings there should
  be no automatic conversion to ASCII text or CRLF line-endings.
  
  This might break third party tools that already depend on this
  behaviour. We might need to introduce an option to make this optional.

- HTTP tests: use CRLF as header seperator according to RFC 2616
  
  Changes LF to CRLF and disables automatic output conversion.

- testsuite: use binary output mode for custom curl test tools
  
  Do not try to convert line-endings to CRLF on Windows by setting stdout
  to binary mode, just like the curl tool does if --ascii is not specified.
  
  This should prevent corrupted stdout line-ending output like CRCRLF.
  
  In order to make the previously naive text-aware tests work with
  binary mode on Windows, text-mode is disabled for them if it is not
  actually part of the test case and line-endings are corrected.

- testsuite: changed HTTP and RTSP header line-endings to CRLF
  
  According to RFC 2616 and RFC 2326 individual protocol elements, like
  headers and except the actual content, are terminated by using CRLF.
  
  Therefore the test data files for these protocols need to contain
  mixed line-endings if the actual protocol elements use CRLF while
  the file uses LF.

Daniel Stenberg (14 Feb 2014)
- [Colin Hogben brought this change]

  curl_easy_setopt.3: Fix word order of CURLOPT_PROXY section
  
  The word CURLOPT_PROXYPORT became detached from its sentence when the
  note about the default was added.

Patrick Monnerat (14 Feb 2014)
- OS400: Add new options to RPG binding.

Dan Fandrich (14 Feb 2014)
- valgrind: added suppression on optimized code
  
  gcc 4.7.2 with -O2 will optimize Curl_connect by inlining some
  functions two levels deep, which makes the valgrind suppression
  fail to match. The underlying reason for these idna suppressions is
  a gcc strlen optimization when compiling libidn; compiling it with
  -fno-builtin-strlen makes this suppression unnecessary.

Daniel Stenberg (14 Feb 2014)
- [Arvid Norberg brought this change]

  dict: fix memory leak in OOM exit path
  
  Bug: https://github.com/bagder/curl/pull/90

- Curl_urldecode: don't allow NULL as receiver
  
  For a function that returns a decoded version of a string, it seems
  really strange to allow a NULL pointer to get passed in which then
  prevents the decoded data from being returned!
  
  This functionality was not documented anywhere either.
  
  If anyone would use it that way, that memory would've been leaked.
  
  Bug: https://github.com/bagder/curl/pull/90
  Reported-by: Arvid Norberg

- RELEASE-NOTES: synced with 378af08c992

- ConnectionExists: reusing possible HTTP+NTLM connections better
  
  Make sure that the special NTLM magic we do is for HTTP+NTLM only since
  that's where the authenticated connection is a weird non-standard
  paradigm.
  
  Regression brought in 8ae35102c (curl 7.35.0)
  
  Bug: http://curl.haxx.se/mail/lib-2014-02/0100.html
  Reported-by: Dan Fandrich

- [Tiit Pikma brought this change]

  transfer: make Expect: 100-continue timeout configurable.
  
  Replaced the #define CURL_TIMEOUT_EXPECT_100 in transfer.c with the
  CURLOPT_EXPECT_100_TIMEOUT_MS option to make the timeout configurable.

- [Thomas Braun brought this change]

  Fix compilation with make mingw32
  
  The source files from lib/vtls where generated in lib instead of lib/vtls.
  
  Verified-by: Thomas Braun <thomas.braun@virtuell-zuhause.de>

- chunked decoder: track overflows correctly
  
  The code didn't properly check the return codes to detect overflows so
  it could trigger incorrectly. Like on mingw32.
  
  Regression introduced in 345891edba (curl 7.35.0)
  
  Bug: http://curl.haxx.se/mail/lib-2014-02/0097.html
  Reported-by: LM

- [Fabian Frank brought this change]

  curl_easy_setopt.3: add CURL_HTTP_VERSION_2_0

- [Fabian Frank brought this change]

  openssl: honor --[no-]alpn|npn command line switch
  
  Disable ALPN or NPN if requested by the user.

- [Fabian Frank brought this change]

  gtls: honor --[no-]alpn command line switch
  
  Disable ALPN if requested by the user.

Dan Fandrich (11 Feb 2014)
- tests: Disabled broken test 1316
  
  See http://curl.haxx.se/mail/lib-2014-02/0004.html for a
  discussion on the problem.

Daniel Stenberg (11 Feb 2014)
- version: next release will become 7.36.0

- curl_easy_setopt.3: add CURLOPT_SSL_ENABLE_ALPN/NPN

Steve Holme (10 Feb 2014)
- tool_cfgable: Moved easy handle cleanup to fix pingpong logout issues
  
  Commmit c5f8e2f5f4 removed the easy handle clean-up from tool_operate,
  letting the code that was already present in free_config_fields()
  perform the task. Unfortunately, this wasn't the correct place to do
  this as it broke protocols, that would perform a logout, as the main
  clean-up in tool_main had already been called.

Dan Fandrich (10 Feb 2014)
- secureserver: Only set stunnel FIPS option when available
  
  It seems the fips config option causes an error if FIPS mode was
  not enabled at stunnel compile-time.  FIPS support was disabled
  by default in stunnel 5.00, so this is probably really only needed
  on versions between 4.32 and 5.00.

Daniel Stenberg (10 Feb 2014)
- [Fabian Frank brought this change]

  NPN/ALPN: allow disabling via command line
  
  when using --http2 one can now selectively disable NPN or ALPN with
  --no-alpn and --no-npn. for now honored with NSS only.
  
  TODO: honor this option with GnuTLS and OpenSSL

- [Fabian Frank brought this change]

  nss: use correct preprocessor macro
  
  SSL_ENABLE_ALPN can be used for preprocessor ALPN feature detection,
  but not SSL_NEXT_PROTO_SELECTED, since it is an enum value and not a
  preprocessor macro.

Steve Holme (9 Feb 2014)
- tests: Added test for IMAP LSUB command

- tests: Removed test 807 as it has been superseded by tests 815 and 816

- tests: Updated the titles of tests 815 and 816

Daniel Stenberg (9 Feb 2014)
- tool_metalink: fix compiler warning when built without metalink

Steve Holme (9 Feb 2014)
- tool_operate: Move the trace and error file closure to tool_cfgable

- TODO: Removed url-specific options

- tests: Re-enabled IMAP tests that require URL specific option support

- RELEASE-NOTES: Synced with 8e62f7a6503a

Marc Hoersken (9 Feb 2014)
- secureserver: FIPS option is only supported since stunnel 5.00

Steve Holme (9 Feb 2014)
- tool_operate: Added support for performing URL specific operations

- tool_operate: Let curl handle cleanup take place in config_free()

Dan Fandrich (9 Feb 2014)
- formdata: Must use Curl_safefree instead of free

Daniel Stenberg (8 Feb 2014)
- test96: updated according to recent changes

- runtests: allow <strippart> to remove lines
  
  For verify file, if the strippart condition removes the line completely
  it is now removed from the array.

Steve Holme (8 Feb 2014)
- tool_getparam: Added support for parsing of specific URL options

Dan Fandrich (8 Feb 2014)
- secureserver: Disable FIPS mode for stunnel
  
  It's unnecessary for curl testing, and it can otherwise cause
  stunnel to fail to start if OpenSSL doesn't support FIPS mode.

- formdata: Fixed memory leak on OOM condition

- runtests: Disable valgrind when debugging
  
  This was already mostly being done, except that analysis after the
  test still assumed that the valgrind log files would be available. An
  alternative way to handle the valgrind + gdb combination could be to
  enable one of the valgrind debugger hooks.

Steve Holme (7 Feb 2014)
- tool_cfgable: For consistency renamed init_config() to config_init()

- tool_cfgable: Introduced config_free() function

Daniel Stenberg (7 Feb 2014)
- --help: add missing --tlsv1.x options

Steve Holme (7 Feb 2014)
- lib1515.c: Fixed various compilation warnings
  
  lib1515.c:38:26 warning: unused parameter 'curl'
  lib1515.c:38:81 warning: unused parameter 'ptr'
  lib1515.c:38:5 warning: no previous prototype for 'debug_callback'
  lib1515.c:46:5 warning: no previous prototype for 'do_one_request'
  lib1515.c:120:3  warning: ISO C90 forbids mixed declarations and code
  
  As well as some code policing such as white space and braces.

Daniel Stenberg (7 Feb 2014)
- http2: updated README after NSS addition
  
  Changed the support to a little matrix and added brief explanation of
  what ALPN and NPN are for.

- nss: support pre-ALPN versions

- [Fabian Frank brought this change]

  nss: ALPN and NPN support
  
  Add ALPN and NPN support for NSS. This allows cURL to negotiate
  HTTP/2.0 connections when built with NSS.

- formpost: use semicolon in multipart/mixed
  
  Not comma, which is an inconsistency and a mistake probably inherited
  from the examples section of RFC1867.
  
  This bug has been present since the day curl started to support
  multipart formposts, back in the 90s.
  
  Reported-by: Rob Davies
  Bug: http://curl.haxx.se/bug/view.cgi?id=1333

Dan Fandrich (6 Feb 2014)
- tests: Document use of the MEMDEBUG_LOG_SYNC macro

- ssh: Fixed a NULL pointer dereference on OOM condition

Steve Holme (6 Feb 2014)
- nss: Updated copyright year for recent edits

Daniel Stenberg (6 Feb 2014)
- [Remi Gacogne brought this change]

  100-continue: fix timeout condition
  
  When using the multi socket interface, libcurl calls the
  curl_multi_timer_callback asking to be woken up after
  CURL_TIMEOUT_EXPECT_100 milliseconds.
  
  After the timeout has expired, calling curl_multi_socket_action with
  CURL_SOCKET_TIMEOUT as sockfd leads libcurl to check expired
  timeouts. When handling the 100-continue one, the following check in
  Curl_readwrite() fails if exactly CURL_TIMEOUT_EXPECT_100 milliseconds
  passed since the timeout has been set!
  
  It seems logical to consider that having waited for exactly
  CURL_TIMEOUT_EXPECT_100 ms is enough.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1334

- [Fabian Frank brought this change]

  nss: prefer highest available TLS version
  
  Offer TLSv1.0 to 1.2 by default, still fall back to SSLv3
  if --tlsv1[.N] was not specified on the command line.

- [Romulo A. Ceccon brought this change]

  tests: add test for bug #1327 (dns cache timeout)
  
  Fix for bug #1303 (030a2b8cb) was not complete.
  libcurl still pruned DNS entries added manually
  after detecting a dead connection. This test
  checks such behavior.

- [Romulo A. Ceccon brought this change]

  tests: add test for bug #1303 (dns cache timeout)
  
  Test-case 1515 reproduces bug #1303, where libcurl
  would incorrectly prune DNS entries added via
  CURLOPT_RESOLVE after the DNS_CACHE_TIMEOUT had
  expired.

- http2: spell fixed README and added version requirement

Steve Holme (6 Feb 2014)
- tool_operate: Removed unused argument parameters from operate_do()

- tool_operate: Moved list SSL engines code into operate()

- tool_operate: Moved argument parsing into operate()

Daniel Stenberg (5 Feb 2014)
- runtests: add suppression generator help
  
  Leave the valgrind --gen-suppressions option in there, commented, to
  make it easier for next update.

- valgrind: updated suppressions file
  
  The call stack was modified in 2dc7ad23 so the supressions didn't work
  anymore.

- runtests: detect 'ares' better
  
  ... caused false detections of the threaded resolver otherwise

Steve Holme (5 Feb 2014)
- tool_operate: Moved .curlrc parsing code into operate()

- tool_operate: Moved locale setup code into operate_init()

Daniel Stenberg (5 Feb 2014)
- http2: minor update of the README

- [Fabian Frank brought this change]

  http2: rely on content-encoding header
  
  A server might respond with a content-encoding header and a response
  that was encoded accordingly in HTTP-draft-09/2.0 mode, even if the
  client did not send an accept-encoding header earlier. The server might
  not send a content-encoding header if the identity encoding was used to
  encode the response.
  
  See:
  http://tools.ietf.org/html/draft-ietf-httpbis-http2-09#section-9.3

Dan Fandrich (4 Feb 2014)
- tool_operate: shortened too-long source line

Steve Holme (4 Feb 2014)
- tool_operate: Introduced operate_free() function

- tool_operate: Introduced operate_init() function

- tool_operate: Introduced new operate() function

Daniel Stenberg (4 Feb 2014)
- http2: enforce gzip auto-decompress
  
  As this is mandated by the http2 spec draft-09

- [Tatsuhiro Tsujikawa brought this change]

  http2: handle incoming data larger than remaining buffer

- [Tatsuhiro Tsujikawa brought this change]

  http2: Check stream ID we are interested in

- [Tatsuhiro Tsujikawa brought this change]

  http2: store response header in temporary buffer

- [Tatsuhiro Tsujikawa brought this change]

  HTTP2: add layer between existing http and socket(TLS) layer
  
  This patch chooses different approach to integrate HTTP2 into HTTP curl
  stack. The idea is that we insert HTTP2 layer between HTTP code and
  socket(TLS) layer. When HTTP2 is initialized (either in NPN or Upgrade),
  we replace the Curl_recv/Curl_send callbacks with HTTP2's, but keep the
  original callbacks in http_conn struct. When sending serialized data by
  nghttp2, we use original Curl_send callback. Likewise, when reading data
  from network, we use original Curl_recv callback. In this way we can
  treat both TLS and non-TLS connections.
  
  With this patch, one can transfer contents from https://twitter.com and
  from nghttp2 test server in plain HTTP as well.
  
  The code still has rough edges. The notable one is I could not figure
  out how to call nghttp2_session_send() when underlying socket is
  writable.

- [Fabian Frank brought this change]

  gtls: add ALPN support
  
  Add ALPN support when using GnuTLS >= 3.2.0. This allows
  libcurl to negotiate HTTP/2.0 for https connections when
  built with GnuTLS.
  
  See:
  http://www.gnutls.org/manual/gnutls.html#Application-Layer-Protocol-Negotiation-_0028ALPN_0029
  http://tools.ietf.org/html/draft-ietf-tls-applayerprotoneg-04

Steve Holme (3 Feb 2014)
- tool_operate: Moved libcurl information gathering to tool_main

Daniel Stenberg (3 Feb 2014)
- [Fabian Frank brought this change]

  openssl: add ALPN support
  
  Add ALPN support when using OpenSSL. This will offer ALPN and NPN to the
  server, who can respond with either one or none of the two. OpenSSL >=
  1.0.2 is required, which means as of today obtaining a snapshot from
  ftp://ftp.openssl.org/snapshot/.
  
  See:
  http://tools.ietf.org/html/draft-ietf-tls-applayerprotoneg-04
  https://github.com/openssl/openssl/blob/ba168244a14bbd056e502d7daa04cae4aabe9d0d/ssl/ssl_lib.c#L1787

Steve Holme (3 Feb 2014)
- tool_operate: Moved command line argument parsing into separate function

- tool_operate: Simplified parse .curlrc decision logic

- tool_operate: Moved main initialisation and cleanup code into tool_main

- tool_main: Fixed compilation warning from commit 0104678c79
  
  no previous prototype for function 'memory_tracking_init'

- tool_main: Changed stack based config struct to be heap based

Dan Fandrich (3 Feb 2014)
- tests: Moved some comments so the test data files parse as XML

Steve Holme (2 Feb 2014)
- tool_operate: Moved memory tracking initialisation into tool_main

- tests: Fixed test172 cookie expiry
  
  The test contains a cookie jar file where one of the cookies has an
  expiry date of 1391252187 -- Sat, 1 Feb 2014 10:56:27 GMT which has
  now expired. Updated to Wed, 14 Oct 2037 16:36:33 GMT as per test
  179.
  
  Reported-by: Adam Sampson
  Bug: http://curl.haxx.se/bug/view.cgi?id=1330

- tool_operate: Moved initial config setup into new init_config() function

- tool_main: Moved config struct initialisation into a separate function
  
  In preparation for adding URL specific options moved the initialisation
  of the Configurable structure into a separate function in tool_cfgable.

Marc Hoersken (1 Feb 2014)
- test 500: workaround low timer resolution on Windows
  
  Since the timer resolution is lower, there are actually cases that
  the compared values are equal. Therefore we check for previous
  timestamps being greater than the current one instead.

- test suite: stop conversion of valid output to CRLF on Windows
  
  Since the output isn't actually being written in text-mode and it
  was rather used as a workaround, disable text-mode for these tests.

- HTTP tests: use CRLF as header seperator according to RFC 2616

- FTP tests: enable text-mode for more datacheck sections

- FTP tests: enable text-mode for data and datacheck sections

- runtests.pl: added support for text-mode within datacheck section

- ftpserver.pl: directory LISTings use [CR][LF] for ASCII transfer
  
  According to section 2.2 of RFC959 the End-of-Line is defined as:
   The end-of-line sequence defines the separation of printing
   lines.  The sequence is Carriage Return, followed by Line Feed.
  
  Verified by sniffing traffic between a Windows FTP client (FileZilla)
  and Unix-hosted FTP server (ProFTPD).

- runtests.pl: reverse line-ending conversion on Windows
  
  It makes more sense to convert the expected output to [CR][LF] on
  Windows than to force the actual, probably correct, output to [LF].
  
  This way it is actually possible to see if curl outputs the correct
  line-ending excepted by a text-aware test case.

- winssl: improved default SSL/TLS protocol selection
  
  For some reason Windows 7 SP1 chooses TLS 1.0 instead of TLS 1.2
  if it is not explicitly enabled within grbitEnabledProtocols.
  
  More information can be found on MSDN:
  http://msdn.microsoft.com/library/windows/desktop/aa379810.aspx

Steve Holme (31 Jan 2014)
- INSTALL: Corrected mentioned version number as release 7.34.1 became 7.35.0

- RELEASE-NOTES: Synced with 0f213fdca1

Dan Fandrich (31 Jan 2014)
- pipeline: Fixed a NULL pointer dereference on OOM

- tests: make the authorization retry tests pass the torture tests

- ftp: fixed a memory leak on wildcard error path

- netrc: Fixed a memory leak in an OOM condition

Steve Holme (30 Jan 2014)
- ntlm: Fixed a memory leak when using NTLM with a proxy server

- tests: Missed updating a type-3 message in commit 1c9aaa0bac

Daniel Stenberg (30 Jan 2014)
- http2: fix size check in on_data_chunk_recv

- http2: add CRLF when first data arrives

Steve Holme (30 Jan 2014)
- tests: Updated NTLM tests for NTLMv2 type-3 message

Daniel Stenberg (30 Jan 2014)
- [Tatsuhiro Tsujikawa brought this change]

  http2_recv: Return written length on CURLE_AGAIN

- [Tatsuhiro Tsujikawa brought this change]

  http2: Use nghttp2_session_mem_recv and nghttp2_session_upgrade

- http2: call it "HTTP 2" and not 2.0
  
  The minor version will be dropped for HTTP 2 so it will make sense to
  avoid using it in option names etc.

- http2: basic version of receiving DATA

- http2: convert HEADER frames to HTTP1-like headers
  
  ... and then go through the "normal" HTTP engine.

- http2: fix EWOULDBLOCK in recv_callback()

- http2: do the POST Upgrade dance properly

Steve Holme (30 Jan 2014)
- ntlm: Use static client nonce for the test suite

Daniel Stenberg (30 Jan 2014)
- http2.h: provide empty macros for non-http2 builds

- [Fabian Frank brought this change]

  http2: switch into http2 mode if NPN indicates
  
  Check the NPN result before preparing an HTTP request and switch into
  HTTP/2.0 mode if necessary. This is a work in progress, the actual code
  to prepare and send the request using nghttp2 is still missing from
  Curl_http2_send_request().

- http2: s/Curl_http2_request/Curl_http2_request_upgrade
  
  To better reflect its purpose

- http2-openssl: verify that NPN functionality is present

- [Fabian Frank brought this change]

  openssl: set up hooks with to perform NPN
  
  NPN is what is available in the wild today to negotiate SPDY or HTTP/2.0
  connections. It is expected to be replaced by ALPN in the future. If
  HTTP/2.0 is negotiated, this is indicated for the entire connection and
  http.c is expected to initialize itself for HTTP/2.0 instead of
  HTTP/1.1.
  
  see:
  http://technotes.googlecode.com/git/nextprotoneg.html
  http://tools.ietf.org/html/draft-ietf-tls-applayerprotoneg-04

- http2: added stubs for all nghttp2 callbacks
  
  This makes it easier to trace what's happening.

- http2: use FIRSTSOCKET instead of 0 to index the sockets array

- http2: receive and log the received header frames

- http2_recv: log nghttp2 return codes for debugging purposes

- HTTP2: reject nghttp2 versions before 0.3.0

- [Gisle Vanem brought this change]

  http2: adjusted to newer nghttp2_session_callbacks struct
  
  the number of elements in the 'nghttp2_session_callbacks' structure is
  now reduced by 2 in version 0.3.0 (I'm not sure when the change
  happened, but checking for ver 0.3.0 work for me).

- [Gisle Vanem brought this change]

  HTTP2: Wrong NgHTTP2 user-data
  
  Something is wrong in 'userp' for the HTTP2 recv_callback().  The
  session is created using bogus user-data; '&conn' and not 'conn'.
  
  I noticed this since the socket-value in Curl_read_plain() was set to a
  impossible high value.

- NTLM: error: conversion to 'int' from 'long int' may alter its value
  
  Fixed two compiler nits

Steve Holme (29 Jan 2014)
- ntlm: Coding style policing dating back to 2011

- ntlm: Use a timestamp of 01/01/1970 for the test suite

- ntlm: Updated Curl_ntlm_core_mk_ntlmv2_resp() to use local variables
  
  ...until the function is successful when it returns them in the out
  parameters.

- ntlm: Added cross platform support for writing NTLMv2 timestamp in buffer
  
  Added conversion functions write32_le() and write64_le() to ensure the
  NTLMv2 timestamp is always written in little-endian.

- [Prash Dush brought this change]

  ntlm: Added support for NTLMv2

Kamil Dudka (29 Jan 2014)
- nss: do not use the NSS_ENABLE_ECC define
  
  It is not provided by NSS public headers.
  
  Bug: https://bugzilla.redhat.com/1058776

- nss: do not fail if NSS does not implement a cipher
  
  ... that the user does not ask for

Daniel Stenberg (29 Jan 2014)
- http2: switch recv/send functions to http2 ones after 101

- http2: handle 101 responses and switch to HTTP2

- examples: gitignore more binaries

- bump: start working on 7.35.1

- THANKS: 19 new contributors from the 7.35.0 release notes

Version 7.35.0 (29 Jan 2014)

Daniel Stenberg (29 Jan 2014)
- RELEASE-NOTES: done for 7.35.0

Dan Fandrich (29 Jan 2014)
- tests: make a few lib15?? tests pass the OOM torture tests

- lib1900: make the test pass the OOM torture tests

- oauth2: Fixed a memory leak in an OOM condition

- unit1304: make the test pass the OOM torture tests

- unit1396: make the test pass the OOM torture tests

Daniel Stenberg (28 Jan 2014)
- [Romulo A. Ceccon brought this change]

  hostip: don't remove DNS entries that are in use
  
  hostcache_timestamp_remove() should remove old *unused* entries from the
  host cache, but it never checked whether the entry was actually in
  use. This complements commit 030a2b8cb.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1327

Dan Fandrich (28 Jan 2014)
- RELEASE-NOTES: changed encoding to UTF-8 like previous releases

Daniel Stenberg (28 Jan 2014)
- TFTP: fix crash on time-out
  
  tftp_done() can get called with its TFTP state pointer still being NULL
  on an early time-out, which caused a segfault when dereferenced.
  
  Reported-by: Glenn Sheridan
  Bug: http://curl.haxx.se/mail/lib-2014-01/0246.html

Steve Holme (28 Jan 2014)
- RELEASE-NOTES: Synced with 5a47062cada9

Daniel Stenberg (28 Jan 2014)
- [Maks Naumov brought this change]

  getpass: fix password parsing from console
  
  Incorrect password if use backspace while entered the password.
  
  Regression from f7bfdbabf2d5398f4c266eabb0992a04af661f22
  
  The '?:' operator has lower priority than the '-' operator

Dan Fandrich (26 Jan 2014)
- docs/INSTALL: Updated example minimal binary sizes

Marc Hoersken (26 Jan 2014)
- testsuite: visualize line-endings in output comparison diffs

- sockfilt.c: follow up cleanup commit on 49b63cf3

- http-pipe tests: use text as output data mode to support Windows

- sockfilt.c: fixed and simplified Windows select function
  
  Since the previous complex select function with initial support for
  non-socket file descriptors, did not actually work correctly for
  Console handles, this change simplifies the whole procedure by using
  an internal waiting thread for the stdin console handle.
  
  The previous implementation made it continuously trigger for the stdin
  handle if it was being redirected to a parent process instead of
  an actual Console input window.
  
  This approach supports actual Console input handles as well as
  anonymous Pipe handles which are used during input redirection.
  
  It depends on the fact that ReadFile supports trying to read zero bytes
  which makes it wait for the handle to become ready for reading.

- http_pipe.py: replaced epoll with select to support Windows
  
  Removed Unix-specific functionality in order to support Windows:
  - select.epoll replaced with select.select
  - SocketServer.ForkingMixIn replaced with SocketServer.ForkingMixIn
  - socket.MSG_DONTWAIT replaced with socket.setblocking(False)
  
  Even though epoll has a better performance and improved socket handling
  than select, this change should not affect the actual test case.

Dan Fandrich (25 Jan 2014)
- tests: Added missing HTTP proxy keywords

- tests: added missing <features> http to a number of tests

- tests: Added a keyword for tests depending on internal info logs

- runtests: Don't log command every torture iteration in verbose

- tests: Added missing http feature to tests 509 & 1513

- netrc: Fixed a memory and file descriptor leak on OOM

- test1514: Used the macros for host and port number

- multi: Fixed a memory leak on OOM condition

Daniel Stenberg (23 Jan 2014)
- curl_easy_setopt.3: remove what auth types that work for CURLOPT_PROXYAUTH
  
  The list was out of date and the paragraph already refers to the
  CURLOPT_HTTPAUTH explanation. All the auth bits are explained properly
  there.
  
  It also removes the ambiguity for what the "added" phrase refers to.
  
  This change based on pull request #85 on github
  
  URL: https://github.com/bagder/curl/pull/85
  Reported-by: gnawhleinad

Dan Fandrich (22 Jan 2014)
- test1514: Got rid of a non-const initializer C99ism

Steve Holme (21 Jan 2014)
- RELEASE-NOTES: added another missing bug ref

Daniel Stenberg (21 Jan 2014)
- RELEASE-NOTES: added missing bug ref

- [Fabian Frank brought this change]

  axtls: fix compiler warning on conversion ssize_t => int

- [Fabian Frank brought this change]

  SFTP: stat remote file also when CURLOPT_NOBODY is 1
  
  Make it possible to call
  curl_easy_getinfo(curl, CURLINFO_CONTENT_LENGTH_DOWNLOAD, &filesize)
  and related functions on remote sftp:// files, without downloading them.
  
  Reported-by: Yingwei Liu
  Bug: http://curl.haxx.se/mail/lib-2014-01/0139.html

- RELEASE-NOTES: synced with 12ecd56da77

- contributors.sh: output list RELEASE-NOTES formatted

- [Cédric Deltheil brought this change]

  test1514: added - no more negative Content-Length (HTTP POST)
  
  This covers changes from commit afd288b2.

- [Cédric Deltheil brought this change]

  HTTP POST: omit Content-Length if data size is unknown
  
  This prevents sending a `Content-Length: -1` header, e.g this ocurred
  with the following combination:
  
  * standard HTTP POST (no chunked encoding),
  * user-defined read function set,
  * `CURLOPT_POSTFIELDSIZE(_LARGE)` NOT set.
  
  With this fix it now behaves like HTTP PUT.

- [Fabian Frank brought this change]

  disable GnuTLS insecure ciphers
  
  Make GnuTLS old and new consistent, specify the desired protocol, cipher
  and certificate type in always in both modes. Disable insecure ciphers
  as reported by howsmyssl.com. Honor not only --sslv3, but also the
  --tlsv1[.N] switches.
  
  Related Bug: http://curl.haxx.se/bug/view.cgi?id=1323

- curl_getdate.3: edited, removed references to pre 7.12.2 functionality

- gtls: fix compiler warnings on conversions size_t => unsigned int

Steve Holme (19 Jan 2014)
- tool: Fixed incorrect return code if password prompting runs out of memory
  
  Due to the changes in commit 3c929ff9f6ea and lack of subsequent
  updates, curl could return a CURLE_FTP_ACCEPT_FAILED error if
  checkpasswd() ran out of memory in versions 7.33.0 and 7.34.0.
  
  Updated the function declaration and return code to return
  CURLE_OUT_OF_MEMORY and CURLE_OK where appropriate.

- RELEASE-NOTES: Synced with 2cac75c4e400

- http_chunks.c: Fixed compilation warnings under some 32-bit systems
  
  conversion from 'curl_off_t' to 'size_t', possible loss of data
  
  Where curl_off_t is a 64-bit word and size_t is 32-bit - for example
  with 32-bit Windows builds.

- tool: Fixed incorrect return code if command line parser runs out of memory
  
  In the rare instance where getparameter() may return PARAM_NO_MEM whilst
  parsing a URL, cURL would return this error code, which is equivalent to
  CURLE_FTP_ACCEPT_FAILED in cURL error codes terms.
  
  Instead, return CURLE_FAILED_INIT and output the failure reason as per
  the other usage of getparameter().

Daniel Stenberg (18 Jan 2014)
- [Tobias Markus brought this change]

  Subject: progress bar: increase update frequency to 10Hz
  
  Increasing the update frequency of the progress bar to 10Hz greatly
  improves the visual appearance of the progress bar (at least in my
  impression).
  
  Signed-off-by: Tobias Markus <tobias@markus-regensburg.de>

- [Tobias Markus brought this change]

  progress bar: always update when at 100%
  
  Currently, the progress bar is updated at 5Hz. Because it is often not
  updated to 100% when the download is finished and curl exits, the bar
  is often "stuck" at 90-something, thus irritating the user.
  
  This patch fixes this by always updating the progress bar (instead of
  waiting for 200ms to have elapsed) while the download is finished but
  curl has not yet exited. This should not greatly affect performance
  because that moment is rather short.
  
  Signed-off-by: Tobias Markus <tobias@markus-regensburg.de>

Steve Holme (18 Jan 2014)
- win32: Added additional preprocessor check for Version Helper API
  
  A follow up patch to commit d2671340a613 as _WIN32_WINNT_WIN2K and
  _WIN32_WINNT_WIN2K may not be defined on all systems.

- win32: Corrected the preprocessor check for Version Helper API
  
  Following some auto build failures after commit c7a76bb056f31e changed
  the preprocessor check to use _WIN32_WINNT.

Daniel Stenberg (17 Jan 2014)
- cookie: max-age fixes
  
  1 - allow >31 bit max-age values
  
  2 - don't overflow on extremely large max-age values when we add the
  value to the current time
  
  3 - make sure max-age takes precedence over expires as dictated by
  RFC6265
  
  Bug: http://curl.haxx.se/mail/lib-2014-01/0130.html
  Reported-by: Chen Prog

- test1417: verify chunked-encoding transfer without CR
  
  As was introduced in 8f6b4be8af04

- chunked parsing: relax the CR strictness
  
  Allow for chunked-encoding data to get parsed with only LF line endings.
  This is allowed by browsers.

- test1416: verify the chunked size overflow detection

- chunked-parser: abort on overflows, allow 64 bit chunks

Dan Fandrich (17 Jan 2014)
- Fixed some XML syntax issues in the test data
  
  Also, make the ftp server return a canned response that doesn't
  cause XML verification problems.  Although the test file format
  isn't technically XML, it's still handy to be able to use XML
  tools to verify and manipulate them.

Daniel Stenberg (16 Jan 2014)
- [Michael Osipov brought this change]

  configure: fix gssapi linking on HP-UX
  
  The issue is with HP-UX that is comes with HP flavor of MIT
  Kerberos. This means that there is no krb5-config and the lib is called
  libgss.so
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1321

- Curl_cookie_add: remove 'now' from curl_getdate() call
  
  The now argument is unused by curl_getdate()

Steve Holme (15 Jan 2014)
- pop3-dele.c: Added missing CURLOPT_NOBODY following feedback

Daniel Stenberg (16 Jan 2014)
- connect.c:942:84: warning: Longer than 79 columns

Steve Holme (15 Jan 2014)
- connect.c: Corrected version compare in commit c7a76bb056f31e

- RELEASE-NOTES: Synced with c7a76bb056f31e

- win32: Fixed use of deprecated function 'GetVersionInfoEx' for VC12
  
  Starting with Visual Studio 2013 (VC12) and Windows 8.1 the
  GetVersionInfoEx() function has been marked as deprecated and it's
  return value atered. Updated connect.c and curl_sspi.c to use
  VerifyVersionInfo() where possible, which has been available since
  Windows 2000.

Daniel Stenberg (14 Jan 2014)
- curl_easy_setopt.3: mention how to unset CURLOPT_INFILESIZE*

- TODO: Allow SSL (HTTPS) to proxy

- TODO: remove FTP proxy and more SSL libraries

- TODO: Detect when called from witin callbacks

Marc Hoersken (13 Jan 2014)
- secureserver.pl: follow up fix for 87ade5f
  
  Since /dev/stdout is not always emulated on Windows,
  just skip the output option on Windows.
  
  MinGW/msys support /dev/stdout only from a new login shell.

Daniel Stenberg (13 Jan 2014)
- [Colin Hogben brought this change]

  error message: Sensible message on timeout when transfer size unknown
  
  A transfer timeout could result in an error message such as "Operation
  timed out after 3000 milliseconds with 19 bytes of -1 received".  This
  patch removes the non-sensical "of -1" when the size of the transfer
  is unknown, mirroring the logic in lib/transfer.c

Marc Hoersken (13 Jan 2014)
- secureserver.pl: added full support for tstunnel on Windows
  
  tstunnel on Windows does not support the pid option and is unable
  to write to an output log that is already being used as a redirection
  target for stdout. Therefore it does now output all log data to stdout
  by default and secureserver.pl creates a fake pidfile on Windows.

Steve Holme (12 Jan 2014)
- examples: Fixed compilation errors
  
  error: 'MULTI_PERFORM_HANG_TIMEOUT' undeclared

- imap-multi.c: Corrected typo

- smtp-multi.c: Minor coding style tidyup following POP3 and IMAP additions

- examples: Added IMAP multi example

- pop3-multi.c: Corrected copy/paste typo

- examples: Added POP3 multi example

- examples: Added comments to SMTP multi example based on other MAIL examples

- examples: Removed user information and TLS setup from SMTP multi example
  
  Simplified the SMTP multi example as this example should demonstrate
  the differences the easy and multi interfaces rather than introduce new
  concepts such as user authentication and TLS which are shown in the TLS
  and SSL examples.

- examples: Updated SMTP MAIL example to return libcurl result code

- examples: Synchronised comments between SMTP MAIL examples

- examples: Updated SMTP MAIL example to use a read function for data
  
  Updated to read data from a callback rather than from stdio as this is
  more realistic to most use cases.

Daniel Stenberg (12 Jan 2014)
- OpenSSL: deselect weak ciphers by default
  
  By default even recent versions of OpenSSL support and accept both
  "export strength" ciphers, small-bitsize ciphers as well as downright
  deprecated ones.
  
  This change sets a default cipher set that avoids the worst ciphers, and
  subsequently makes https://www.howsmyssl.com/a/check no longer grade
  curl/OpenSSL connects as 'Bad'.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1323
  Reported-by: Jeff Hodges

- multi: remove MULTI_TIMEOUT_INACCURACY
  
  With the recently added timeout "reminder" functionality, there's no
  reason left for us to execute timeout code before the time is
  ripe. Simplifies the handling too.
  
  This will make the *TIMEOUT and *CONNECTTIMEOUT options more accurate
  again, which probably is most important when the *_MS versions are used.
  
  In multi_socket, make sure to update 'now' after having handled activity
  on a socket.

Steve Holme (11 Jan 2014)
- Makefile.dist: Added support for VC7
  
  Currently VC7 and VC7.1 builds have to be ran with the VC variable set
  to vc6 which is not only inconsistent with the nmake winbuild system
  but also with newer versions of Visual Studio supported by this file.
  
  Note: This doesn't break the build for anyone still running with the
  VC variable set to vc6 or not set (which defaults to vc6).

- RELEASE-NOTES: Synced with 980659a2caa285

Daniel Stenberg (10 Jan 2014)
- multi_socket: remind app if timeout didn't run
  
  BACKGROUND:
  
  We have learned that on some systems timeout timers are inaccurate and
  might occasionally fire off too early. To make the multi_socket API work
  with this, we made libcurl execute timeout actions a bit early too if
  they are within our MULTI_TIMEOUT_INACCURACY. (added in commit
  2c72732ebf, present since 7.21.0)
  
  Switching everything to the multi API made this inaccuracy problem
  slightly more notable as now everyone can be affected.
  
  Recently (commit 21091549c02) we tweaked that inaccuracy value to make
  timeouts more accurate and made it platform specific. We also figured
  out that we have code at places that check for fixed timeout values so
  they MUST NOT run too early as then they will not trigger at all (see
  commit be28223f35 and a691e044705) - so there are definitately problems
  with running timeouts before they're supposed to run. (We've handled
  that so far by adding the inaccuracy margin to those specific timeouts.)
  
  The libcurl multi_socket API tells the application with a callback that
  a timeout expires in N milliseconds (and it explicitly will not tell it
  again for the same timeout), and the application is then supposed to
  call libcurl when that timeout expires. When libcurl subsequently gets
  called with curl_multi_socket_action(...CURL_SOCKET_TIMEOUT...), it
  knows that the application thinks the timeout expired - and alas, if it
  is within the inaccuracy level libcurl will run code handling that
  handle.
  
  If the application says CURL_SOCKET_TIMEOUT to libcurl and _isn't_
  within the inaccuracy level, libcurl will not consider the timeout
  expired and it will not tell the application again since the timeout
  value is still the same.
  
  NOW:
  
  This change introduces a modified behavior here. If the application says
  CURL_SOCKET_TIMEOUT and libcurl finds no timeout code to run, it will
  inform the application about the timeout value - *again* even if it is
  the same timeout that it already told about before (although libcurl
  will of course tell it the updated time so that it'll still get the
  correct remaining time). This way, we will not risk that the application
  believes it has done its job and libcurl thinks the time hasn't come yet
  to run any code and both just sit waiting. This also allows us to
  decrease the MULTI_TIMEOUT_INACCURACY margin, but that will be handled
  in a separate commit.
  
  A repeated timeout update to the application risk that the timeout will
  then fire again immediately and we have what basically is a busy-loop
  until the time is fine even for libcurl. If that becomes a problem, we
  need to address it.

- threaded-resolver: never use NULL hints with getaddrinfo
  
  The net effect of this bug as it appeared to users, would be that
  libcurl would timeout in the connect phase.
  
  When disabling IPv6 use but still using getaddrinfo, libcurl would
  wrongly not init the "hints" struct field in init_thread_sync() which
  would subsequently lead to a getaddrinfo() invoke with a zeroed hints
  with ai_socktype set to 0 instead of SOCK_STREAM. This would lead to
  different behaviors on different platforms but basically incorrect
  output.
  
  This code was introduced in 483ff1ca75cbea, released in curl 7.20.0.
  
  This bug became a problem now due to the happy eyeballs code and how
  libcurl now traverses the getaddrinfo() results differently.
  
  Bug: http://curl.haxx.se/mail/lib-2014-01/0061.html
  Reported-by: Fabian Frank
  Debugged-by: Fabian Frank

Nick Zitzmann (9 Jan 2014)
- darwinssl: un-break Leopard build after PKCS#12 change
  
  It turns out errSecDecode wasn't defined in Leopard's headers. So
  we use the enum's value instead.
  
  Bug: http://curl.haxx.se/mail/lib-2013-12/0150.html
  Reported by: Abram Pousada

Daniel Stenberg (8 Jan 2014)
- Curl_updateconninfo: don't do anything for UDP "connections"
  
  getpeername() doesn't work for UDP sockets since they're not connected
  
  Reported-by: Priyanka Shah
  Bug: http://curl.haxx.se/mail/archive-2014-01/0016.html

- info: remove debug output
  
  Removed some of the infof() calls that were added with the recent
  pipeline improvements but they're not useful to the vast majority of
  readers and the pipelining seems to fundamentaly work - the debugging
  outputs can easily be added there if debugging these functions is needed
  again.

- runtests: disable memory tracking with threaded resolver
  
  The built-in memory debug system doesn't work with multi-threaded use so
  instead of causing annoying false positives, disable the memory tracking
  if the threaded resolver is used.

- trynextip: fix build for non-IPV6 capable systems
  
  AF_INET6 may not exist then
  
  Patched-by: Iida Yosiaki
  Bug: http://curl.haxx.se/bug/view.cgi?id=1322

Steve Holme (8 Jan 2014)
- makefile: Added support for VC12

- makefile: Added support for VC11

- winbuild: Follow up fix for a47c142a88c0, 11e8066ef956 and 92b9ae5c5d59

Daniel Stenberg (7 Jan 2014)
- mk-ca-bundle.1: document -d

Steve Holme (7 Jan 2014)
- RELEASE-NOTES: Synced with 8ae35102c43d8d

Daniel Stenberg (7 Jan 2014)
- ConnectionExists: fix NTLM check for new connection
  
  When the requested authentication bitmask includes NTLM, we cannot
  re-use a connection for another username/password as we then risk
  re-using NTLM (connection-based auth).
  
  This has the unfortunate downside that if you include NTLM as a possible
  auth, you cannot re-use connections for other usernames/passwords even
  if NTLM doesn't end up the auth type used.
  
  Reported-by: Paras S
  Patched-by: Paras S
  Bug: http://curl.haxx.se/mail/lib-2014-01/0046.html

Steve Holme (5 Jan 2014)
- examples: Added required libcurl version information to SMTP examples

Daniel Stenberg (5 Jan 2014)
- mk-ca-bundle.pl: avoid warnings with -d without parameter

- [Leif W brought this change]

  mk-ca-bundle: introduces -d and warns about using this script

Steve Holme (5 Jan 2014)
- Makefile: Added missing WinSSL and x64 configurations

Marc Hoersken (5 Jan 2014)
- docs/INTERNALS: follow up fix for 11e8066 and 92b9ae5

- packages: follow up fix for a47c142, 11e8066 and 92b9ae5

- multi.c: fix possible dereference of null pointer

Steve Holme (5 Jan 2014)
- Examples: Renamed SMTP MAIL example to match other email examples

- examples: Added POP3 TLS example

- examples: Added IMAP NOOP example

- examples: Added POP3 NOOP example

- pop3-stat.c: Corrected small typo from commit 91d62e9abd761c

- examples: Added POP3 STAT example

- examples: Added POP3 TOP example

- examples: Added POP3 DELE example

- examples: Added POP3 UIDL example

- examples: Added POP3 RETR example

- examples: Added return of error code in POP3 examples

- runtests.pl: Updated copyright year after edit from d718abd968aeb4

- examples: Reworked POP3 examples for additional upcoming POP3 examples

- examples: Added SMTP SSL example

- examples: Added IMAP SSL and TLS examples

Marc Hoersken (5 Jan 2014)
- runtests.pl: check for tstunnel command on Windows
  
  The Windows console version of stunnel is called "tstunnel", while
  running "stunnel" on Windows spawns a new console window which
  cannot be handled by the testsuite.

- testcurl.pl: always show the last 5 commits even with --nogitpull

Daniel Stenberg (4 Jan 2014)
- ftp tests: provide LIST responses in the test file itself
  
  Previously LIST always returned a fixed hardcoded list that the ftp
  server code knew about, mostly since the server didn't get any test case
  number in the LIST scenario. Starting now, doing a CWD to a directory
  named test-[number] will make the test server remember that number and
  consider it a test case so that a subsequent LIST command will send the
  <data> section of that test case back.
  
  It allows LIST tests to be made more similar to how all other tests
  work.
  
  Test 100 was updated to provide its own directory listing.

Steve Holme (4 Jan 2014)
- examples: Standardised username and password settings for all email examples
  
  Replaced the use of CURLOPT_USERPWD for the preferred CURLOPT_USERNAME
  and CURLOPT_PASSWORD options and used the same username and password for
  all email examples which is the same as that used in the test suite.

- Updated copyright year for recent changes

Marc Hoersken (4 Jan 2014)
- secureserver.pl: support for stunnel-path with nun-alphanum chars
  
  This is desired to support stunnel installations on Windows.

- conncache.c: fix possible dereference of null pointer

- docs: primarily refer to schannel as WinSSL

Steve Holme (4 Jan 2014)
- examples: Added IMAP COPY example

- examples: Added IMAP DELETE example

- examples: Added IMAP CREATE example

Daniel Stenberg (4 Jan 2014)
- FTP parselist: fix "total" parser
  
  A regression introduced in 7f3b87d8782eae1 (present in the 7.21.4 release)
  broke the total parser. Now skip the whitespace and the digits.
  
  Reported-by: Justin Maggard
  Bug: http://curl.haxx.se/mail/lib-2014-01/0019.html

- test1513: fix spelling

Marc Hoersken (3 Jan 2014)
- Makefile.vc6: follow up fix for 11e8066 and 92b9ae5

Daniel Stenberg (3 Jan 2014)
- test1513: added - verify early progress callback return fail
  
  Verify the change brought in commit 8e11731653061. It makes sure that
  returning a failure from the progress callback even very early results
  in the correct return code.

- progresscallback: make CURLE_ABORTED_BY_CALLBACK get returned better
  
  When the progress callback returned 1 at a very early state, the code
  would not make CURLE_ABORTED_BY_CALLBACK get returned but the process
  would still be interrupted. In the HTTP case, this would then cause a
  CURLE_GOT_NOTHING to erroneously get returned instead.
  
  Reported-by: Petr Novak
  Bug: http://curl.haxx.se/bug/view.cgi?id=1318

Marc Hoersken (3 Jan 2014)
- unittests: do not include curl_memory.h
  
  memdebug.h already contains all required definitions and including
  curl_memory.h causes errors like the following:
  
  tests/unit/unit1394.c:119: undefined reference to `Curl_cfree'
  tests/unit/unit1394.c:120: undefined reference to `Curl_cfree'

Daniel Stenberg (3 Jan 2014)
- pipeline: remove print_pipeline()
  
  This is a debug function only and serves no purpose in production code,
  it only slows things down. I left the code #ifdef'ed for possible future
  pipeline debugging.
  
  Also, this was a global function without proper namespace usage.
  
  Reported-by: He Qin
  Bug: http://curl.haxx.se/bug/view.cgi?id=1320

- openssl: allow explicit sslv2 selection
  
  If OpenSSL is built to support SSLv2 this brings back the ability to
  explicitly select that as a protocol level.
  
  Reported-by: Steve Holme
  Bug: http://curl.haxx.se/mail/lib-2014-01/0013.html

Steve Holme (2 Jan 2014)
- Bumped copyright year to 2014

- Updated copyright year for recent changes

Marc Hoersken (3 Jan 2014)
- vtls/nssg.h: fixed include references to moved file

Daniel Stenberg (3 Jan 2014)
- [Christian Weisgerber brought this change]

  curl_easy_setopt.3: fix formatting mistakes
  
  This fixes two markup typos I noticed in curl_easy_setopt.3.  (The use
  of bold vs. italics seems a bit inconsistent in that page, but it should
  at least be valid man syntax.)

- [Barry Abrahamson brought this change]

  OpenSSL: Fix forcing SSLv3 connections
  
  Some feedback provided by byte_bucket on IRC pointed out that commit
  db11750cfa5b1 wasn’t really correct because it allows for “upgrading” to a
  newer protocol when it should be only allowing for SSLv3.
  
  This change fixes that.
  
  When SSLv3 connection is forced, don't allow SSL negotiations for newer
  versions.  Feedback provided by byte_bucket in #curl.  This behavior is
  also consistent with the other force flags like --tlsv1.1 which doesn't
  allow for TLSv1.2 negotiation, etc
  
  Feedback-by: byte_bucket
  Bug: http://curl.haxx.se/bug/view.cgi?id=1319

Guenter Knauf (2 Jan 2014)
- Trial to fix the nmake Makefile for vtls files.

Steve Holme (2 Jan 2014)
- examples: Added IMAP SEARCH example

- examples: Added IMAP EXAMINE mailbox folder example

Guenter Knauf (2 Jan 2014)
- Fix NetWare build for vtls files.

Daniel Stenberg (1 Jan 2014)
- CMakeLists.txt: add standard curl source code header

- CMakeLists.txt: add warning about the cmake build's state

Steve Holme (1 Jan 2014)
- examples: Updated SMTP multi example to be more realistic
  
  Updated the contents of the email and payload callback as per the IMAP
  and other SMTP examples.

Daniel Stenberg (1 Jan 2014)
- [Barry Abrahamson brought this change]

  OpenSSL: Fix forcing SSLv3 connections
  
  Since ad34a2d5c87c7f4b14e8dded3 (present in 7.34.0 release) forcing
  SSLv3 will always return the error "curl: (35) Unsupported SSL protocol
  version" Can be replicated with `curl -I -3 https://www.google.com/`.
  This fix simply allows for v3 to be forced.

Steve Holme (1 Jan 2014)
- examples: Corrected unescaped backslash in imap-store.c

- examples: Update SMTP TLS example mail content to be RFC-2821 compliant
  
  ...and made some minor coding style changes to better match the curl
  coding standards as well as the other email related examples.

- examples: Added IMAP APPEND example

- examples: Added IMAP STORE example

- RELEASE-NOTES: Synced with 7de2e032584d44

- examples: Added IMAP LIST mailbox example

- examples: Updated IMAP fetch example for libcurl 7.30.0

- examples: Rename before adding additional email examples

- examples: Added SMTP EXPN command example

- examples: Added SMTP email verification example

- imap: Fixed line length warning

- mprintf: Replaced internal usage of FORMAT_OFF_T and FORMAT_OFF_TU
  
  Following commit 0aafd77fa4c6f2, replaced the internal usage of
  FORMAT_OFF_T and FORMAT_OFF_TU with the external versions that we
  expect API programmers to use.
  
  This negates the need for separate definitions which were subtly
  different under different platforms/compilers.

- examples: Updated copyright year for recent edits

- examples: Corrected incorrect indentation in smtp-multi.c

- examples: Updated SMTP examples to set CURLOPT_UPLOAD

- mprintf: Added support for I, I32 and I64 size specifiers
  
  Added support to the built-in printf() replacement functions, for these
  non-ANSI extensions when compiling under Visual Studio, Borland, Watcom
  and MinGW.
  
  This fixes problems when generating libcurl source code that contains
  curl_off_t variables.

- curl_easy_setopt.3: Added SMTP information to CURLOPT_INFILESIZE_LARGE
  
  Although added to CURLOPT_INFILESIZE in commit ee3d3adc6fe155 it was
  never added to CURLOPT_INFILESIZE_LARGE.

- tests: Disabled NTLM tests when running with SSPI enabled

- connect.c: Fixed compilation warning
  
  warning: 'res' may be used uninitialized in this function

- runtests.pl: Fixed slightly incorrect regex in commit 28dd47d4d41900

- [Björn Stenberg brought this change]

  connect: Try all addresses in first connection attempt
  
  Fixes a bug when all addresses in the first family fail immediately, due
  to "Network unreachable" for example, curl would hang and never try the
  next address family.
  
  Iterate through all address families when to trying establish the first
  connection attempt.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1315
  Reported-by: Michal Górny and Anthony G. Basile

- runtests.pl: Optimised feature present checking code
  
  ...to exclude not present features.

- runtests.pl: Added the ability to run tests when a feature is not present

- ftpserver.pl: Fixed compilation error
  
  Unmatched right curly bracket at line 758, at end of line

- ftpserver.pl: Reworked SMTP verified server detection
  
  Following the addition of informational commands to the SMTP protocol,
  the test server is no longer required to return the verified server
  information in responses that curl only outputs in verbose mode.
  
  Instead, a similar detection mechanism to that used by FTP, IMAP and
  POP3 can now be used.

- sendf.c: Fixed compilation warning from f2d234a4dd9bcc
  
  sendf.c:450:81: warning: Longer than 79 columns

- FILE: Fixed sending of data would always return CURLE_WRITE_ERROR
  
  Introduced in commit 2a4ee0d2215556 sending of data via the FILE
  protocol would always return CURLE_WRITE_ERROR regardless of whether
  CURL_WRITEFUNC_PAUSE was returned from the callback function or not.

Daniel Stenberg (26 Dec 2013)
- FILE: we don't support paused transfers using this protocol
  
  Make sure that we detect such attempts and return a proper error code
  instead of silently handling this in problematic ways.
  
  Updated the documentation to mention this limitation.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1286

Steve Holme (26 Dec 2013)
- vtls: Updated comments referencing sslgen.c and ssluse.c

- vtls: Fixed up include of vtls.h

Daniel Stenberg (25 Dec 2013)
- curl_dofree: allow free(NULL)
  
  Previously this memdebug free() replacement didn't properly work with a
  NULL argument which has made us write code that avoids calling
  free(NULL) - which causes some extra nuisance and unnecessary code.
  Starting now, we should allow free(NULL) even when built with the
  memdebug system enabled.
  
  free(NULL) is permitted by POSIX

Steve Holme (25 Dec 2013)
- RELEASE-NOTES: Synced with 0ff0a994ada62a

Daniel Stenberg (25 Dec 2013)
- Curl_thread_create: use Curl_safefree to allow NULL better
  
  free() itself allows a NULL input but our memory debug system requires
  Curl_safefree() to be used instead when a "legitimate" NULL may be freed. Like
  in the code here.
  
  Pointed-out-by: Steve Holme

- [Luke Dashjr brought this change]

  threaded resolver: Use pthread_t * for curl_thread_t
  
  ... since pthread_t may be non-scalar and/or may represent a real thread
  with scalar 0.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1314

Steve Holme (24 Dec 2013)
- imap: Fixed auth preference not being honored when CAPABILITY not supported
  
  If a user indicated they preferred to authenticate using a SASL
  mechanism, but SASL authentication wasn't supported by the server, curl
  would always fall back to clear text when CAPABILITY wasn't supported,
  even though the user didn't want to use this.

- pop3: Fixed auth preference not being honored when CAPA not supported
  
  If a user indicated they preferred to authenticate using APOP or a SASL
  mechanism, but neither were supported by the server, curl would always
  fall back to clear text when CAPA wasn't supported, even though the
  user didn't want to use this.
  
  This also fixes the auto build failure caused by commit 6f2d5f0562f64a.

Daniel Stenberg (24 Dec 2013)
- TheArtOfHttpScripting: major update, converted layout and more

- Curl_pp_readresp: use memmove not memcpy, possibly overlapping areas
  
  Fixes commit 1deac31eba7

Steve Holme (24 Dec 2013)
- RELEASE-NOTES: Corrected copy/paste typo

- pop3: Fixed APOP being determined by CAPA response rather than by timestamp
  
  This commit replaces that of 9f260b5d6610f3 because according to RFC-2449,
  section 6, there is no APOP capability "...even though APOP is an
  optional command in [POP3].  Clients discover server support of APOP by
  the presence in the greeting banner of an initial challenge enclosed in
  angle brackets."

- tests: Removed APOP timestamp from default server greeting

- test936: Corrected login details from commit 7246255416617a

- ftpserver.pl: Updated custom full text REPLY regex
  
  SASL downgrade tests: 833, 835, 879, 881, 935 and 937 would fail as
  they contained a minus sign in their authentication mechanism and this
  would be missed by the custom reply parser.

- tests: Corrected syntax error from commit 7246255416617a

- tests: Added SMTP SASL downgrade tests

- tests: Added POP3 SASL downgrade tests

- tests: Added IMAP SASL downgrade tests

Daniel Stenberg (22 Dec 2013)
- docs: mention CURLOPT_MAX_RECV/SEND_SPEED_LARGE don't work for FILE://

- FILE: don't wait due to CURLOPT_MAX_RECV_SPEED_LARGE
  
  The FILE:// code doesn't support this option - and it doesn't make sense
  to support it as long as it works as it does since then it'd only block
  even longer.
  
  But: setting CURLOPT_MAX_RECV_SPEED_LARGE would make the transfer first
  get done and then libcurl would wait until the average speed would get
  low enough. This happened because the transfer happens completely in the
  DO state for FILE:// but then it would still unconditionally continue in
  to the PERFORM state where the speed check is made.
  
  Starting now, the code will skip from DO_DONE to DONE immediately if no
  socket is set to be recv()ed or send()ed to.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1312
  Reported-by: Mohammad AlSaleh

Steve Holme (22 Dec 2013)
- ftpserver.pl: Fixed runtime warning from commit 7da9c95bcf1fe6
  
  Use of uninitialized value $FTPARG in concatenation (.) or string at
  line 3255.

- ftpserver.pl: Added the ability to send custom full text replies

- ftpserver.pl: Added the ability to specify custom full text replies

- ftpserver.pl: Renamed commandreply variable from customreply

- tests: Added SASL cancellation keywords
  
  Added SASL CANCELLATION keywords to differentiate these tests from the
  upcoming SASL downgrade tests.

- email: Fixed segfault introduced in commit 195b63f99c2fe3

Daniel Stenberg (22 Dec 2013)
- code police: fix indent level to silence checksrc complaints

Steve Holme (21 Dec 2013)
- email: Extended the login options to support multiple auth mechanisms

Daniel Stenberg (22 Dec 2013)
- Curl_pp_readresp: replace stupid loop with memcpy

- Curl_pp_readresp: zero terminate line
  
  The comment in the code mentions the zero terminating after having
  copied data, but it mistakingly zero terminated the source data and not
  the destination! This caused the test 864 problem discussed on the list:
  
  http://curl.haxx.se/mail/lib-2013-12/0113.html
  Signed-off-by: Daniel Stenberg <daniel@haxx.se>

Steve Holme (21 Dec 2013)
- Revert "pop3: Added debug information to assist with test864 failure"
  
  This reverts commit 727d798d680f29c8b3cb7d7f03d6b6a3eb4356da.

- pop3: Added debug information to assist with test864 failure

- RELEASE-NOTES: Synced with 812c5ace759d04

- pop3: Fixed APOP timestamp detection from commit 1cfb436a2f1795

Daniel Stenberg (20 Dec 2013)
- Makefile.inc: use standard source header

- Makefile.inc: specify the vtls sources+headers separately

- vtls: renamed sslgen.[ch] to vtls.[ch]

- openssl: renamed backend files to openssl.[ch]

- vtls: moved all TLS/SSL source and header files into subdir

- vtls: created subdir, moved sslgen.[ch] there, updated all include lines

Steve Holme (20 Dec 2013)
- pop3: Fixed selection of APOP when server replies with an invalid timestamp
  
  Although highlighted by a bug in commit 1cfb436a2f1795, APOP
  authentication could be chosen if the server was to reply with an empty
  or missing timestamp in the server greeting and APOP was given in the
  capability list by the server.

- pop3: Fixed processing of more than one response when sent in same packet
  
  Added a loop to pop3_statemach_act() in which Curl_pp_readresp() is
  called until the cache is drained. Without this multiple responses
  received in a single packet could result in a hang or delay.

- pop3: Moved CAPA response handling to pop3_state_capa_resp()
  
  Similar to the processing of untagged CAPABILITY responses in IMAP and
  multi-line EHLO responses in SMTP, moved the processing of multi-line
  CAPA responses to pop3_state_capa_resp().

- pop3: Moved APOP detection into pop3_state_servergreet_resp()
  
  In an effort to reduce what pop3_endofresp() does and bring the POP3
  source back inline with the IMAP and SMTP protocols, moved the APOP
  detection into pop3_state_servergreet_resp().

- curl_easy_setopt: Fixed OAuth 2.0 Bearer option name
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1313
  Reported-by: Viktor Szakáts

Daniel Stenberg (18 Dec 2013)
- curl.1: remove URL encoding phrase from --data description
  
  ... it could be misleading a reader into thinking it _has_ to be encoded.

Steve Holme (18 Dec 2013)
- imap/pop3/smtp: Added support for SASL authentication downgrades
  
  Added support for downgrading the SASL authentication mechanism when the
  decoding of CRAM-MD5, DIGEST-MD5 and NTLM messages fails. This enhances
  the previously added support for graceful cancellation by allowing the
  client to retry a lesser SASL mechanism such as LOGIN or PLAIN, or even
  APOP / clear text (in the case of POP3 and IMAP) when supported by the
  server.

Daniel Stenberg (18 Dec 2013)
- RELEASE-PROCEDURE: new document

- gitignore: ignore .dirstamp files

- smtp: fix compiler warning
  
  smtp.c:478:21: error: unused variable 'smtpc' [-Werror=unused-variable]

Steve Holme (18 Dec 2013)
- smtp: Moved the calculation of SASL login details into a separate function

- pop3: Moved the calculation of SASL login details into a separate function

- imap: Moved the calculation of SASL login details into a separate function

- smtp: Moved the sending of the AUTH command into a separate function

- pop3: Moved the sending of the AUTH command into a separate function

- imap: Moved the sending of the AUTHENICATE command into a separate function

- email: Renamed *_perform_authenticate() functions
  
  In preparation for the upcoming SASL downgrade feature renamed the
  imap__perform_authenticate(), pop3__perform_authenticate() and
  smtp__perform_authenticate() functions.

Daniel Stenberg (17 Dec 2013)
- bump: start working on the next release

Version 7.34.0 (16 Dec 2013)

Daniel Stenberg (16 Dec 2013)
- RELEASE-NOTES: synced with c0ef05e67
  
  ... for the pending 7.34.0 release
  
  Upped the contributor count

- THANKS: add contributors from 7.34.0 release
  
  24 new great friends

- gtls: respect *VERIFYHOST independently of *VERIFYPEER
  
  Security flaw CVE-2013-6422
  
  This is conceptually the same problem and fix that 3c3622b6 brought to the
  OpenSSL backend and that resulted in CVE-2013-4545.
  
  This version of the problem was independently introduced to the GnuTLS
  backend with commit 59cf93cc, present in the code since the libcurl
  7.21.4 release.
  
  Advisory: http://curl.haxx.se/docs/adv_20131217.html
  Bug: http://curl.haxx.se/mail/lib-2013-11/0214.html
  Reported-by: Marc Deslauriers

- curl.1 document -J doesn't %-decode
  
  ...also added as KNOWN_BUG #87 with reference to bug #1294

- multi: add timer inaccuracy margin to timeout/connecttimeout
  
  Since all systems have inaccuracy in the timeout handling it is
  imperative that we add an inaccuracy margin to the general timeout and
  connecttimeout handling with the multi interface. This way, when the
  timeout fires we should be fairly sure that it has passed the timeout
  value and will be suitably detected.
  
  For cases where the timeout fire before the actual timeout, we would
  otherwise consume the timeout action and still not run the timeout code
  since the condition wasn't met.
  
  Reported-by: He Qin
  Bug: http://curl.haxx.se/bug/view.cgi?id=1298

- RELEASE-NOTES: synced with dd4d9ea542

- curl_easy_setopt: clarify some USERPWD and PROXYUSERPWD details

- login options: remove the ;[options] support from CURLOPT_USERPWD
  
  To avoid the regression when users pass in passwords containing semi-
  colons, we now drop the ability to set the login options with the same
  options. Support for login options in CURLOPT_USERPWD was added in
  7.31.0.
  
  Test case 83 was modified to verify that colons and semi-colons can be
  used as part of the password when using -u (CURLOPT_USERPWD).
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1311
  Reported-by: Petr Bahula
  Assisted-by: Steve Holme
  Signed-off-by: Daniel Stenberg <daniel@haxx.se>

Steve Holme (14 Dec 2013)
- imap: Fixed exclude of clear text when using auth=* in commit 75cd7fd66762bb
  
  It is not 100% clear whether * should include clear text LOGIN or not
  from RFC-5092, however, including it is then consistent with current
  POP3 behaviour where clear text, APOP or SASL may be chosen.

- imap: Fixed incorrect fallback to clear text authentication
  
  If a specific SASL authentication mechanism was requested by the user
  as part of the login options but wasn't supported by the server then
  curl would fallback to clear text, when it shouldn't, rather than
  reporting "No known authentication mechanisms supported" as the POP3
  and SMTP protocols do.

Daniel Stenberg (11 Dec 2013)
- [Eric Lubin brought this change]

  parsedate: avoid integer overflow
  
  In C, signed integer overflow is undefined behavior. Thus, the compiler
  is allowed to assume that it will not occur. In the check for an
  overflow, the developer assumes that the signed integer of type time_t
  will wrap around if it overflows. However, this behavior is undefined in
  the C standard. Thus, when the compiler sees this, it simplifies t +
  delta < t to delta < 0. Since delta > 0 and delta < 0 can't both be
  true, the entire if statement is optimized out under certain
  optimization levels. Thus, the parsedate function would return
  PARSEDATE_OK with an undefined value in the time, instead of return -1 =
  PARSEDATE_FAIL.

- parseconfig: warn if unquoted white spaces are detected
  
  Commit 0db811b6 made some existing config files pass on unexpected
  values to libcurl that made it somewhat hard to track down what was
  really going on.
  
  This code detects unquoted white spaces in the parameter when parsing a
  config file as that would be one symptom and it is generally a bad
  syntax anyway.

- RELEASE-NOTES: recount contributors and libcurl options

- RELEASE-NOTES: synced with c4f46e97ca6c

- [James Dury brought this change]

  TFTP: let tftp_multi_statemach()'s return codes through
  
  It would otherwise always clobber the return code with new function
  calls and it couldn't return timeout etc.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1310

Nick Zitzmann (7 Dec 2013)
- [Melissa Mears brought this change]

  darwinssl: Fix #if 10.6.0 for SecKeychainSearch
  
  The comment here says that SecKeychainSearch causes a deprecation
  warning when used with a minimum Mac OS X SDK version of 10.7.0, which
  is correct.  However, the #if guard did not match.  It was intended to
  only use the code if 10.6.0 support was enabled, but it had 10.7.0
  instead.  This caused a warning if the minimum was exactly 10.7.0.

Daniel Stenberg (6 Dec 2013)
- [Christian Weisgerber brought this change]

  curl.h: <sys/select.h> for OpenBSD
  
  curl.h should also include <sys/select.h> on OpenBSD to reliably
  pull in select().  Typically, including <sys/time.h> will be enough,
  but not if strict standards-compliance is requested (e.g. by defining
  _XOPEN_SOURCE).

- digest: fix CURLAUTH_DIGEST_IE
  
  The URI that is passed in as part of the Authorization: header needs to
  be cut off at '?' if CURLAUTH_DIGEST_IE is set. Previously the code only
  did when calculating the MD5sum.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1308
  Patched-by: Sergey Tatarincev

- Curl_is_connected: use proxy name in error message when proxy is used
  
  (bug introduced in 255826c4, never present in a release)
  
  Reported-by: Dima Tisnek
  Bug: http://curl.haxx.se/mail/lib-2013-12/0006.html

Steve Holme (4 Dec 2013)
- imap/pop3: Post graceful cancellation consistency changes

- [Melissa Mears brought this change]

  pop3: Fix POP3_TYPE_ANY signed compilation warning
  
  POP3_TYPE_ANY, or ~0, is written to pop3c->preftype in lib/pop3c.c, an
  unsigned int variable.  The result of ~0 is -1, which caused a warning
  due to writing a negative number to an unsigned variable.  To fix this,
  make the expression ~0U so that its value is considered the unsigned
  number UINT_MAX which is what SASL_AUTH_ANY does in curl_sasl.h.

Kamil Dudka (2 Dec 2013)
- tool_metalink: do not use HAVE_NSS_INITCONTEXT
  
  ... no longer provided by the configure script

- nss: make sure that 'sslver' is always initialized

- nss: unconditionally require NSS_InitContext()
  
  ... since we depend on NSS 3.14+ because of SSL_VersionRangeSet() anyway

- nss: allow to use TLS > 1.0 if built against recent NSS
  
  Bug: http://curl.haxx.se/mail/lib-2013-11/0162.html

- nss: put SSL version selection into separate fnc

- nss: use a better API for controlling SSL version
  
  This change introduces a dependency on NSS 3.14+.

Patrick Monnerat (2 Dec 2013)
- OS400: sync wrappers and RPG binding.

Steve Holme (1 Dec 2013)
- multi.c: Fixed compilation warning
  
  warning: declaration of 'pipe' shadows a global declaration

- RELEASE-NOTES: Synced with ad3836448efbb7

- base64: Corrected typo from commit f3ee587775c88a

- base64: Post extended extended validation tidy up
  
  Reduced the separate processing of the last quantum to be performed in
  the main decoding loop and renamed some variables for consistency.

- base64: Extended validation to look for invalid characters
  
  Extended the basic validation in commit e17c1b25bc33eb to return a
  failure when invalid base64 characters are included.

- base64: Post basic validation tidy up
  
  Due to the length checks introduced in commit e17c1b25bc33eb there is no
  need to allow for extra space in the output buffer for a non-padded last
  quantum.

- curl_easy_getinfo: Post CURLINFO_TLS_SESSION tidy up
  
  1) Renamed curl_tlsinfo to curl_tlssessioninfo as discussed on the
  mailing list.
  2) Renamed curl_ssl_backend to curl_sslbackend so it doesn't follow our
  function naming convention.
  3) Updated sessioninfo.c example accordingly.

Daniel Stenberg (29 Nov 2013)
- parseconfig: dash options can't specified with colon or equals
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1297
  Reported-by: Michael Osipov

- curl.1: -G also takes --data-urlencode data

- globbing: curl glob counter mismatch with {} list use
  
  The "fixed string" function wrongly bumped the "urlnum" counter which
  made curl output the total number of URLs wrong when using
  {one,two,three} lists in globs.
  
  Reported-by: Michael-O
  Bug: http://curl.haxx.se/bug/view.cgi?id=1305

Steve Holme (28 Nov 2013)
- [Christian Grothoff brought this change]

  sessioninfo.c: Added sample code for CURLINFO_TLS_SESSION
  
  Added a simple example to show how one can use CURLINFO_TLS_SESSION for
  obtaining extensive TLS certificate information.

- multi.c: Fixed compilation error introduced in commit a900d45489fc14
  
  Systems that define SIGPIPE_VARIABLE as a noop would not compile as
  restore_pipe was defined afterwards.

- [Christian Grothoff brought this change]

  curl_easy_getopt: Handle API violation gracefully
  
  This fixes a NULL dereference in the case where the client asks for
  CURLINFO_TLS_SESSION data after the (TLS) session has already been
  destroyed (i.e. curl_easy_perform has already completed for this
  handle). Instead of crashing, we now return a CURLSSLBACKEND_NONE
  error.

- KNOWN_BUGS: #86: Disconnect commands may not be sent by IMAP, POP3 and SMTP

Daniel Stenberg (27 Nov 2013)
- [Jeff King brought this change]

  curl_multi_cleanup: ignore SIGPIPE
  
  This is an extension to the fix in 7d80ed64e43515. We may
  call Curl_disconnect() while cleaning up the multi handle,
  which could lead to openssl sending packets, which could get
  a SIGPIPE.
  
  Signed-off-by: Jeff King <peff@peff.net>

- [Jeff King brought this change]

  sigpipe: factor out sigpipe_reset from easy.c
  
  Commit 7d80ed64e43515 introduced some helpers to handle
  sigpipe in easy.c. However, that fix was incomplete, and we
  need to add more callers in other files. The first step is
  making the helpers globally accessible.
  
  Since the functions are small and should generally end up
  inlined anyway, we simply define them in the header as
  static functions.
  
  Signed-off-by: Jeff King <peff@peff.net>

- [Björn Stenberg brought this change]

  connect: Try next ip directly after immediate connect fail
  
  This fixes a rare Happy Eyeballs bug where if the first IP family runs
  out of addresses before the second-family-timer fires, and the second
  IP family's first connect fails immediately, no further IPs of the
  second family are attempted.

- hostip: don't prune DNS cache entries that are in use
  
  When adding entries to the DNS cache with CURLOPT_RESOLVE, they are
  marked 'inuse' forever to prevent them from ever being removed in normal
  operations. Still, the code that pruned out-of-date DNS entries didn't
  care for the 'inuse' struct field and pruned it anyway!
  
  Reported-by: Romulo A. Ceccon
  Bug: http://curl.haxx.se/bug/view.cgi?id=1303

Steve Holme (24 Nov 2013)
- RELEASE-NOTES: Synced with 35e476a3f6cdd5

- tests: Re-ordered test arguments to match other IMAP tests

- tests: Corrected login "username" authentication responses

- tests: Added error code explanation comments

- tests: Removed expected QUIT response from graceful cancellation tests
  
  A failure during authentication, which is performed as part of the
  CONNECT phrase (for IMAP, POP3 and SMTP) is considered by the multi-
  interface as being closed prematurely (aka a dead connection). As such
  these protocols cannot issue the relevant QUIT or LOGOUT command.
  
  Temporarily fixed the test cases until we can fix this properly.

- tests: Added SMTP graceful authentication cancellation tests

- tests: Added POP3 graceful authentication cancellation tests

- ftpserver.pl: Reworked fix from commit 7a36b2abc06862

- ftpserver.pl: Fixed unknown IMAP command "*"

- ftpserver.pl: Fixed servercmd REPLY with * detection

- tests: Added IMAP graceful authentication cancellation tests

- tests: Moved CR LF in URL tests to their respective protocol groups

- smtp: Post SMTP command expansion tidy up
  
  Removed unnecessary SMTP_STOP state changes on failure.
  
  Removed hard return on failure in smtp_state_data_resp().

- symbols-in-versions: Added missing CURLSSLBACKEND_* symbols

- symbols-in-versions: Fixed missing CURLINFO_TLS_SESSION

- [Christian Grothoff brought this change]

  curl_easy_getinfo: Added CURLINFO_TLS_SESSION for accessing TLS internals
  
  Added new API for returning a SSL backend type and pointer, in order to
  allow access to the TLS internals, that may then be used to obtain X509
  certificate information for example.

- RELEASE-NOTES: Synced with 8191800a0c8ff7

- smtp: Fixed space being sent in non --mail-rcpt based requests
  
  Commands such as NOOP, RSET and HELP would be sent with a space at the
  end of the command, for example: "NOOP ".

- tests: Added SMTP NOOP and RSET tests

- test928: Corrected typo in expected data from commit df58084695ce9b

- tests: Added SMTP HELP test

- smtp: Changed the default command to HELP when no options are specified
  
  Otherwise a NOOP operation would be performed which a) only returns a
  single line response and not a multiline response where -I needs to be
  used, and b) provides an inconsistent user experience compared to that
  of the POP3 and IMAP protocols.

- smtp:Fixed memory leak from commit dac01ff6d788b2
  
  The buffer allocated by smtp_parse_custom_request() was not freed.

- connect: Close open but unconnected socket in singleipconnect()
  
  singleipconnect() could return the file descriptor of an open socket
  even though the function returned a CURLE_COULDNT_CONNECT error code
  from commit ed1662c374361a and 02fbc26d59c591.
  
  This could cause tests 19, 704 and 1233 to fail on FreeBSD, AIX and
  Solaris.

- tests: Added SMTP EXPN command test

- test926: Corrected unknown user reply from commit 0d735c29f92748
  
  The error code should not be sent as data as it isn't passed onto the
  client as body data, so cannot be compared in the test suite against
  expected data.

- tests: Corrected missing data reply sections from 3d50e91aeef8cc

- tests: Added SMTP VRFY command tests

- ftpserver.pl: Added support for new SMTP commands

- smtp: Fixed broken RCPT TO from commit 0ea4a80bb23666

Daniel Stenberg (15 Nov 2013)
- smtp_state_mail_resp: removed unused variable 'smtp'

Steve Holme (15 Nov 2013)
- DOCS: Updated curl_easy_setopt.3 following recent SMTP changes
  
  * Added information about the verify and expand commands to
    CURLOPT_MAIL_RCPT.
  * Reworked CURLOPT_CUSTOMREQUEST section, adding information about IMAP
    and SMTP custom commands.

- DOCS: Updated manpage following recent SMTP modifications
  
  * Added SMTP section to --request
  * Expanded --mail-rcpt to describe the usage when using the verify and
    expand commands.

- smtp: Simplified the next RCPT TO logic

- lib1507.c: Added missing set of CURLOPT_UPLOAD option
  
  Although this option should have already been set, the SMTP module can
  now download information from and send instructional commands to, an
  SMTP server, requiring the option to be set in order to perform a mail
  transfer.

- smtp.c: Fixed trailing whitespace

- smtp: Added support for VRFY and EXPN commands

- smtp: Added support for NOOP and RSET commands

- smtp: Fixed handling of multiline server greeting responses
  
  Incorrectly processed multiline server greeting responses as "wanted"
  continue responses in smtp_endofresp(), from commit f16c0de4e9bbe3,
  which in turn broke the SMTP server detection in the test suite,
  because the EHLO command would not be sent.

- smtp.c: Fixed compilation error from commit f16c0de4e9bbe3
  
  warning: unused variable 'smtpc'

- smtp: Fixed processing of more than one response when sent in same packet
  
  Added a loop to smtp_statemach_act() in which Curl_pp_readresp() is
  called until the cache is drained. Without this multiple responses
  received in a single packet could result in a hang or delay.

- smtp: Moved EHLO response handling to smtp_state_ehlo_resp()
  
  Similar to the processing of untagged CAPABILITY responses in IMAP moved
  the processing of multiline EHLO responses to smtp_state_ehlo_resp() and
  introduced an internal response code of one to differentiate a multiline
  continuation from the end of command. This also allows for the separate
  processing of multiline responses from commands such as VRFY and EXPN.

- connect: Forgot to correct line endings before push in commit ed1662c374361a

- [Björn Stenberg brought this change]

  connect: Return the socket descriptor even on fail
  
  singleipconnect() did not return the open socket descriptor on some
  errors, thereby sometimes causing a socket leak. This patch ensures
  the socket is always returned.

Daniel Stenberg (13 Nov 2013)
- configure: Fix test with -Werror=implicit-function-declaration
  
  The ipv6 auto-detect test in configure returns a false negative when
  CFLAGS contains -Werror=implicit-function-declaration. (I have been
  using this flag to detect code issues that would result in SEGVs on
  x86_64-cygwin.)
  
  Patch-by: Yaakov Selkowitz
  Bug: http://curl.haxx.se/bug/view.cgi?id=1304

Steve Holme (13 Nov 2013)
- test825: Corrected typo from commit b29217d0d682d4

- RELEASE-NOTES: Synced with bde901ad89a6f1

- test922: Corrected title to match other OAuth 2.0 tests

- tests: Added IMAP OAuth 2.0 authentication with initial response test

- tests: Added IMAP NTLM authentication with initial response test

- tests: Added IMAP login authentication with initial response test

- tests: Added IMAP plain authentication with initial response test

- test873: Use proper padding in NTLM responses

Nick Zitzmann (12 Nov 2013)
- darwinssl: check for SSLSetSessionOption() presence when toggling BEAST
  
  Even though this is only a formality (since not many people build on
  Mavericks while targeting Leopard), since we still support Leopard
  at the earliest, we might as well be pedantic.

- darwinssl: PKCS#12 import feature now requires Lion or later
  
  It turns out that some of the constants necessary to make this feature
  work are missing from Snow Leopard's Security framework even though
  they are defined in the headers.
  
  Bug: http://curl.haxx.se/mail/lib-2013-11/0076.html
  Reported by: myriachan

Steve Holme (13 Nov 2013)
- tests: Added POP3 OAuth 2.0 authentication with initial response test

- tests: Added POP3 NTLM authentication with initial response test

- tests: Added POP3 login authentication with initial response test

- tests: Added POP3 plain authentication with initial response test

- TODO: Added auth= in URLs to the wish list for HTTP

- curl_easy_setopt: Added the ability to set the login options separately
  
  Rather than set the authentication options as part of the login details
  specified in the URL, or via the older CURLOPT_USERPWD option, added a
  new libcurl option to allow the login options to be set separately.

Daniel Stenberg (12 Nov 2013)
- curl.1: mention that -O does no URL decoding

Kamil Dudka (12 Nov 2013)
- [Tomas Hoger brought this change]

  curl_easy_setopt.3: clarify CURLOPT_SSL_VERIFYHOST documentation
  
  - better describe what happens when 1 is specified as parameter
  - clarify what "is ignored" means for NSS builds

Steve Holme (12 Nov 2013)
- runtests.pl: Added SSPI detection

- multi: Small code tidy up to avoid hard return

- tests: Updated CRAM-MD5 tests to use test user details

- [Björn Stenberg brought this change]

  multi: Set read socket when returning READSOCK(0)
  
  This patch fixes and issue introduced in commit 7d7df831981fee, if the
  tunnel state was TUNNEL_CONNECT, waitconnect_getsock() would return a
  bitmask indicating a readable socket but never stored the socket in the
  return array.

Daniel Stenberg (11 Nov 2013)
- bump: next release will be 7.34.0
  
  Due to all the news and changes.

Steve Holme (10 Nov 2013)
- [Björn Stenberg brought this change]

  connect: Close temporary sockets in conn_free()
  
  The temporary sockets used for Happy Eyeballs were not closed properly,
  if curl exited prematurely, which this patch fixes.

- tests: Corrected titles of POP3 and SMTP OAuth 2.0 tests

- test823: Fixed expected authentication text from commit e10a26a9d6d6de
  
  Fixed authentication text due to incorrect digest-uri property.

- test821: Fixed expected authentication text from commit 2d5455feac9984

- RELEASE-NOTES: Synced with 0f81fbe5da6643

- [Kim Vandry brought this change]

  ares: Fixed compilation under Visual Studio 2012

- tests: Added IMAP OAuth 2.0 authentication test

- tests: Added IMAP DIGEST-MD5 authentication test

- tests: Added IMAP NTLM authentication test

- tests: Added IMAP CRAM-MD5 authentication test

- test819: Fixed expected authentication text from commit 76f924131c9fd3

- ftpserver.pl: Reworked custom reply handling code
  
  1) To fix issues with IMAP custom replies
  2) So initial space is not required in IMAP display text
  3) To be more readable and understandable

- ftpserver.pl: Reworked unrecognised command responses
  
  As the IMAP regex could fail and $1 would not contain the command id
  updated the unrecognised command response to be more generic and
  realistic (like those used in the command handlers).
  
  Additionally updated the POP3, SMTP and FTP responses.

- ftpserver.pl: Fixed processing of IMAP authentication strings

Daniel Stenberg (9 Nov 2013)
- cmake: fix Windows build with IPv6 support
  
  Patch-by: "Z98"

Steve Holme (6 Nov 2013)
- Revert "ftpserver.pl: Corrected logic from commit 27b7b1062f9d97"
  
  This reverts commit 558034ab7002d1 as it appears to break the auto
  builds. More thought is required for this!

- ftpserver.pl: Corrected logic from commit 27b7b1062f9d97

- ftpserver.pl: Fixed IMAP cmdid being sent on custom responses

- tests: Added IMAP login authentication test

- tests: Added IMAP plain authentication test

- url.c: Very small amount of policing

- [Björn Stenberg brought this change]

  url.c: Remove superfluous for loop
  
  The reason for this loop's existence was removed in commit
  02fbc26d59c591.

Daniel Stenberg (5 Nov 2013)
- KNOWN_BUGS: STARTTRANSFER for POST requests
  
  added 85. Wrong STARTTRANSFER timer accounting for POST requests

- Curl_ssl_push_certinfo_len: don't %.*s non-zero-terminated string
  
  Our own printf() replacement clearly can't properly handle %.*s with a
  string that isn't zero terminated. Instead of fixing the printf code or
  even figuring out what the proper posix behavior is, I reverted this
  piece of the code back to the previous version where it does malloc +
  memcpy instead.
  
  Regression added in e839446c2a5, released in curl 7.32.0.
  
  Reported-by: Felix Yan
  Bug: http://curl.haxx.se/bug/view.cgi?id=1295

Steve Holme (5 Nov 2013)
- RELEASE-NOTES: Synced with 7fc3b2ce382ed6

- connect.h: Updated copyright year for last edit

Daniel Stenberg (4 Nov 2013)
- [Björn Stenberg brought this change]

  connect: Add connection delay to Happy Eyeballs.
  
  This patch adds a 200ms delay between the first and second address
  family socket connection attempts.
  
  It also iterates over IP addresses in the order returned by the
  system, meaning most dual-stack systems will try IPv6 first.
  
  Additionally, it refactors the connect code, removing most code that
  handled synchronous connects. Since all sockets are now non-blocking,
  the logic can be made simpler.

Steve Holme (4 Nov 2013)
- winbind: Fixed ntlm_auth expecting eol following commit e17c1b25bc33eb

- nss.c: Fixed compilation warnings (Take Two)
  
  nss.c:702: warning: pointer targets in passing argument 3 of
  'Curl_extract_certinfo' differ in signedness
  
  nss.c:702: warning: pointer targets in passing argument 4 of
  'Curl_extract_certinfo' differ in signedness
  
  Made sure the cast was correctly "unsigned char *" to "char *" and not
  "unsigned char *" to "unsigned char *".

- nss.c: Fixed compilation warnings
  
  nss.c:700: warning: pointer targets in passing argument 3 of
  'Curl_extract_certinfo' differ in signedness
  
  nss.c:700: warning: pointer targets in passing argument 4 of
  'Curl_extract_certinfo' differ in signedness

- tests: Added test for IMAP NOOP command

- tests: Added test for IMAP COPY command

- tests: Disable IMAP CLOSE and EXPUNGE command tests
  
  This is temporary until curl supports either multiple custom commands
  or post-quote commands in IMAP.

- tests: Added tests for IMAP CLOSE and EXPUNGE commands

- connect.c: Code policing on commit 5094bb53f4a027
  
  No need for a rhs condition on a bitwise compare.

- nss.c: Fixed compilation warnings
  
  warning: implicit declaration of function 'Curl_extract_certinfo'

- x509asn1.c: Fixed compilation warnings
  
  warning: declaration of 'chsize' shadows a global declaration

- DOCS: Expanded --request description to include POP3 and IMAP details

- tool_help: Updated --list-only description to include POP3

- DOCS: Updated --list-only description to include POP3
  
  Additionally corrected typos in --oauth2-bearer protocol list.

- base64: Fixed compilation warnings when using Curl_base64_decode()
  
  curl_sasl.c:294: warning: dereferencing type-punned pointer will break
  strict-aliasing rules
  
  getpart.c:201: warning: dereferencing type-punned pointer will break
  strict-aliasing rules

- connect: Fixed "Whut?" no server connection failures
  
  Introduced in commit 7d7df831981fee curl would loop displaying "Whut?"
  if it was trying to connect to an address and port that didn't have
  anything listening on it.

- http: Post base64 decoding tidy up
  
  Renamed copy_header_value() to Curl_copy_header_value() as this
  function is now non static.
  
  Simplified proxy flag in Curl_http_input_auth() when calling
  sub-functions.
  
  Removed unnecessary white space removal when using negotiate as it had
  been missed in commit cdccb422671aeb.

Daniel Stenberg (3 Nov 2013)
- glob_range: pass the closing bracket for a-z ranges
  
  Regression since commit 5ca96cb844102 (release in 7.33.0)
  
  Reported-by: Marcin Gryszkalis

Steve Holme (2 Nov 2013)
- getpart: Fixed base64 encoded parts following commit e17c1b25bc33eb

- http: Added proxy tunnel authentication message header value extraction
  
  ...following recent changes to Curl_base64_decode() rather than trying
  to parse a header line for the authentication mechanisms which is CRLF
  terminated and inline zero terminate it.

- http: Added authentication message header value extraction
  
  ...following recent changes to Curl_base64_decode() rather than trying
  to parse a header line for the authentication mechanisms which is CRLF
  terminated and inline zero terminate it.

Daniel Stenberg (30 Oct 2013)
- curl_multi_wait: accept 0 from multi_timeout() as valid timeout
  
  The code rejected 0 as a valid timeout while in fact the function could
  indeed legitimately return that and it should be respected.
  
  Reported-by: Bjorn Stenberg

Steve Holme (30 Oct 2013)
- email: Corrected a couple of typos from commit aa0eaef4838ccd

- TODO: Removed the 'Graceful base64 decoding failure' sections
  
  Updated following the recent changes to support graceful failures
  during the authentication phrase.

- email: Post graceful SASL authentication cancellation tidy up

- [Kamil Dudka brought this change]

  tests: use proper padding in NTLM responses

Patrick Monnerat (30 Oct 2013)
- NSS: support for CERTINFO feature

Daniel Stenberg (30 Oct 2013)
- base64: removed trailing white space
  
  and updated copyright year

Steve Holme (30 Oct 2013)
- base64: Added basic validation to base64 input string when decoding
  
  A base64 string should be a multiple of 4 characters in length, not
  contain any more than 2 padding characters and only contain padding
  characters at the end of string. For example: Y3VybA==
  
  Strings such as the following are considered invalid:
  
  Y=   - Invalid length
  Y==  - Invalid length
  Y=== - More than two padding characters
  Y=x= - Padding character contained within string

Daniel Stenberg (29 Oct 2013)
- RELEASE-NOTES: synced with 255826c40f9316

- [Björn Stenberg brought this change]

  bugfix: Don't block waiting for socket1 connect.
  
  This patch fixes a bug in Happy Eyeballs where curl would wait for a
  connect response from socket1 before checking socket2.
  
  Also, it updates error messages for failed connections, showing the ip
  addresses that failed rather than just the host name repeatedly.
  
  Bug: http://curl.haxx.se/mail/lib-2013-10/0236.html
  Reported-by: Paul Marks

Steve Holme (28 Oct 2013)
- sasl: Updated create_digest_md5_message() to use a dynamic buffer

Daniel Stenberg (28 Oct 2013)
- SECURITY: "curl security for developers"
  
  Describes our security process from a project and curl developer's
  perspective.

Patrick Monnerat (28 Oct 2013)
- OS400: coding style standards

Steve Holme (27 Oct 2013)
- email: Added support for cancelling NTLM authentication

- sasl: Removed unused variables from commit b87ba2c94217c0

- email: Added support for cancelling DIGEST-MD5 authentication

- email: Corrected a couple of typos from 1e39b95682781f

Daniel Stenberg (27 Oct 2013)
- [Gisle Vanem brought this change]

  docs/examples/httpput.c: fix build for MSVC
  
  "Dan Fandrich" <dan@coneharvesters.com> wrote:
  
  >> But I'm not sure <unistd.h> is needed at all.
  >
  > It's needed for close(2). But the only reason that's needed is because fstat
  > is used instead of stat(2); if you fix that, then you could remove that
  > include altogether.
  
  Okay. I've tested the following with MSVC and MingW. htttput.c now
  simply uses stat():

Steve Holme (27 Oct 2013)
- email: Added support for canceling CRAM-MD5 authentication

Daniel Stenberg (27 Oct 2013)
- [Björn Stenberg brought this change]

  Typo fix in trynextip().

- TODO: remove "Happy Eyeball dual stack connect"
  
  ... as it was just merged in commit 7d7df

- [Björn Stenberg brought this change]

  Add "Happy Eyeballs" for IPv4/IPv6.
  
  This patch invokes two socket connect()s nearly simultaneously, and
  the socket that is first connected "wins" and is subsequently used for
  the connection. The other is terminated.
  
  There is a very slight IPv4 preference, in that if both sockets connect
  simultaneously IPv4 is checked first and thus will win.

Steve Holme (27 Oct 2013)
- email: Added initial support for cancelling authentication
  
  Should a client application fail to decode an authentication message
  received from a server, or not support any of the parameters given by
  the server in the message, then the authentication phrase should be
  cancelled gracefully by the client rather than simply terminating the
  connection.
  
  The authentication phrase should be cancelled by simply sending a '*'
  to the server, in response to erroneous data being received, as per
  RFC-3501, RFC-4954 and RFC-5034.
  
  This patch adds the necessary state machine constants and appropriate
  response handlers in order to add this functionality for the CRAM-MD5,
  DIGEST-MD5 and NTLM authentication mechanisms.

- email: Moved authentication message parsing into a separate function
  
  ...in preparation for upcoming modifications.

- ftp: Fixed compiler warning
  
  warning: 'result' may be used uninitialized in this function

Daniel Stenberg (26 Oct 2013)
- FTP: make the data connection work when going through proxy
  
  This is a regression since the switch to always-multi internally
  c43127414d89c.
  
  Test 1316 was modified since we now clearly call the Curl_client_write()
  function when doing the LIST transfer part and then the
  handler->protocol says FTP and ftpc.transfertype is 'A' which implies
  text converting even though that the response is initially a HTTP
  CONNECT response in this case.

Steve Holme (26 Oct 2013)
- tool_help: Added login options to --user description

- email: Added references to SASL LOGIN authentication draft proposal

- tests: Tidy up of SMTP and POP3 tests
  
  Corrected line endings, RFC references and standardised on user names
  and passwords used in the tests.

- tool_help: Added clarity to the --oauth2-bearer option
  
  ...as XOAUTH2 is the extended (or non-standard) SASL identifier and
  OAuth 2 is the protocol name (and version).

- smtp: Fixed response code parsing for bad AUTH continuation responses
  
  This workaround had been previously been implemented for IMAP and POP3
  but not SMTP. Some of the recent test case additions implemented this
  behaviour to emulate a bad server and the SMTP code didn't cope with it.

- gskit.c: Code policing following commit 2cc9246477285d
  
  Corrected 80 character line length error and pointer declarations (some
  of which were previously incorrect)

- test907: Corrected DIGEST-MD5 response given in commit 820ed48a0088cd
  
  As the URI, which is contained within the DIGEST-MD5 response, is
  constructed from the service and realm, the encoded message differs
  from that generated under POP3.

- RELEASE-NOTES: Synced with d24b7953c2132a

- tests: Added SMTP OAUTH2 authentication with initial response test

- tests: Added SMTP NTLM authentication with initial response test

- tests: Added SMTP OAUTH2 authentication test

- tests: Added SMTP DIGEST-MD5 authentication test

- tests: Regrouped SMTP authentication tests

Patrick Monnerat (25 Oct 2013)
- OS400: sync RPG wrapper, zlib support, fix header file names, ...
  IFS compilation support, SSL GSKit backend by default, TLSv1.[12] support in
    GSKit for OS400 >= V7R1, no more tabs in make scripts.

Steve Holme (24 Oct 2013)
- sasl: Fixed memory leak in OAUTH2 message creation

- ftpserver.pl: Added support for empty pop3 authentication data

Daniel Stenberg (23 Oct 2013)
- CURLOPT_RESOLVE: mention they don't time-out
  
  Clarify in the documentation that DNS entries added with CURLOPT_RESOLVE
  won't time-out.
  
  Bug: http://curl.haxx.se/mail/lib-2013-10/0062.html
  Reported-by: Romulo Ceccon

Steve Holme (23 Oct 2013)
- tests: Added POP3 OAUTH2 authentication test

- tests: Added empty response support to custom replies
  
  ...and fixed up test869 as DIGEST-MD transcript is as follows:
  
  S: Challenge
  C: Authentication String
  S: Continue Response
  C: Empty String

Daniel Stenberg (23 Oct 2013)
- sasl: fix compiler warning
  
  error: unused variable 'table16'

Steve Holme (23 Oct 2013)
- tests: Added POP3 DIGEST-MD5 authentication test

Daniel Stenberg (22 Oct 2013)
- configure: check for long long when building with cyassl
  
  cyassl/ctaocrypt/types.h needs SIZEOF_LONG_LONG
  
  Reported-by: Chris Conlon

- test1240: verify 867b52a7ac52 (glob ranges with text to the right)

- glob: fix regression from commit 5ca96cb844
  
  Plain strings after glob ranges/lists weren't treated correctly but
  caused broken URLs to get used.
  
  Reported-by: Javier Barroso

- [Rémy Léone brought this change]

  Adding a .travis.yml file to use the travis-ci.org
  
  From wikipedia:
  
  Travis CI is a hosted, distributed continuous integration service used
  to build and test projects hosted at GitHub.
  
  Travis CI is configured by adding a file named .travis.yml, which is a
  YAML format text file, to the root directory of the GitHub repository.
  
  Travis CI automatically detects when a commit has been made and pushed
  to a GitHub repository that is using Travis CI, and each time this
  happens, it will try to build the project and run tests. This includes
  commits to all branches, not just to the master branch. When that
  process has completed, it will notify a developer in the way it has been
  configured to do so — for example, by sending an email containing the
  test results (showing success or failure), or by posting a message on an
  IRC channel. It can be configured to run the tests on a range of
  different machines, with different software installed (such as older
  versions of a programming language, to test for compatibility).

Kamil Dudka (21 Oct 2013)
- ssh: initialize per-handle data in ssh_connect()
  
  ... if not already initialized.  This fixes a regression introduced by
  commit 4ad8e142da463ab208d5b5565e53291c8e5ef038, which caused test619
  to intermittently fail on certain machines (namely Fedora build hosts).

Daniel Stenberg (20 Oct 2013)
- [Gisle Vanem brought this change]

  curl.1: add missing exit-code
  
  I noted a missing text for exit-code 89 in docs/curl.1

- cmake: unbreak for non-Windows platforms
  
  Patch-by: Oliver Kuckertz
  Bug: http://curl.haxx.se/bug/view.cgi?id=1292

Steve Holme (20 Oct 2013)
- ftpserver.pl: Fixed syntax error from commit 5b31b38c27bb7a

- test866: Fixed user response from commit 7f7fbe7fbdb449

- ftpserver.pl: Fixed processing of POP3 authentication strings
  
  ...and corrected response when check fails from 500 to -ERR.

- tests: Added POP3 NTLM authentication test

- tests: Added POP3 CRAM-MD5 authentication test

- tests: Added POP3 login authentication test

- tests: Added POP3 plain authentication test
=======
Version 7.53.1 (24 Feb 2017)

Daniel Stenberg (24 Feb 2017)
- release: 7.53.1

- Revert "tests: use consistent environment variables for setting charset"
  
  This reverts commit ecd1d020abdae3c3ce3643ddab3106501e62e7c0.
  
  That commit caused test failures on my Debian Linux machine for all
  changed test cases. We need to reconsider how that should get done.

Dan Fandrich (23 Feb 2017)
- tests: use consistent environment variables for setting charset
  
  Character set in POSIX is set by the locale defined (in decreasing order
  of precedence) by the LC_ALL, LC_CTYPE and LANG environment variables (I
  believe CHARSET is only historic). LC_ALL is cleared to ensure that
  LC_CTYPE takes effect, but LC_ALL is not used to set the locale to
  ensure that other parts of the locale aren't overriden, if set.  Since
  there doesn't seem to be a cross-platform way of specifying a UTF-8
  locale, and not all systems may support UTF-8, a <precheck> is used
  (where relevant) to skip the test if UTF-8 isn't in use.  Test 1035 was
  also converted to UTF-8 for consistency, as the actual character set
  used there is irrelevant to the test.

Jay Satiro (23 Feb 2017)
- url: Default the CA proxy bundle location to CURL_CA_BUNDLE
  
  If the compile-time CURL_CA_BUNDLE location is defined use it as the
  default value for the proxy CA bundle location, which is the same as
  what we already do for the regular CA bundle location.
  
  Ref: https://github.com/curl/curl/pull/1257

Daniel Stenberg (23 Feb 2017)
- [Sergii Pylypenko brought this change]

  rand: added missing #ifdef HAVE_FCNTL_H around fcntl.h header
  
  Closes #1285

- TODO: "OPTIONS *"
  
  Closes #1280

- RELEASE-NOTES: synced with 443e5b03a7d441

- THANKS-filter: shachaf

- [İsmail Dönmez brought this change]

  tests: Set CHARSET & LANG to UTF-8 in 1035, 2046 and 2047
  
  Closes #1283
  Fixes #1277

- bump: 7.53.1 coming up
  
  synced with df665f4df0f7a352

- formdata: check for EOF when reading from stdin
  
  Reported-by: shachaf@users.noreply.github.com
  
  Fixes #1281

Jay Satiro (22 Feb 2017)
- docs: gitignore curl.1
  
  curl.1 is generated by the cmdline-opts script since 4c49b83.

Daniel Stenberg (22 Feb 2017)
- TODO: HTTP Digest using SHA-256

- TODO: brotli is deployed widely now

Jay Satiro (21 Feb 2017)
- [Viktor Szakats brought this change]

  urldata: include curl_sspi.h when Windows SSPI is enabled
  
  f77dabe broke builds in Windows using Windows SSPI but not Windows SSL.
  
  Bug: https://github.com/curl/curl/issues/1276
  Reported-by: jveazey@users.noreply.github.com

- url: Improve CURLOPT_PROXY_CAPATH error handling
  
  - Change CURLOPT_PROXY_CAPATH to return CURLE_NOT_BUILT_IN if the option
    is not supported, which is the same as what we already do for
    CURLOPT_CAPATH.
  
  - Change the curl tool to handle CURLOPT_PROXY_CAPATH error
    CURLE_NOT_BUILT_IN as a warning instead of as an error, which is the
    same as what we already do for CURLOPT_CAPATH.
  
  - Fix CAPATH docs to show that CURLE_NOT_BUILT_IN is returned when the
    respective CAPATH option is not supported by the SSL library.
  
  Ref: https://github.com/curl/curl/pull/1257

- cyassl: fix typo

Version 7.53.0 (22 Feb 2017)

Daniel Stenberg (22 Feb 2017)
- release: 7.53.0

- cookie: fix declaration of 'dup' shadows a global declaration

- TLS: make SSL_VERIFYSTATUS work again
  
  The CURLOPT_SSL_VERIFYSTATUS option was not properly handled by libcurl
  and thus even if the status couldn't be verified, the connection would
  be allowed and the user would not be told about the failed verification.
  
  Regression since cb4e2be7c6d42ca
  
  CVE-2017-2629
  Bug: https://curl.haxx.se/docs/adv_20170222.html
  
  Reported-by: Marcus Hoffmann

Jay Satiro (21 Feb 2017)
- digest_sspi: Handle 'stale=TRUE' directive in HTTP digest
  
  - If the server has provided another challenge use it as the replacement
    input token if stale=TRUE. Otherwise previous credentials have failed
    so return CURLE_LOGIN_DENIED.
  
  Prior to this change the stale directive was ignored and if another
  challenge was received it would cause error CURLE_BAD_CONTENT_ENCODING.
  
  Ref: https://tools.ietf.org/html/rfc2617#page-10
  
  Bug: https://github.com/curl/curl/issues/928
  Reported-by: tarek112@users.noreply.github.com

Daniel Stenberg (20 Feb 2017)
- smb: use getpid replacement for windows UWP builds
  
  Source: https://github.com/Microsoft/vcpkg/blob/7676b8780db1e1e591c4fc7eba4f96f73c428cb4/ports/curl/0002_fix_uwp.patch

- TODO: CURLOPT_RESOLVE for any port number
  
  Closes #1264

- RELEASE-NOTES: synced with af30f1152d43dcdb

- [Jean Gressmann brought this change]

  sftp: improved checks for create dir failures
  
  Since negative values are errors and not only -1. This makes SFTP upload
  with --create-dirs work (again).
  
  Closes #1269

Jay Satiro (20 Feb 2017)
- [Max Khon brought this change]

  digest_sspi: Fix nonce-count generation in HTTP digest
  
  - on the first invocation: keep security context returned by
    InitializeSecurityContext()
  
  - on subsequent invocations: use MakeSignature() instead of
    InitializeSecurityContext() to generate HTTP digest response
  
  Bug: https://github.com/curl/curl/issues/870
  Reported-by: Andreas Roth
  
  Closes https://github.com/curl/curl/pull/1251

- examples/multi-uv: checksrc compliance

Michael Kaufmann (19 Feb 2017)
- string formatting: fix 4 printf-style format strings

Dan Fandrich (18 Feb 2017)
- tests: removed the obsolete name parameter

Michael Kaufmann (18 Feb 2017)
- speed caps: update the timeouts if the speed is too low/high
  
  Follow-up to 4b86113
  
  Fixes https://github.com/curl/curl/issues/793
  Fixes https://github.com/curl/curl/issues/942

- docs: fix timeout handling in multi-uv example

- proxy: fix hostname resolution and IDN conversion
  
  Properly resolve, convert and log the proxy host names.
  Support the "--connect-to" feature for SOCKS proxies and for passive FTP
  data transfers.
  
  Follow-up to cb4e2be
  
  Reported-by: Jay Satiro
  Fixes https://github.com/curl/curl/issues/1248

Jay Satiro (17 Feb 2017)
- [Isaac Boukris brought this change]

  http: fix missing 'Content-Length: 0' while negotiating auth
  
  - While negotiating auth during PUT/POST if a user-specified
    Content-Length header is set send 'Content-Length: 0'.
  
  This is what we do already in HTTPREQ_POST_FORM and what we did in the
  HTTPREQ_POST case (regression since afd288b).
  
  Prior to this change no Content-Length header would be sent in such a
  case.
  
  Bug: https://curl.haxx.se/mail/lib-2017-02/0006.html
  Reported-by: Dominik Hölzl
  
  Closes https://github.com/curl/curl/pull/1242

Daniel Stenberg (16 Feb 2017)
- [Simon Warta brought this change]

  winbuild: add note on auto-detection of MACHINE in Makefile.vc
  
  Closes #1265

- RELEASE-PROCEDURE: update the upcoming release calendar

- TODO: consider file name from the redirected URL with -O ?
  
  It isn't easily solved, but with some thinking someone could probably
  come up with a working approach?
  
  Closes #1241

Jay Satiro (15 Feb 2017)
- tool_urlglob: Allow a glob range with the same start and stop
  
  For example allow ranges like [1-1] and [a-a] etc.
  
  Regression since 5ca96cb.
  
  Bug: https://github.com/curl/curl/issues/1238
  Reported-by: R. Dennis Steed

Daniel Stenberg (15 Feb 2017)
- axtls: adapt to API changes
  
  Builds with axTLS 2.1.2. This then also breaks compatibility with axTLS
  < 2.1.0 (the older API)
  
  ... and fix the session_id mixup brought in 04b4ee549
  
  Fixes #1220

- RELEASE-NOTES: synced with 690935390c29c

- [Nick Draffen brought this change]

  curl: fix typo in time condition warning message
  
  The warning message had a typo. The argument long form is --time-cond
  not --timecond
  
  Closes #1263

- smb: code indent

Jay Satiro (14 Feb 2017)
- configure: Allow disabling pthreads, fall back on Win32 threads
  
  When the threaded resolver option is specified for configure the default
  thread library is pthreads. This change makes it possible to
  --disable-pthreads and then configure can fall back on Win32 threads for
  native Windows builds.
  
  Closes https://github.com/curl/curl/pull/1260

Daniel Stenberg (13 Feb 2017)
- http2: fix memory-leak when denying push streams
  
  Reported-by: zelinchen@users.noreply.github.com
  Fixes #1229

Jay Satiro (11 Feb 2017)
- tool_operate: Show HTTPS-Proxy options on CURLE_SSL_CACERT
  
  When CURLE_SSL_CACERT occurs the tool shows a lengthy error message to
  the user explaining possible solutions such as --cacert and --insecure.
  
  This change appends to that message similar options --proxy-cacert and
  --proxy-insecure when there's a specified HTTPS proxy.
  
  Closes https://github.com/curl/curl/issues/1258

Daniel Stenberg (10 Feb 2017)
- cmdline-opts/page-footer: ftp.sunet.se is no longer an FTP mirror

- URL: only accept ";options" in SMTP/POP3/IMAP URL schemes
  
  Fixes #1252

Jay Satiro (9 Feb 2017)
- cmdline-opts/socks*: Mention --preproxy in --socks* opts
  
  - Document in --socks* opts they're still mutually exclusive of --proxy.
  
  Partial revert of 423a93c; I had misinterpreted the SOCKS proxy +
  HTTP/HTTPS proxy combination.
  
  - Document in --socks* opts that --preproxy can be used to specify a
    SOCKS proxy at the same time --proxy is used with an HTTP/HTTPS proxy.

Daniel Stenberg (9 Feb 2017)
- CURLOPT_SSL_VERIFYPEER.3: also the https proxy version

Kamil Dudka (9 Feb 2017)
- nss: make FTPS work with --proxytunnel
  
  If the NSS code was in the middle of a non-blocking handshake and it
  was asked to finish the handshake in blocking mode, it unexpectedly
  continued in the non-blocking mode, which caused a FTPS connection
  over CONNECT to fail with "(81) Socket not ready for send/recv".
  
  Bug: https://bugzilla.redhat.com/1420327

Daniel Stenberg (9 Feb 2017)
- examples/multithread.c: link to our multi-thread docs
  
  ... instead of the OpenSSL mutex page.

- http_proxy: avoid freeing static memory
  
  Follow up to 7fe81ec298e0: make sure 'host' is either NULL or malloced.

- [Cameron MacMinn brought this change]

  http_proxy: Fix tiny memory leak upon edge case connecting to proxy
  
  Fixes #1255

Michael Kaufmann (8 Feb 2017)
- polarssl, mbedtls: Fix detection of pending data
  
  Reported-by: Dan Fandrich
  Bug: https://curl.haxx.se/mail/lib-2017-02/0032.html

Dan Fandrich (7 Feb 2017)
- test1139: Added the --manual keyword since the manual is required

Daniel Stenberg (7 Feb 2017)
- RELEASE-NOTES: synced with 102454459dd688c

- THANKS-filter: polish some recent contributors

- http2: reset push header counter fixes crash
  
  When removing an easy handler from a multi before it completed its
  transfer, and it had pushed streams, it would segfault due to the pushed
  counted not being cleared.
  
  Fixed-by: zelinchen@users.noreply.github.com
  Fixes #1249

- [Markus Westerlind brought this change]

  transfer: only retry nobody-requests for HTTP
  
  Using sftp to delete a file with CURLOPT_NOBODY set with a reused
  connection would fail as curl expected to get some data. Thus it would
  retry the command again which fails as the file has already been
  deleted.
  
  Fixes #1243

Jay Satiro (7 Feb 2017)
- [Daniel Gustafsson brought this change]

  telnet: Fix typos
  
  Ref: https://github.com/curl/curl/pull/1245

- [Daniel Gustafsson brought this change]

  test552: Fix typos
  
  Closes https://github.com/curl/curl/pull/1245

- [Daniel Gustafsson brought this change]

  darwinssl: Avoid parsing certificates when not in verbose mode
  
  The information extracted from the server certificates in step 3 is only
  used when in verbose mode, and there is no error handling or validation
  performed as that has already been done. Only run the certificate
  information extraction when in verbose mode and libcurl was built with
  verbose strings.
  
  Closes https://github.com/curl/curl/pull/1246

- [JDepooter brought this change]

  schannel: Remove incorrect SNI disabled message
  
  - Remove the SNI disabled when host verification disabled message
    since that is incorrect.
  
  - Show a message for legacy versions of Windows <= XP that connections
    may fail since those versions of WinSSL lack SNI, algorithms, etc.
  
  Bug: https://github.com/curl/curl/pull/1240

Daniel Stenberg (7 Feb 2017)
- CHANGES: spell fix, use correct path to script

- CHANGES.0: removed
  
  This is the previously manually edited changelog, not touched since Aug
  2015. Still present in git for those who wants it.

Dan Fandrich (6 Feb 2017)
- cmdline-opts: Fixed build and test in out of source tree builds

Viktor Szakats (6 Feb 2017)
- use *.sourceforge.io and misc URL updates
  
  Ref: https://sourceforge.net/blog/introducing-https-for-project-websites/
  Closes: https://github.com/curl/curl/pull/1247

Jay Satiro (6 Feb 2017)
- docs: Add more HTTPS proxy documentation
  
  - Document HTTPS proxy type.
  
  - Document --write-out %{proxy_ssl_verify_result}.
  
  - Document SOCKS proxy + HTTP/HTTPS proxy combination.
  
  HTTPS proxy support was added in 7.52.0 for OpenSSL, GnuTLS and NSS.
  
  Ref: https://github.com/curl/curl/commit/cb4e2be

- OS400: Fix symbols
  
  - s/CURLOPT_SOCKS_PROXY/CURLOPT_PRE_PROXY
    Follow-up to 7907a2b and 845522c.
  
  - Fix incorrect id for CURLOPT_PROXY_PINNEDPUBLICKEY.
  
  - Add id for CURLOPT_ABSTRACT_UNIX_SOCKET.
  
  Bug: https://github.com/curl/curl/issues/1237
  Reported-by: jonrumsey@users.noreply.github.com

- [Sean Burford brought this change]

  cmake: Support curl --xattr when built with cmake
  
  - Test for and set HAVE_FSETXATTR when support for extended file
    attributes is present.
  
  Closes https://github.com/curl/curl/pull/1176

- [Adam Langley brought this change]

  openssl: Don't use certificate after transferring ownership
  
  SSL_CTX_add_extra_chain_cert takes ownership of the given certificate
  while, despite the similar name, SSL_CTX_add_client_CA does not. Thus
  it's best to call SSL_CTX_add_client_CA before
  SSL_CTX_add_extra_chain_cert, while the code still has ownership of the
  argument.
  
  Closes https://github.com/curl/curl/pull/1236

Daniel Stenberg (29 Jan 2017)
- [Antoine Aubert brought this change]

  mbedtls: implement CTR-DRBG and HAVEGE random generators
  
  closes #1227

- docs: we no longer ship HTML versions of man pages
  
  ... refer to the web site for the web versions.

- [railsnewbie257 brought this change]

  docs: proofread README.netware README.win32
  
  Closes #1231

- RELEASE-NOTES; synced with ab08d82648

Michael Kaufmann (28 Jan 2017)
- mbedtls: disable TLS session tickets
  
  SSL session reuse with TLS session tickets is not supported yet.
  Use SSL session IDs instead.
  
  See https://github.com/curl/curl/issues/1109

- gnutls: disable TLS session tickets
  
  SSL session reuse with TLS session tickets is not supported yet.
  Use SSL session IDs instead.
  
  Fixes https://github.com/curl/curl/issues/1109

- polarssl: fix hangs
  
  This bugfix is similar to commit c111178bd4.

Daniel Stenberg (27 Jan 2017)
- cookies: do not assume a valid domain has a dot
  
  This repairs cookies for localhost.
  
  Non-PSL builds will now only accept "localhost" without dots, while PSL
  builds okeys everything not listed as PSL.
  
  Added test 1258 to verify.
  
  This was a regression brought in a76825a5efa6b4

- TODO: remove "Support TLS v1.3"
  
  Support is trickling in already.

- [railsnewbie257 brought this change]

  INTERNALS.md: language improvements
  
  Closes #1226

- telnet: fix windows compiler warnings
  
  Thumbs-up-by: Jay Satiro
  
  Closes #1225

- VC: remove the makefile.vc6 build infra
  
  The winbuild/ build files is now the single MSVC makefile build choice.
  
  Closes #1215

- [Jay Satiro brought this change]

  cmdline-opts/gen.pl: Open input files in CRLF mode
  
  On Windows it's possible to have input files with CRLF line endings and
  a perl that defaults to LF line endings (eg msysgit). Currently that
  results in generator output of mixed line endings of CR, LF and CRLF.
  
  This change fixes that issue in the most succinct way by opening the
  files in :crlf text mode even when the perl being used does not default
  to that mode. (On operating systems that don't have a separate text mode
  it's essentially a no-op.) The output continues to be in the perl's
  native line ending.

- docs/curl.1: generate from the cmdline-opts script

- vtls: source indentation fix

- contri*.sh: cut off parentheses from names too

- RELEASE-NOTES: synced with 01ab7c30bba6f

- vtls: fix PolarSSL non-blocking handling
  
  A regression brought in cb4e2be
  
  Reported-by: Michael Kaufmann
  Bug: https://github.com/curl/curl/issues/1174#issuecomment-274018791

- [Antoine Aubert brought this change]

  vtls: fix mbedtls multi non blocking handshake.
  
  When using multi, mbedtls handshake is in non blocking mode.  vtls must
  set wait for read/write flags for the socket.
  
  Closes #1223

- [Richy Kim brought this change]

  CURLOPT_BUFFERSIZE: support enlarging receive buffer
  
  Replace use of fixed macro BUFSIZE to define the size of the receive
  buffer.  Reappropriate CURLOPT_BUFFERSIZE to include enlarging receive
  buffer size.  Upon setting, resize buffer if larger than the current
  default size up to a MAX_BUFSIZE (512KB). This can benefit protocols
  like SFTP.
  
  Closes #1222

- sws: use SOCKERRNO, not errno
  
  Reported-by: Gisle Vanem

Michael Kaufmann (19 Jan 2017)
- KNOWN_BUGS: HTTP/2 server push enabled when no pushes can be accepted
  
  This has been implemented with commit 9ad034e.

Viktor Szakats (19 Jan 2017)
- *.rc: escape non-ASCII/non-UTF-8 character for clarity
  
  Closes https://github.com/curl/curl/pull/1217

Kamil Dudka (19 Jan 2017)
- docs: non-blocking SSL handshake is now supported with NSS
  
  Implemented since curl-7_36_0-130-g8868a22
  
  Reported-by: Fahim Chandurwala

Michael Kaufmann (18 Jan 2017)
- CURLOPT_CONNECT_TO: Fix compile warnings
  
  Fix compile warnings that appeared only when curl has been configured
  with '--disable-verbose'.

Daniel Stenberg (18 Jan 2017)
- usercertinmem.c: improve the short description

- parseurl: move back buffer to function scope
  
  Regression since 1d4202ad, which moved the buffer into a more narrow
  scope, but the data in that buffer was used outside of that more narrow
  scope.
  
  Reported-by: Dan Fandrich
  Bug: https://curl.haxx.se/mail/lib-2017-01/0093.html

Jay Satiro (17 Jan 2017)
- openssl: Fix random generation
  
  - Fix logic error in Curl_ossl_random.
  
  Broken a few days ago in 807698d.

Daniel Stenberg (17 Jan 2017)
- TODO: share OpenSSL contexts
  
  By supporting this, subsequent connects would load a lot less data from
  disk.
  
  Closes #1110

- bump: next release will be 7.53.0

Kamil Dudka (15 Jan 2017)
- nss: use the correct lock in nss_find_slot_by_name()

Alessandro Ghedini (15 Jan 2017)
- http2: disable server push if not requested
  
  Ref: https://github.com/curl/curl/pull/1160

Daniel Stenberg (14 Jan 2017)
- [railsnewbie257 brought this change]

  docs: improved language in README.md HISTORY.md CONTRIBUTE.md
  
  Closes #1211

Alessandro Ghedini (14 Jan 2017)
- http: print correct HTTP string in verbose output when using HTTP/2
  
  Before:
  ```
   % src/curl https://sigsegv.ninja/ -v --http2
  ...
  > GET / HTTP/1.1
  > Host: sigsegv.ninja
  > User-Agent: curl/7.52.2-DEV
  > Accept: */*
  >
  ...
  ```
  
  After:
  ```
   % src/curl https://sigsegv.ninja/ -v --http2
  ...
  > GET / HTTP/2
  > Host: sigsegv.ninja
  > User-Agent: curl/7.52.2-DEV
  > Accept: */*
  >
  ```

Daniel Stenberg (14 Jan 2017)
- TODO: send only part of --data
  
  Closes #1200

- TODO: implemened "--fail-fast to exit on first transfer fail"
  
  Even though it is called --fail-early

- TODO: Chunked transfer multipart formpost
  
  Closes #1139

- TODO: Improve formpost API, not just add an easy argument

- addrinfo: fix compiler warning on offsetof() use
  
  curl_addrinfo.c:519:20: error: conversion to ‘curl_socklen_t {aka
  unsigned int}’ from ‘long unsigned int’ may alter its value
  [-Werror=conversion]
  
  Follow-up to 1d786faee1046f

- THANKS-filter: Jiri Malak

- RELEASE-NOTES: synced with a7c73ae309c

Peter Wu (13 Jan 2017)
- [Isaac Boukris brought this change]

  unix_socket: add support for abstract unix domain socket
  
  In addition to unix domain sockets, Linux also supports an
  abstract namespace which is independent of the filesystem.
  
  In order to support it, add new CURLOPT_ABSTRACT_UNIX_SOCKET
  option which uses the same storage as CURLOPT_UNIX_SOCKET_PATH
  internally, along with a flag to specify abstract socket.
  
  On non-supporting platforms, the abstract address will be
  interpreted as an empty string and fail gracefully.
  
  Also add new --abstract-unix-socket tool parameter.
  
  Signed-off-by: Isaac Boukris <iboukris@gmail.com>
  Reported-by: Chungtsun Li (typeless)
  Reviewed-by: Daniel Stenberg
  Reviewed-by: Peter Wu
  Closes #1197
  Fixes #1061

Daniel Stenberg (13 Jan 2017)
- write-out.d: 'time_total' is not always shown with ms precision
  
  We have higher resolution since 7.52.0

- next.d: --trace and --trace-ascii are also global

- [Isaac Boukris brought this change]

  curl: reset the easy handle at --next
  
  So that only "global" options (verbose mostly) survive into the next
  transfer, and the others have to be set again unless default is fine.

- [Frank Gevaerts brought this change]

  docs: Add note about libcurl copying strings to CURLOPT_* manpages
  
  Closes #1169

- [Frank Gevaerts brought this change]

  CURLOPT_PREQUOTE.3: takes a struct curl_slist*, not a char*

- IDN: Use TR46 non-transitional
  
  Assisted-by: Tim Rühsen

- IDN: revert use of the transitional option
  
  It made the german ß get converted to ss, IDNA2003 style, and we can't
  have that for the .de TLD - a primary reason for our switch to IDNA2008.
  
  Test 165 verifies.

- [Tim Rühsen brought this change]

  IDN: Fix compile time detection of linidn2 TR46
  
  Follow-up to f30cbcac1
  
  Closes #1207

- [ERAMOTO Masaya brought this change]

  url: --noproxy option overrides NO_PROXY environment variable
  
  Under condition using http_proxy env var, noproxy list was the
  combination of --noproxy option and NO_PROXY env var previously. Since
  this commit, --noproxy option overrides NO_PROXY environment variable
  even if use http_proxy env var.
  
  Closes #1140

- [ERAMOTO Masaya brought this change]

  url: Refactor detect_proxy()
  
  If defined CURL_DISABLE_HTTP, detect_proxy() returned NULL. If not
  defined CURL_DISABLE_HTTP, detect_proxy() checked noproxy list.
  
  Thus refactor to set proxy to NULL instead of calling detect_proxy() if
  define CURL_DISABLE_HTTP, and refactor to call detect_proxy() if not
  define CURL_DISABLE_HTTP and the host is not in the noproxy list.

- [ERAMOTO Masaya brought this change]

  url: Fix NO_PROXY env var to work properly with --proxy option.
  
  The combination of --noproxy option and http_proxy env var works well
  both for proxied hosts and non-proxied hosts.
  
  However, when combining NO_PROXY env var with --proxy option,
  non-proxied hosts are not reachable while proxied host is OK.
  
  This patch allows us to access non-proxied hosts even if using NO_PROXY
  env var with --proxy option.

- [Tim Rühsen brought this change]

  IDN: Use TR46 'transitional' for toASCII translations
  
  References: http://unicode.org/faq/idn.html
              http://unicode.org/reports/tr46
  
  Closes #1206

- [railsnewbie257 brought this change]

  docs: FAQ MAIL-ETIQUETTE language fixes
  
  Closes #1194

- [Marcus Hoffmann brought this change]

  gnutls: check for alpn and ocsp in configure
  
  Check for presence of gnutls_alpn_* and gnutls_ocsp_* functions during
  configure instead of relying on the version number.  GnuTLS has options
  to turn these features off and we ca just work with with such builds
  like we work with older versions.
  
  Signed-off-by: Marcus Hoffmann <m.hoffmann@cartelsol.com>
  
  Closes #1204

Jay Satiro (12 Jan 2017)
- url: Fix parsing for when 'file' is the default protocol
  
  Follow-up to 3463408.
  
  Prior to 3463408 file:// hostnames were silently stripped.
  
  Prior to this commit it did not work when a schemeless url was used with
  file as the default protocol.
  
  Ref: https://curl.haxx.se/mail/lib-2016-11/0081.html
  Closes https://github.com/curl/curl/pull/1124
  
  Also fix for drive letters:
  
  - Support --proto-default file c:/foo/bar.txt
  
  - Support file://c:/foo/bar.txt
  
  - Fail when a file:// drive letter is detected and not MSDOS/Windows.
  
  Bug: https://github.com/curl/curl/issues/1187
  Reported-by: Anatol Belski
  Assisted-by: Anatol Belski

Daniel Stenberg (12 Jan 2017)
- rand: make it work without TLS backing
  
  Regression introduced in commit f682156a4fc6c4
  
  Reported-by: John Kohl
  Bug: https://curl.haxx.se/mail/lib-2017-01/0055.html

Jay Satiro (12 Jan 2017)
- STARTTLS: Don't print response character in denied messages
  
  Both IMAP and POP3 response characters are used internally, but when
  appended to the STARTTLS denial message likely could confuse the user.
  
  Closes https://github.com/curl/curl/pull/1203

- smtp: Fix STARTTLS denied error message
  
  - Format the numeric denial code as an integer instead of a character.

Daniel Stenberg (11 Jan 2017)
- http2_send: avoid unsigned integer wrap around
  
  ... when checking for a too large request.

Jay Satiro (9 Jan 2017)
- [Jiri Malak brought this change]

  cmake: Fix passing _WINSOCKAPI_ macro to compiler
  
  Define _WINSOCKAPI_ blank rather than to 1 in order to match the value
  used by Microsoft's winsock header files.
  
  Closes https://github.com/curl/curl/pull/1195

Daniel Stenberg (9 Jan 2017)
- sws: retry send() on EWOULDBLOCK
  
  Fixes spurious test 1060 and 1061 failures on OpenBSD, Solaris and more.
  
  Bug: https://curl.haxx.se/mail/lib-2017-01/0009.html
  Reported-by: Christian Weisgerber

- RELEASE-NOTES: synced with a41e8592d6b3e58

- examples: make the C++ examples follow our code style too
  
  At least mostly, not counting // comments.

- [Aulddays brought this change]

  asiohiper: improved socket handling
  
  libcurl requires CURLMOPT_SOCKETFUNCTION to KEEP watching socket events
  and notify back. Modify event_cb() to continue watching events when
  fired.
  
  Fixes #1191
  Closes #1192
  Fixed-by: Mingliang Zhu

- [Jiří Malák brought this change]

  lib506: fix build for Open Watcom
  
  Rename symbol lock to locks to not clash with OW CRTL function name.
  
  Closes #1196

- ROADMAP: 2017 cleanup
  
  Removed items already fixed, clarified a few others.

- COPYING: update the generic copyright year range

- docs/silent: mention --show-error in --silent description
  
  Reported in #1190
  Reported-by: Dan Jacobson

- docs/page-header: mention how to disable the progress meter
  
  curl.1 is regenerated
  
  Fixes #1190

Dan Fandrich (7 Jan 2017)
- wolfssl: display negotiated SSL version and cipher

- wolfssl: support setting cipher list

Patrick Monnerat (6 Jan 2017)
- CIPHERS.md: document GSKit ciphers

Jay Satiro (5 Jan 2017)
- [peterpih brought this change]

  TheArtOfHttpScripting: grammar

Nick Zitzmann (3 Jan 2017)
- darwinssl: --insecure overrides --cacert if both settings are in use
  
  Fixes #1184

Jay Satiro (2 Jan 2017)
- docs/libcurl: TCP_KEEPALIVE start and interval default to 60
  
  Since the TCP keep-alive options were added in 705f0f7 the start and
  interval default values have been 60, but that wasn't documented.
  
  Bug: https://curl.haxx.se/mail/lib-2017-01/0000.html
  Reported-by: Praveen Pvs

Daniel Stenberg (29 Dec 2016)
- curl.h: CURLE_FUNCTION_NOT_FOUND is no longer in use
  
  This error code was once introduced when some library was dynamically
  loaded and a funciton within said library couldn't be found.

- content_encoding: change return code on a failure
  
  Failure to decompress is now a write error instead of the weird
  "function not found".

- page-footer: error 36 is protocol agnostic!

Jay Satiro (28 Dec 2016)
- tool_operate: Fix --remote-time incorrect times on Windows
  
  - Use Windows API SetFileTime to set the file time instead of utime.
  
  Avoid utime on Windows if possible because it may apply a daylight
  saving time offset to our UTC file time.
  
  Bug: https://curl.haxx.se/mail/archive-2016-11/0033.html
  Reported-by: Tim
  
  Closes https://github.com/curl/curl/pull/1121

Daniel Stenberg (29 Dec 2016)
- [Max Khon brought this change]

  digest_sspi: copy terminating NUL as well
  
  Curl_auth_decode_digest_http_message(): copy terminating NUL as later
  Curl_override_sspi_http_realm() expects a NUL-terminated string.
  
  Fixes #1180

- curl_formadd.3: CURLFORM_CONTENTSLENGTH not needed when chunked
  
  Mentioned in #1013

- [Kyselgov E.N brought this change]

  cmake: use crypt32.lib when building with OpenSSL on windows
  
  Reviewed-by: Peter Wu
  Closes #1149
  Fixes #1147

- [Chris Araman brought this change]

  darwinssl: fix CFArrayRef leak
  
  Reviewed-by: Nick Zitzmann
  Closes #1173

- [Chris Araman brought this change]

  darwinssl: fix iOS build
  
  Reviewed-by: Nick Zitzmann
  Fixes #1172

- curl: remove superfluous include file
  
  The <netinet/tcp.h> is a leftover from the past when TCP socket options
  were set in this file. This include causes build issues on AIX 4.3.
  
  Reported-by: Kim Minjoong
  
  Closes #1178

- RELEASE-NOTES: synced with a7b38c9dc98481e

- vtls: s/SSLEAY/OPENSSL
  
  Fixed an old leftover use of the USE_SSLEAY define which would make a
  socket get removed from the applications sockets to monitor when the
  multi_socket API was used, leading to timeouts.
  
  Bug: #1174

- docs/ciphers: link to our own new page about ciphers
  
  ... as the former ones always go stale!

- cmdline-opts/page-footer: add three more exit codes
  
  ... and regenerated curl.1

- formdata: use NULL, not 0, when returning pointers

- ftp: failure to resolve proxy should return that error code

- configure: accept --with-libidn2 instead
  
  ... which the help text already implied since we switched to libidn2
  from libidn in commit 9c91ec778104ae3b back in October 2016.
  
  Reported-by: Christian Weisgerber
  Bug: https://curl.haxx.se/mail/lib-2016-12/0110.html

- test1282: verify the ftp-gss check

- ftp-gss: check for init before use
  
  To avoid dereferencing a NULL pointer.
  
  Reported-by: Daniel Romero

Jay Satiro (24 Dec 2016)
- build-wolfssl: Sync config with wolfSSL 3.10
  
  wolfSSL configure script relevant changes from 3.9 to 3.10:
  
  - DES3 no longer enabled by default
  - Shamir no longer enabled by default
  - Extended master secret enabled by default
  - RSA and ECC timing protections enabled by default
  
  For backwards compatibility I enabled DES3 and ECC shamir config options
  (ie no change from 3.9), and the other changes are included.

- cyassl: use time_t instead of long for timeout

Daniel Stenberg (23 Dec 2016)
- bump: toward next release

- http: remove "Curl_http_done: called premature" message
  
  ... it only confuses people.

- openssl-random: check return code when asking for random
  
  and fail appropriately if it returns error

- gnutls-random: check return code for failed random

Version 7.52.1 (22 Dec 2016)

Daniel Stenberg (22 Dec 2016)
- RELEASE-NOTES: curl 7.52.1

- lib557.c: use a shorter MAXIMIZE representation
  
  Since several compilers had problems with the previous one
  
  Reported-by: Ray Satiro
  Bug: https://curl.haxx.se/mail/lib-2016-12/0098.html

- runtests: remove the valgrind parser
  
  Old legacy parsing that 1) hid problems for us and 2) probably isn't
  needed anymore.

- [Kamil Dudka brought this change]

  randit: store the value in the buffer

- tests/Makefile: run checksrc on debug builds
  
  ... just like we already do in src/ and lib/

- lib557: move the "enable LONGLINE" to allow more long lines
  
  This file is riddled with them...

- bump: toward next release

Marcel Raad (21 Dec 2016)
- lib: fix MSVC compiler warnings
  
  Visual C++ complained:
  warning C4267: '=': conversion from 'size_t' to 'long', possible loss of data
  warning C4701: potentially uninitialized local variable 'path' used

Version 7.52.0 (20 Dec 2016)

Daniel Stenberg (20 Dec 2016)
- THANKS: 13 new contributors from 7.52.0

- RELEASE-NOTES: 7.52.0

- ssh: inhibit coverity warning with (void)
  
  CID 1397391 (#1 of 1): Unchecked return value (CHECKED_RETURN)

- Curl_recv_has_postponed_data: silence compiler warnings
  
  Follow-up to d00f2a8f2

Jay Satiro (19 Dec 2016)
- tests: checksrc compliance

- http_proxy: Fix proxy CONNECT hang on pending data
  
  - Check for pending data before waiting on the socket.
  
  Bug: https://github.com/curl/curl/issues/1156
  Reported-by: Adam Langley

Daniel Stenberg (19 Dec 2016)
- cmdline-opts/tlsv1.d: rephrased

- [Dan McNulty brought this change]

  schannel: fix wildcard cert name validation on Win CE
  
  Fixes a few issues in manual wildcard cert name validation in
  schannel support code for Win32 CE:
  - when comparing the wildcard name to the hostname, the wildcard
    character was removed from the cert name and the hostname
    was checked to see if it ended with the modified cert name.
    This allowed cert names like *.com to match the connection
    hostname. This violates recommendations from RFC 6125.
  - when the wildcard name in the certificate is longer than the
    connection hostname, a buffer overread of the connection
    hostname buffer would occur during the comparison of the
    certificate name and the connection hostname.

- printf: fix floating point buffer overflow issues
  
  ... and add a bunch of floating point printf tests

- config-amigaos.h: (embarrassed) made the line shorter

- config-amigaos.h: fix bug report email reference

- RELEASE-NOTES: synced with 4517158abfeba

- CIPHERS.md: backtick the names to show underscores fine

- form-string.d: fix format mistake
  
  and regenerated curl.1
  
  Reported-by: Gisle Vanem

Michael Kaufmann (18 Dec 2016)
- openssl: simplify expression in Curl_ossl_version

- curl_easy_recv: Improve documentation and example program
  
  Follow-up to 82245ea: Fix the example program sendrecv.c (handle
  CURLE_AGAIN, handle incomplete send). Improve the documentation
  for curl_easy_recv() and curl_easy_send().
  
  Reviewed-by: Frank Meier
  Assisted-by: Jay Satiro
  
  See https://github.com/curl/curl/pull/1134

- [Isaac Boukris brought this change]

  Curl_getconnectinfo: avoid checking if the connection is closed
  
  It doesn't benefit us much as the connection could get closed at
  any time, and also by checking we lose the ability to determine
  if the socket was closed by reading zero bytes.
  
  Reported-by: Michael Kaufmann
  
  Closes https://github.com/curl/curl/pull/1134

Daniel Stenberg (18 Dec 2016)
- CIPHERS.md: attempt to document TLS cipher names
  
  As the official docs seems really hard to keep track of and link to over
  time

- curl.1: generated after 6cce4dbf830

- cmdline-opts/post30X.d: fix the RFC references

- curl.1: regenerated
  
  Fixed trailing whitespace and numerous formatting glitches

- cmdline-opts: formatting fixes

- curl_easy_setopt.3: removed CURLOPT_SOCKS_PROXYTYPE

- tool_getparam.c: make comments use the up-to-date option names

- manpage-scan.pl: allow deprecated options to get removed from curl.1
  
  --krb4, --ftp-ssl and --ftp-ssl-reqd no longer need to be documented in the
  man page

- cmdline-opts/gen.pl: trim off trailing spaces

- cmdline-opts/proxy-tlsuser.d: remove trailing .d

- curl_easy_setopt.3: CURLOPT_PRE_PROXY instead of CURLOPT_SOCKS_PROXY

- symbols: removed two, added one

- cmdline-opts: include the man page split up files in the dist

- curl.1: generated with gen.pl
  
  This is the first time we replace the manually edited curt.1 with the
  generated one created by gen.pl and the individual option documentation
  pages.
  
  Do not edit this file, edit the individual pages and regenerate this
  output.
  
  This file will be generated by the build system soon and then removed
  from git.

- cmdline-opts: added some missing info

- CURLINFO_SSL_VERIFYRESULT.3: language

- HTTPS-PROXY docs: update/polish

- cmdline-opts/page-header: mention it is generated
  
  ... to avoid people from trying to edit the pending curl.1 version that
  gets generated by gen.pl

- preproxy: renamed what was added as SOCKS_PROXY
  
  CURLOPT_SOCKS_PROXY -> CURLOPT_PRE_PROXY
  
  Added the corresponding --preroxy command line option. Sets a SOCKS
  proxy to connect to _before_ connecting to a HTTP(S) proxy.

- curl: normal socks proxies still use CURLOPT_PROXY
  
  ... the newly introduced CURLOPT_SOCKS_PROXY is special and should be
  asked for specially. (Needs new code.)
  
  Unified proxy type to a single variable in the config struct.

- CURLOPT_SOCKS_PROXYTYPE: removed
  
  This was added as part of the SOCKS+HTTPS proxy merge but there's no
  need to support this as we prefer to have the protocol specified as a
  prefix instead.

- curl_multi_socket.3: fix typo

- checksrc: warn for assignments within if() expressions
  
  ... they're already frowned upon in our source code style guide, this
  now enforces the rule harder.

- checksrc: stricter no-space-before-paren enforcement
  
  In order to make the code style more uniform everywhere

- ISSUE_TEMPLATE: try mentioning known bugs/todo in new issue template

- RELEASE-NOTES: synced with 71a55534fa6

- [Adam Langley brought this change]

  openssl: don't use OpenSSL's ERR_PACK.
  
  ERR_PACK is an internal detail of OpenSSL. Also, when using it, a
  function name must be specified which is overly specific: the test will
  break whenever OpenSSL internally change things so that a different
  function creates the error.
  
  Closes #1157

Dan Fandrich (5 Dec 2016)
- test2032: Mark test as flaky

Jay Satiro (3 Dec 2016)
- [Jeremy Pearson brought this change]

  libcurl-multi.3: typo
  
  Closes https://github.com/curl/curl/pull/1153

Dan Fandrich (2 Dec 2016)
- test1281: added http as a required feature

Daniel Stenberg (2 Dec 2016)
- curl: support zero-length argument strings in config files
  
  ... like 'user-agent = ""'
  
  Adjusted test 71 to verify.

- http_proxy: simplify CONNECT response reading
  
  Since it now reads responses one byte a time, a loop could be removed
  and it is no longer limited to get the whole response within 16K, it is
  now instead only limited to 16K maximum header line lengths.

- tests: fix CONNECT test cases to be more strict
  
  ... as they broke with the cleaned up CONNECT handling

- CONNECT: read responses one byte at a time
  
  ... so that it doesn't read data that is actually coming from the
  remote. 2xx responses have no body from the proxy, that data is from the
  peer.
  
  Fixes #1132

- CONNECT: reject TE or CL in 2xx responses
  
  A server MUST NOT send any Transfer-Encoding or Content-Length header
  fields in a 2xx (Successful) response to CONNECT. (RFC 7231 section
  4.3.6)
  
  Also fixes the three test cases that did this.

- URL parser: reject non-numerical port numbers
  
  Test 1281 added to verify

Dan Fandrich (30 Nov 2016)
- runtests: made Servers: output be more consistent by removing OFF

- cyassl: fixed typo introduced in 4f8b1774

Michael Kaufmann (30 Nov 2016)
- CURLOPT_CONNECT_TO: Skip non-matching "connect-to" entries properly
  
  If a port number in a "connect-to" entry does not match, skip this
  entry instead of connecting to port 0.
  
  If a port number in a "connect-to" entry matches, use this entry
  and look no further.
  
  Reported-by: Jay Satiro
  Assisted-by: Jay Satiro, Daniel Stenberg
  
  Closes #1148

Daniel Stenberg (29 Nov 2016)
- BUGS: describe bug handling process

- RELEASE-NOTES: synced with 19613fb3

Jay Satiro (28 Nov 2016)
- http2: check nghttp2_session_set_local_window_size exists
  
  The function only exists since nghttp2 1.12.0.
  
  Bug: https://github.com/curl/curl/commit/a4d8888#commitcomment-19985676
  Reported-by: Michael Kaufmann

Daniel Stenberg (28 Nov 2016)
- [Anders Bakken brought this change]

  http2: Fix crashes when parent stream gets aborted
  
  Closes #1125

- cmdline-docs: more options converted and fixed
  
  Now all options are in the new system.

- gen: include footer in mainpage output

Jay Satiro (28 Nov 2016)
- lib1536: checksrc compliance

Daniel Stenberg (28 Nov 2016)
- cmdline-opts: more command line options documented
  
  Moved over to the new format

- curl: remove --proxy-ssl* options
  
  There's mostly likely no need to allow setting SSLv2/3 version for HTTPS
  proxy. Those protocols are insecure by design and deprecated.

- CURLOPT_PROXY_*.3: polished some proxy option man pages

Patrick Monnerat (26 Nov 2016)
- os400: support CURLOPT_PROXY_PINNEDPUBLICKEY
  
  Also define it in ILE/RPG binding.

Daniel Stenberg (26 Nov 2016)
- [Okhin Vasilij brought this change]

  curl_version_info: add CURL_VERSION_HTTPS_PROXY
  
  Closes #1142

- [Frank Gevaerts brought this change]

  tests: Add some testcases for recent new features.
  
  Add missing tests for CURLINFO_SCHEME, CURLINFO_PROTOCOL, %{scheme},
  and %{http_version}
  
  closes #1143

- [Frank Gevaerts brought this change]

  curl_easy_reset: clear info for CULRINFO_PROTOCOL and CURLINFO_SCHEME

- CURLOPT_PROXY_CAINFO.3: clarify proxy use

- CURLOPT_PROXY_CRLFILE.3: clarify https proxy and availability

- curl_easy_setopt.3: add CURLOPT_PROXY_PINNEDPUBLICKEY
  
  Follow-up to 4f8b17743d7c55a

- docs: include all opts man pages in dist
  
  Sorted the lists too.
  
  ... and include the new ones in the PDF and HTML generation targets

- [Thomas Glanzmann brought this change]

  HTTPS Proxy: Implement CURLOPT_PROXY_PINNEDPUBLICKEY

- [Thomas Glanzmann brought this change]

  url: proxy: Use 443 as default port for https proxies

- TODO: removed "HTTPS proxy"

- [Jan-E brought this change]

  winbuild: add config option ENABLE_NGHTTP2
  
  Closes #1141

Jay Satiro (24 Nov 2016)
- tool_urlglob: Improve sanity check in glob_range
  
  Prior to this change we depended on errno if strtol could not perform a
  conversion. POSIX says EINVAL *may* be set. Some implementations like
  Microsoft's will not set it if there's no conversion.
  
  Ref: https://github.com/curl/curl/commit/ee4f7660#commitcomment-19658189

- tool_help: Change description for --retry-connrefused
  
  Ref: https://github.com/curl/curl/pull/1064#issuecomment-260052409

Patrick Monnerat (25 Nov 2016)
- os400: sync ILE/RPG binding

Jay Satiro (24 Nov 2016)
- test1135: Fix curl_easy_duphandle prototype for code style
  
  Follow-up to dbadaeb which changed the style.

- x509asn1: Restore the parameter check in Curl_getASN1Element
  
  - Restore the removed parts of the parameter check.
  
  Follow-up to 945f60e which altered the parameter check.

Daniel Stenberg (25 Nov 2016)
- RELEASE-NOTES: update option counters

- [Frank Gevaerts brought this change]

  add CURLINFO_SCHEME, CURLINFO_PROTOCOL, and %{scheme}
  
  Adds access to the effectively used protocol/scheme to both libcurl and
  curl, both in string and numeric (CURLPROTO_*) form.
  
  Note that the string form will be uppercase, as it is just the internal
  string.
  
  As these strings are declared internally as const, and all other strings
  returned by curl_easy_getinfo() are de-facto const as well, string
  handling in getinfo.c got const-ified.
  
  Closes #1137

- RELEASE-NOTES: synced with 63198a4750aeb

- curl.1: the new --proxy options ship in 7.52.0

- checksrc: move open braces to comply with function declaration style

- checksrc: detect wrongly placed open braces in func declarations

- checksrc: white space edits to comply to stricter checksrc

- checksrc: verify ASTERISKNOSPACE
  
  Detects (char*) and 'char*foo' uses.

- checksrc: code style: use 'char *name' style

- checksrc: add ASTERISKSPACE
  
  Verifies a 'char *name' style, with no space after the asterisk.

- openssl: remove dead code
  
  Coverity CID 1394666

- [Okhin Vasilij brought this change]

  HTTPS-proxy: fixed mbedtls and polishing

- darwinssl: adopted to the HTTPS proxy changes
  
  It builds and runs all test cases. No adaptations for actual HTTPS proxy
  support has been made.

- gtls: fix indent to silence compiler warning
  
  vtls/gtls.c: In function ‘Curl_gtls_data_pending’:
  vtls/gtls.c:1429:3: error: this ‘if’ clause does not guard... [-Werror=misleading-indentation]
     if(conn->proxy_ssl[connindex].session &&
        ^~
        vtls/gtls.c:1433:5: note: ...this statement, but the latter is misleadingly indented as if it is guarded by the ‘if’
             return res;

- [Thomas Glanzmann brought this change]

  mbedtls: Fix compile errors

- [Alex Rousskov brought this change]

  proxy: Support HTTPS proxy and SOCKS+HTTP(s)
  
  * HTTPS proxies:
  
  An HTTPS proxy receives all transactions over an SSL/TLS connection.
  Once a secure connection with the proxy is established, the user agent
  uses the proxy as usual, including sending CONNECT requests to instruct
  the proxy to establish a [usually secure] TCP tunnel with an origin
  server. HTTPS proxies protect nearly all aspects of user-proxy
  communications as opposed to HTTP proxies that receive all requests
  (including CONNECT requests) in vulnerable clear text.
  
  With HTTPS proxies, it is possible to have two concurrent _nested_
  SSL/TLS sessions: the "outer" one between the user agent and the proxy
  and the "inner" one between the user agent and the origin server
  (through the proxy). This change adds supports for such nested sessions
  as well.
  
  A secure connection with a proxy requires its own set of the usual SSL
  options (their actual descriptions differ and need polishing, see TODO):
  
    --proxy-cacert FILE        CA certificate to verify peer against
    --proxy-capath DIR         CA directory to verify peer against
    --proxy-cert CERT[:PASSWD] Client certificate file and password
    --proxy-cert-type TYPE     Certificate file type (DER/PEM/ENG)
    --proxy-ciphers LIST       SSL ciphers to use
    --proxy-crlfile FILE       Get a CRL list in PEM format from the file
    --proxy-insecure           Allow connections to proxies with bad certs
    --proxy-key KEY            Private key file name
    --proxy-key-type TYPE      Private key file type (DER/PEM/ENG)
    --proxy-pass PASS          Pass phrase for the private key
    --proxy-ssl-allow-beast    Allow security flaw to improve interop
    --proxy-sslv2              Use SSLv2
    --proxy-sslv3              Use SSLv3
    --proxy-tlsv1              Use TLSv1
    --proxy-tlsuser USER       TLS username
    --proxy-tlspassword STRING TLS password
    --proxy-tlsauthtype STRING TLS authentication type (default SRP)
  
  All --proxy-foo options are independent from their --foo counterparts,
  except --proxy-crlfile which defaults to --crlfile and --proxy-capath
  which defaults to --capath.
  
  Curl now also supports %{proxy_ssl_verify_result} --write-out variable,
  similar to the existing %{ssl_verify_result} variable.
  
  Supported backends: OpenSSL, GnuTLS, and NSS.
  
  * A SOCKS proxy + HTTP/HTTPS proxy combination:
  
  If both --socks* and --proxy options are given, Curl first connects to
  the SOCKS proxy and then connects (through SOCKS) to the HTTP or HTTPS
  proxy.
  
  TODO: Update documentation for the new APIs and --proxy-* options.
  Look for "Added in 7.XXX" marks.

Patrick Monnerat (24 Nov 2016)
- Declare endian read functions argument as a const pointer.
  This is done for all functions of the form Curl_read[136][624]_[lb]e.

- Limit ASN.1 structure sizes to 256K. Prevent some allocation size overflows.
  See CRL-01-006.

Jay Satiro (22 Nov 2016)
- url: Fix conn reuse for local ports and interfaces
  
  - Fix connection reuse for when the proposed new conn 'needle' has a
  specified local port but does not have a specified device interface.
  
  Bug: https://curl.haxx.se/mail/lib-2016-11/0137.html
  Reported-by: bjt3[at]hotmail.com

Daniel Stenberg (21 Nov 2016)
- rand: pass in number of randoms as an unsigned argument

Jay Satiro (20 Nov 2016)
- rand: Fix potentially uninitialized result warning

Marcel Raad (19 Nov 2016)
- vtls: fix build warnings
  
  Fix warnings about conversions from long to time_t in openssl.c and
  schannel.c.
  
  Follow-up to de4de4e3c7c

Daniel Stenberg (18 Nov 2016)
- [Marcel Raad brought this change]

  lib: fix compiler warnings after de4de4e3c7c
  
  Visual C++ now complains about implicitly casting time_t (64-bit) to
  long (32-bit). Fix this by changing some variables from long to time_t,
  or explicitly casting to long where the public interface would be
  affected.
  
  Closes #1131

Peter Wu (17 Nov 2016)
- [Isaac Boukris brought this change]

  Don't mix unix domain sockets with regular ones
  
  When reusing a connection, make sure the unix domain
  socket option matches.

Jay Satiro (17 Nov 2016)
- tests: Fix HTTP2-Settings header for huge window size
  
  Follow-up to a4d8888. Changing the window size in that commit resulted
  in a different HTTP2-Settings upgrade header, causing test 1800 to fail.

- http2: Use huge HTTP/2 windows
  
  - Improve performance by using a huge HTTP/2 window size.
  
  Bug: https://github.com/curl/curl/issues/1102
  Reported-by: afrind@users.noreply.github.com
  Assisted-by: Tatsuhiro Tsujikawa

Daniel Stenberg (16 Nov 2016)
- cmdline-docs: more conversion

- gen: support 'protos'
  
  and warn on unrecognized lines

- gen: support 'single' to make an individual page man page

- cmdline-docs: more options converted over

- gen: support 'redirect'
  
  ... and warn for too long --help lines

- cmdline/gen: replace options in texts better

Jay Satiro (16 Nov 2016)
- http2: Fix address sanitizer memcpy warning
  
  - In Curl_http2_switched don't call memcpy when src is NULL.
  
  Curl_http2_switched can be called like:
  
  Curl_http2_switched(conn, NULL, 0);
  
  .. and prior to this change memcpy was then called like:
  
  memcpy(dest, NULL, 0)
  
  .. causing address sanitizer to warn:
  
  http2.c:2057:3: runtime error: null pointer passed as argument 2, which
  is declared to never be null

- tool_help: Clarify --dump-header only writes received headers

- curl.1: Clarify --dump-header only writes received headers

Daniel Stenberg (15 Nov 2016)
- [Alex Chan brought this change]

  docs: Spelling fixes

Kamil Dudka (15 Nov 2016)
- docs: the next release will be 7.52.0

Daniel Stenberg (15 Nov 2016)
- cmdline-opts: support generating the --help output

- [David Schweikert brought this change]

  darwinssl: fix SSL client certificate not found on MacOS Sierra
  
  Reviewed-by: Nick Zitzmann
  
  Closes #1105

- curl: add --fail-early to help output
  
  Fixes test 1139 failures
  
  Follow-up to f82bbe01c8835

- glob: fix [a-c] globbing regression
  
  Brought in ee4f76606cf
  
  Added test case 1280 to verify
  
  Reported-by: Dave Reisner
  
  Bug: https://github.com/curl/curl/commit/ee4f76606cfa4ee068bf28edd37c8dae7e8db317#commitcomment-19823146

- curl: add --fail-early
  
  Exit with an error on the first transfer error instead of continuing to
  do the rest of the URLs.
  
  Discussion: https://curl.haxx.se/mail/archive-2016-11/0038.html

- Curl_rand: fixed and moved to rand.c
  
  Now Curl_rand() is made to fail if it cannot get the necessary random
  level.
  
  Changed the proto of Curl_rand() slightly to provide a number of ints at
  once.
  
  Moved out from vtls, since it isn't a TLS function and vtls provides
  Curl_ssl_random() for this to use.
  
  Discussion: https://curl.haxx.se/mail/lib-2016-11/0119.html

- cmdline-opts: first test version of a new man page generator kit
  
  See MANPAGE.md for the description of how this works. Each command line
  option is now described in a separate .d file.

- time_t fix: follow-up to de4de4e3c7c
  
  Blah, I accidentally wrote size_t instead of time_t for two variables.
  
  Reported-by: Dave Reisner

- timeval: prefer time_t to hold seconds instead of long
  
  ... as long is still 32bit on modern 64bit windows machines, while
  time_t is generally 64bit.

Dan Fandrich (12 Nov 2016)
- tests: fixed variable might be clobbered warning
  
  This stops the compiler from potentially making invalid assumptions
  about the immutability of sdp and sap across the longjmp boundary.

Daniel Stenberg (12 Nov 2016)
- RELEASE-NOTES: synced with 346340808c

- URL-parser: for file://[host]/ URLs, the [host] must be localhost
  
  Previously, the [host] part was just ignored which made libcurl accept
  strange URLs misleading users. like "file://etc/passwd" which might've
  looked like it refers to "/etc/passwd" but is just "/passwd" since the
  "etc" is an ignored host name.
  
  Reported-by: Mike Crowe
  Assisted-by: Kamil Dudka

- test558: adapt to 0649433da

- openssl: make sure to fail in the unlikely event that PRNG seeding fails

- openssl: avoid unnecessary seeding if already done
  
  1.1.0+ does more of this by itself so we can avoid extra processing this
  way.

- openssl: RAND_status always exists in OpenSSL >= 0.9.7
  
  and remove RAND_screen from configure since nothing is using that
  function

- Curl_pgrsUpdate: use dedicated function for time passed

- realloc: use Curl_saferealloc to avoid common mistakes
  
  Discussed: https://curl.haxx.se/mail/lib-2016-11/0087.html

- [Daniel Hwang brought this change]

  curl: Add --retry-connrefused
  
  to consider ECONNREFUSED as a transient error.
  
  Closes #1064

- openssl: raise the max_version to 1.3 if asked for
  
  Now I've managed to negotiate TLS 1.3 with https://enabled.tls13.com/ when
  using boringssl.

Jay Satiro (9 Nov 2016)
- vtls: Fail on unrecognized param for CURLOPT_SSLVERSION
  
  - Fix GnuTLS code for CURL_SSLVERSION_TLSv1_2 that broke when the
  TLS 1.3 support was added in 6ad3add.
  
  - Homogenize across code for all backends the error message when TLS 1.3
  is not available to "<backend>: TLS 1.3 is not yet supported".
  
  - Return an error when a user-specified ssl version is unrecognized.
  
  ---
  
  Prior to this change our code for some of the backends used the
  'default' label in the switch statement (ie ver unrecognized) for
  ssl.version and treated it the same as CURL_SSLVERSION_DEFAULT.
  
  Bug: https://curl.haxx.se/mail/lib-2016-11/0048.html
  Reported-by: Kamil Dudka

Daniel Stenberg (9 Nov 2016)
- [Isaac Boukris brought this change]

  SPNEGO: Fix memory leak when authentication fails
  
  If SPNEGO fails, cleanup the negotiate handle right away.
  
  Fixes #1115
  
  Signed-off-by: Isaac Boukris <iboukris@gmail.com>
  Reported-by: ashman-p

- CODE_STYLE.md: link to INTERNALS.md correctly

- bump: next version will be 7.52.0

- RELEASE-NOTES: synced with dfcdaaba371e9a3

- examples/fileupload.c: fclose the file as well

- printf: fix ".*f" handling
  
  It would always use precision 1 instead of reading it from the argument
  list as intended.
  
  Reported-by: Ray Satiro
  
  Bug: #1113

- curl_formadd.3: *_FILECONTENT and *_FILE need the file to be kept
  
  Reported-by: Frank Gevaerts

Kamil Dudka (7 Nov 2016)
- nss: silence warning 'SSL_NEXT_PROTO_EARLY_VALUE not handled in switch'
  
  ... with nss-3.26.0 and newer
  
  Reported-by: Daniel Stenberg

Daniel Stenberg (7 Nov 2016)
- openssl: initial TLS 1.3 adaptions
  
  BoringSSL supports TLSv1.3 already, but these changes don't seem to be anough
  to get it working.

- ssh: check md5 fingerprints case insensitively (regression)
  
  Revert the change from ce8d09483eea but use the new function
  
  Reported-by: Kamil Dudka
  Bug: https://github.com/curl/curl/commit/ce8d09483eea2fcb1b50e323e1a8ed1f3613b2e3#commitcomment-19666146

Kamil Dudka (7 Nov 2016)
- curl: introduce the --tlsv1.3 option to force TLS 1.3
  
  Fully implemented with the NSS backend only for now.
  
  Reviewed-by: Ray Satiro

- vtls: support TLS 1.3 via CURL_SSLVERSION_TLSv1_3
  
  Fully implemented with the NSS backend only for now.
  
  Reviewed-by: Ray Satiro

- nss: map CURL_SSLVERSION_DEFAULT to NSS default
  
  ... but make sure we use at least TLSv1.0 according to libcurl API
  
  Reported-by: Cure53
  Reviewed-by: Ray Satiro

Daniel Stenberg (7 Nov 2016)
- s/cURL/curl
  
  We're mostly saying just "curl" in lower case these days so here's a big
  cleanup to adapt to this reality. A few instances are left as the
  project could still formally be considered called cURL.

Jay Satiro (7 Nov 2016)
- [Tatsuhiro Tsujikawa brought this change]

  http2: Don't send header fields prohibited by HTTP/2 spec
  
  Previously, we just ignored "Connection" header field.  But HTTP/2
  specification actually prohibits few more header fields.  This commit
  ignores all of them so that we don't send these bad header fields.
  
  Bug: https://curl.haxx.se/mail/archive-2016-10/0033.html
  Reported-by: Ricki Hirner
  
  Closes https://github.com/curl/curl/pull/1092

Daniel Stenberg (7 Nov 2016)
- curl.1: explain the SMTP data expected for -T
  
  Fixes #1107
  
  Reported-by: Adam Piggott

Peter Wu (6 Nov 2016)
- cmake: disable poll for macOS
  
  Mirrors the autotools behavior introduced with curl-7_50_3-83-ga34c7ce.
  
  Fixes #1089

Jay Satiro (5 Nov 2016)
- easy: Initialize info variables on easy init and duphandle
  
  - Call Curl_initinfo on init and duphandle.
  
  Prior to this change the statistical and informational variables were
  simply zeroed by calloc on easy init and duphandle. While zero is the
  correct default value for almost all info variables, there is one where
  it isn't (filetime initializes to -1).
  
  Bug: https://github.com/curl/curl/issues/1103
  Reported-by: Neal Poole

Daniel Stenberg (5 Nov 2016)
- [Mauro Rappa brought this change]

  curl -w: added more decimal digits to timing counters
  
  Now showing microsecond resolution.
  
  Closes #1106

Jakub Zakrzewski (4 Nov 2016)
- dist: add CMakeLists.txt to the tarball

Daniel Stenberg (4 Nov 2016)
- mbedtls: fix build with mbedtls versions < 2.4.0
  
  Regression added in 62a8095e714
  
  Reported-by: Tony Kelman
  
  Discussed in #1087

- configure: verify that compiler groks -Werror=partial-availability
  
  Reported-by: bemoody
  
  Fixes #1104

- docs: shorten and simplify the top comment in multi-uv.c
  
  and change URL to use https

- [Andrei Sedoi brought this change]

  docs: handle CURL_POLL_INOUT in multi-uv example

- [Andrei Sedoi brought this change]

  docs: multi-uv: don't use CURLMsg after cleanup

- [Andrei Sedoi brought this change]

  docs: remove unused variables in multi-uv example

- bump: start working on 7.51.1

- winbuild: remove strcase.obj from curl build
  
  Reported-by: Bruce Stephens
  
  Fixes #1098

Dan Fandrich (2 Nov 2016)
- msvc: removed a straggling reference to strequal.c
  
  Follow-up to 502acba2

Version 7.51.0 (2 Nov 2016)

Daniel Stenberg (2 Nov 2016)
- THANKS: synced with 7.51.0

- RELEASE-NOTES: 7.51.0

- ftp_done: don't clobber the passed in error code
  
  Coverity CID 1374359 pointed out the unused result value.

- ftp: remove dead code in ftp_done
  
  Coverity CID 1374358

Jay Satiro (1 Nov 2016)
- generate.bat: Include include/curl in libcurl VS projects
  
  .. because including those headers helps Visual Studio's Intellisense.

- generate.bat: Remove strcase.[ch] from curl tool VS projects
  
  ..because they're no longer needed in the tool build. strcase is still
  built by the libcurl project and exports curl_str(n)equal which is used
  by the curl tool.
  
  Bug: https://github.com/curl/curl/commit/9363f1a#all_commit_comments

Daniel Stenberg (2 Nov 2016)
- metalink: simplify the hex parsing function
  
  ... and now it avoids using the libcurl toupper() function

Michael Kaufmann (1 Nov 2016)
- file: fix compiler warning
  
  follow-up to 46133aa5

Dan Fandrich (1 Nov 2016)
- strcase: fixed Metalink builds by redefining checkprefix()
  
  ...to use the public function curl_strnequal(). This isn't ideal because
  it adds extra overhead to any internal calls to checkprefix.
  
  follow-up to 95bd2b3e

Daniel Stenberg (1 Nov 2016)
- curl.1: typo

- curl.1: expand on how multiple uses of -o looks
  
  Suggested-by: Dan Jacobson
  Issue: https://github.com/curl/curl/issues/1097

- tests/util: get a private strncasecompare clone
  
  ... since the curlx_* code no longer provides one and we don't link
  libcurl to these test servers.

- strcase: make the tool use curl_str[n]equal instead
  
  As they are after all part of the public API. Saves space and reduces
  complexity. Remove the strcase defines from the curlx_ family.
  
  Suggested-by: Dan Fandrich
  Idea: https://curl.haxx.se/mail/lib-2016-10/0136.html

Kamil Dudka (31 Oct 2016)
- gskit, nss: do not include strequal.h
  
  follow-up to 811a693b80

Dan Fandrich (31 Oct 2016)
- strcasecompare: include curl.h in strcase.c
  
  This should fix the "warning: 'curl_strequal' redeclared without
  dllimport attribute: previous dllimport ignored" message and subsequent
  link error on Windows because of the missing CURL_EXTERN on the
  prototype.

Daniel Stenberg (31 Oct 2016)
- strcase: fix the remaining rawstr users

- msvc builds: s/rawstr/strcase
  
  Follow-up to 811a693b

Dan Fandrich (31 Oct 2016)
- strcasecompare: replaced remaining rawstr.h with strcase.h
  
  This is a followup to commit 811a693b

Marcel Raad (31 Oct 2016)
- digest_sspi: fix include
  
  Fix compile break from 811a693b80

Dan Fandrich (31 Oct 2016)
- libauthretry: use the external function curl_strequal
  
  The internal version strcasecompare isn't available outside libcurl

Daniel Stenberg (31 Oct 2016)
- RELEASE-NOTES: synced with d14538d2501ef0da

- configure: raise the default minimum version for macos to 10.8
  
  follow-up to 4f8d0b6f02aa7043. Since the darwinssl code breaks
  otherwise. If you build without darwinssl 10.5 works fine.

- unit1301: keep testing curl_strequal
  
  as that is still part of the API, fix from 8fe4bd084412f30

- ldap: fix include
  
  Fix bug from 811a693b80

- url: remove unconditional idn2.h include
  
  Mistake brought by 9c91ec778104a

- curl_strequal: part of public API/ABI, needs to be kept
  
  These two public functions have been mentioned as deprecated since a
  very long time but since they are still part of the API and ABI we need
  to keep them around.

- strcase: s/strequal/strcasecompare
  
  some more follow-ups to 811a693b80

- ldap: fix strcase use
  
  follow-up to 811a693b80

- test165: adapted to the libidn2 use and IDNA2008 fix

- cookie: replace use of fgets() with custom version
  
  ... that will ignore lines that are too long to fit in the buffer.
  
  CVE-2016-8615
  
  Bug: https://curl.haxx.se/docs/adv_20161102A.html
  Reported-by: Cure53

- strcasecompare: all case insensitive string compares ignore locale now
  
  We had some confusions on when each function was used. We should not act
  differently on different locales anyway.

- strcasecompare: is the new name for strequal()
  
  ... to make it less likely that we forget that the function actually
  does case insentive compares. Also replaced several invokes of the
  function with a plain strcmp when case sensitivity is not an issue (like
  comparing with "-").

- ftp: check for previous patch must be case sensitive!
  
  ... otherwise example.com/PATH and example.com/path would be assumed to
  be the same and they usually aren't!

- SSH: check md5 fingerprint case sensitively

- connectionexists: use case sensitive user/password comparisons
  
  CVE-2016-8616
  
  Bug: https://curl.haxx.se/docs/adv_20161102B.html
  Reported-by: Cure53

- base64: check for integer overflow on large input
  
  CVE-2016-8617
  
  Bug: https://curl.haxx.se/docs/adv_20161102C.html
  Reported-by: Cure53

- krb5: avoid realloc(0)
  
  If the requested size is zero, bail out with error instead of doing a
  realloc() that would cause a double-free: realloc(0) acts as a free()
  and then there's a second free in the cleanup path.
  
  CVE-2016-8619
  
  Bug: https://curl.haxx.se/docs/adv_20161102E.html
  Reported-by: Cure53

- aprintf: detect wrap-around when growing allocation
  
  On 32bit systems we could otherwise wrap around after 2GB and allocate 0
  bytes and crash.
  
  CVE-2016-8618
  
  Bug: https://curl.haxx.se/docs/adv_20161102D.html
  Reported-by: Cure53

- range: reject char globs with missing end like '[L-]'
  
  ... which previously would lead to out of boundary reads.
  
  Reported-by: Luật Nguyễn

- glob_next_url: make sure to stay within the given output buffer

- range: prevent negative end number in a glob range
  
  CVE-2016-8620
  
  Bug: https://curl.haxx.se/docs/adv_20161102F.html
  Reported-by: Luật Nguyễn

- parsedate: handle cut off numbers better
  
  ... and don't read outside of the given buffer!
  
  CVE-2016-8621
  
  bug: https://curl.haxx.se/docs/adv_20161102G.html
  Reported-by: Luật Nguyễn

- escape: avoid using curl_easy_unescape() internally
  
  Since the internal Curl_urldecode() function has a better API.

- unescape: avoid integer overflow
  
  CVE-2016-8622
  
  Bug: https://curl.haxx.se/docs/adv_20161102H.html
  Reported-by: Cure53

- cookies: getlist() now holds deep copies of all cookies
  
  Previously it only held references to them, which was reckless as the
  thread lock was released so the cookies could get modified by other
  handles that share the same cookie jar over the share interface.
  
  CVE-2016-8623
  
  Bug: https://curl.haxx.se/docs/adv_20161102I.html
  Reported-by: Cure53

- TODO: remove IDNA2008

- idn: switch to libidn2 use and IDNA2008 support
  
  CVE-2016-8625
  
  Bug: https://curl.haxx.se/docs/adv_20161102K.html
  Reported-by: Christian Heimes

- test1246: verify URL parsing with host name ending with '#'

- urlparse: accept '#' as end of host name
  
  'http://example.com#@127.0.0.1/x.txt' equals a request to example.com
  for the '/' document with the rest of the URL being a fragment.
  
  CVE-2016-8624
  
  Bug: https://curl.haxx.se/docs/adv_20161102J.html
  Reported-by: Fernando Muñoz

Jay Satiro (31 Oct 2016)
- INTERNALS: better markdown (follow-up)
  
  - Wrap more words with underscores in backticks.
  
  Follow-up to 13f4913.

Daniel Stenberg (30 Oct 2016)
- INTERNALS: better markdown
  
  words with underscore need to be within `these`
  
  Bug: https://github.com/curl/curl-www/issues/19
  Reported-by : Jay Satiro

Jay Satiro (30 Oct 2016)
- mk-ca-bundle.vbs: Fix UTF-8 output
  
  - Change initial message box to mention delay when downloading/parsing.
  
  Since there is no progress meter it was somewhat unexpected that after
  choosing a filename nothing appears to happen, when actually the cert
  data is in the process of being downloaded and parsed.
  
  - Warn if OpenSSL is not present.
  
  - Use a UTF-8 stream to make the ca-bundle data.
  
  - Save the UTF-8 ca-bundle stream as binary so that no BOM is added.
  
  ---
  
  This is a follow-up to d2c6d15 which switched mk-ca-bundle.vbs output to
  ANSI due to corrupt UTF-8 output, now fixed.
  
  This change completes making the default certificate bundle output of
  mk-ca-bundle.vbs as close as possible to that of mk-ca-bundle.pl, which
  should make it easier to review any difference between their output.
  
  Ref: https://github.com/curl/curl/pull/1012

Daniel Stenberg (28 Oct 2016)
- BINDINGS: converted to markdown
  
  To make it render better on the web site, at the price of it becoming
  slightly less readable as text.

Jay Satiro (27 Oct 2016)
- CURLMOPT_MAX_PIPELINE_LENGTH.3: Clarify it's not for HTTP/2
  
  - Clarify that this option is only for HTTP/1.1 pipelining.
  
  Bug: https://github.com/curl/curl/issues/1059
  Reported-by: Jeroen Ooms
  
  Assisted-by: Daniel Stenberg

Daniel Stenberg (27 Oct 2016)
- KNOWN_BUGS: HTTP/2 server push enabled when no pushes can be accepted
  
  Closes #927

- KNOWN_BUGS: c-ares deviates from stock resolver on http://1346569778
  
  Closes #893

Michael Osipov (27 Oct 2016)
- configure.in: Fix test syntax
  
  Some versions of test allow == for equality, but others (such as the HP-UX
  version) do not.  Use a single = for correctness.
  
  Error output:
  checking for monotonic clock_gettime... ./configure[20445]: ==: A test command parameter is not valid.

Daniel Stenberg (27 Oct 2016)
- SECURITY: minor updates
  
  - we allow the security push up to 48 hours before the release
  
  - add a mention about possible pre-notifications
  
  - lower case the 'curl-security' title

- [Andrei Sedoi brought this change]

  docs: fix req->data in multi-uv example
  
  Closes #1088

- mbedtls: stop using deprecated include file
  
  Reported-by: wyattoday
  Fixes #1087

Kamil Dudka (25 Oct 2016)
- [Martin Frodl brought this change]

  nss: fix tight loop in non-blocking TLS handhsake over proxy
  
  ... in case the handshake completes before entering
  CURLM_STATE_PROTOCONNECT
  
  Bug: https://bugzilla.redhat.com/1388162

Jay Satiro (25 Oct 2016)
- mk-ca-bundle: Update the vbscript version
  
  Bring the VBScript version more in line with the perl version:
  
  - Change timestamp to UTC.
  
  - Change URL retrieval to HTTPS-only by default.
  
  - Comment out the options that disabled SSL cert checking by default.
  
  - Assume OpenSSL is present, get SHA256. And add a flag to toggle it.
  
  - Fix cert issuer name output.
  
  The cert issuer output is now ansi, converted from UTF-8. Prior to this
  it was corrupt UTF-8. It turns out though we can work with UTF-8 the
  FSO object that writes ca-bundle can't write UTF-8, so there will have
  to be some alternative if UTF-8 is needed (like an ADODB.Stream).
  
  - Disable the certificate text info feature.
  
  The certificate text info doesn't work properly with any recent OpenSSL.

Daniel Stenberg (24 Oct 2016)
- TODO: indent code to make it render properly

- TODO: Remove the generated include file

- TODO: add "--retry should resume"
  
  See #1084

- mk-ca-bundle.1: document -k
  
  Brought in 1ad2bdcf110266c. Now does HTTPS by default and needs -k to
  fall back to plain HTTP.

- [Jay Satiro brought this change]

  mk-ca-bundle: Change URL retrieval to HTTPS-only by default
  
  - Change all predefined Mozilla URLs to HTTPS (Gregory Szorc).
  
  - New option -k to allow URLs other than HTTPS and enable HTTP fallback.
  
  Prior to this change the default URL retrieval mode was to fall back to
  HTTP if HTTPS didn't work.
  
  Reported-by: Gregory Szorc
  
  Closes #1012

- RELEASE-NOTES: synced with 50ee3aaf1a9b22d

Dan Fandrich (23 Oct 2016)
- INSTALL.md: Updated minimum file sizes for 7.50.3

Daniel Stenberg (22 Oct 2016)
- multi: force connections to get closed in close_all_connections
  
  Several independent reports on infinite loops hanging in the
  close_all_connections() function when closing a multi handle, can be
  fixed by first marking the connection to get closed before calling
  Curl_disconnect.
  
  This is more fixing-the-symptom rather than the underlying problem
  though.
  
  Bug: https://curl.haxx.se/mail/lib-2016-10/0011.html
  Bug: https://curl.haxx.se/mail/lib-2016-10/0059.html
  
  Reported-by: Dan Fandrich, Valentin David, Miloš Ljumović

- [Anders Bakken brought this change]

  curl_multi_remove_handle: fix a double-free
  
  In short the easy handle needs to be disconnected from its connection at
  this point since the connection still is serving other easy handles.
  
  In our app we can reliably reproduce a crash in our http2 stress test
  that is fixed by this change. I can't easily reproduce the same test in
  a small example.
  
  This is the gdb/asan output:
  
  ==11785==ERROR: AddressSanitizer: heap-use-after-free on address 0xe9f4fb80 at pc 0x09f41f19 bp 0xf27be688 sp 0xf27be67c
  READ of size 4 at 0xe9f4fb80 thread T13 (RESOURCE_HTTP)
      #0 0x9f41f18 in curl_multi_remove_handle /path/to/source/3rdparty/curl/lib/multi.c:666
  
  0xe9f4fb80 is located 0 bytes inside of 1128-byte region [0xe9f4fb80,0xe9f4ffe8)
  freed by thread T13 (RESOURCE_HTTP) here:
      #0 0xf7b1b5c2 in __interceptor_free /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_malloc_linux.cc:45
      #1 0x9f7862d in conn_free /path/to/source/3rdparty/curl/lib/url.c:2808
      #2 0x9f78c6a in Curl_disconnect /path/to/source/3rdparty/curl/lib/url.c:2876
      #3 0x9f41b09 in multi_done /path/to/source/3rdparty/curl/lib/multi.c:615
      #4 0x9f48017 in multi_runsingle /path/to/source/3rdparty/curl/lib/multi.c:1896
      #5 0x9f490f1 in curl_multi_perform /path/to/source/3rdparty/curl/lib/multi.c:2123
      #6 0x9c4443c in perform /path/to/source/src/net/resourcemanager/ResourceManagerCurlThread.cpp:854
      #7 0x9c445e0 in ...
      #8 0x9c4cf1d in ...
      #9 0xa2be6b5 in ...
      #10 0xf7aa5780 in asan_thread_start /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_interceptors.cc:226
      #11 0xf4d3a16d in __clone (/lib/i386-linux-gnu/libc.so.6+0xe716d)
  
  previously allocated by thread T13 (RESOURCE_HTTP) here:
      #0 0xf7b1ba27 in __interceptor_calloc /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_malloc_linux.cc:70
      #1 0x9f7dfa6 in allocate_conn /path/to/source/3rdparty/curl/lib/url.c:3904
      #2 0x9f88ca0 in create_conn /path/to/source/3rdparty/curl/lib/url.c:5797
      #3 0x9f8c928 in Curl_connect /path/to/source/3rdparty/curl/lib/url.c:6438
      #4 0x9f45a8c in multi_runsingle /path/to/source/3rdparty/curl/lib/multi.c:1411
      #5 0x9f490f1 in curl_multi_perform /path/to/source/3rdparty/curl/lib/multi.c:2123
      #6 0x9c4443c in perform /path/to/source/src/net/resourcemanager/ResourceManagerCurlThread.cpp:854
      #7 0x9c445e0 in ...
      #8 0x9c4cf1d in ...
      #9 0xa2be6b5 in ...
      #10 0xf7aa5780 in asan_thread_start /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_interceptors.cc:226
      #11 0xf4d3a16d in __clone (/lib/i386-linux-gnu/libc.so.6+0xe716d)
  
  SUMMARY: AddressSanitizer: heap-use-after-free /path/to/source/3rdparty/curl/lib/multi.c:666 in curl_multi_remove_handle
  Shadow bytes around the buggy address:
    0x3d3e9f20: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
    0x3d3e9f30: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
    0x3d3e9f40: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
    0x3d3e9f50: fd fd fd fd fd fd fd fd fd fd fd fd fd fa fa fa
    0x3d3e9f60: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  =>0x3d3e9f70:[fd]fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
    0x3d3e9f80: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
    0x3d3e9f90: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
    0x3d3e9fa0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
    0x3d3e9fb0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
    0x3d3e9fc0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  Shadow byte legend (one shadow byte represents 8 application bytes):
    Addressable:           00
    Partially addressable: 01 02 03 04 05 06 07
    Heap left redzone:       fa
    Heap right redzone:      fb
    Freed heap region:       fd
    Stack left redzone:      f1
    Stack mid redzone:       f2
    Stack right redzone:     f3
    Stack partial redzone:   f4
    Stack after return:      f5
    Stack use after scope:   f8
    Global redzone:          f9
    Global init order:       f6
    Poisoned by user:        f7
    Container overflow:      fc
    Array cookie:            ac
    Intra object redzone:    bb
    ASan internal:           fe
    Left alloca redzone:     ca
    Right alloca redzone:    cb
  ==11785==ABORTING
  
  Thread 14 "RESOURCE_HTTP" received signal SIGABRT, Aborted.
  [Switching to Thread 0xf27bfb40 (LWP 12324)]
  0xf7fd8be9 in __kernel_vsyscall ()
   (gdb) bt
   #0  0xf7fd8be9 in __kernel_vsyscall ()
   #1  0xf4c7ee89 in __GI_raise (sig=6) at ../sysdeps/unix/sysv/linux/raise.c:54
   #2  0xf4c803e7 in __GI_abort () at abort.c:89
   #3  0xf7b2ef2e in __sanitizer::Abort () at /opt/toolchain/src/gcc-6.2.0/libsanitizer/sanitizer_common/sanitizer_posix_libcdep.cc:122
   #4  0xf7b262fa in __sanitizer::Die () at /opt/toolchain/src/gcc-6.2.0/libsanitizer/sanitizer_common/sanitizer_common.cc:145
   #5  0xf7b21ab3 in __asan::ScopedInErrorReport::~ScopedInErrorReport (this=0xf27be171, __in_chrg=<optimized out>) at /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_report.cc:689
   #6  0xf7b214a5 in __asan::ReportGenericError (pc=166993689, bp=4068206216, sp=4068206204, addr=3925146496, is_write=false, access_size=4, exp=0, fatal=true) at /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_report.cc:1074
   #7  0xf7b21fce in __asan::__asan_report_load4 (addr=3925146496) at /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_rtl.cc:129
   #8  0x09f41f19 in curl_multi_remove_handle (multi=0xf3406080, data=0xde582400) at /path/to/source3rdparty/curl/lib/multi.c:666
   #9  0x09f6b277 in Curl_close (data=0xde582400) at /path/to/source3rdparty/curl/lib/url.c:415
   #10 0x09f3354e in curl_easy_cleanup (data=0xde582400) at /path/to/source3rdparty/curl/lib/easy.c:860
   #11 0x09c6de3f in ...
   #12 0x09c378c5 in ...
   #13 0x09c48133 in ...
   #14 0x09c4d092 in ...
   #15 0x0a2be6b6 in ...
   #16 0xf7aa5781 in asan_thread_start (arg=0xf2d22938) at /opt/toolchain/src/gcc-6.2.0/libsanitizer/asan/asan_interceptors.cc:226
   #17 0xf5de52b5 in start_thread (arg=0xf27bfb40) at pthread_create.c:333
   #18 0xf4d3a16e in clone () at ../sysdeps/unix/sysv/linux/i386/clone.S:114
  
  Fixes #1083

- testcurl.1: fix the URL to the autobuild summary

- testcurl.1: update URLs

- INSTALL: converted to markdown => INSTALL.md
  
  Also heavily edited for content. Removed lots of old cruft that we added
  like 10+ years ago that is likely incorrect by now.
  
  Also removed INSTALL.devcpp for same reason.

- [Martin Storsjo brought this change]

  configure: Check for other variants of the -m*os*-version-min flags
  
  In addition to -miphoneos-version-min, the same version can be set
  using -mios-version-min. And for WatchOS and TvOS, there's
  -mwatchos-version-min and -mtvos-version-min.

- configure: set min version flags for builds on mac
  
  This helps building binaries that can work on multiple macOS versions.
  
  Help-by: Martin Storsjö
  
  Fixes #1069

- curl_multi_add_handle: set timeouts in closure handles
  
  The closure handle only ever has default timeouts set. To improve the
  state somewhat we clone the timeouts from each added handle so that the
  closure handle always has the same timeouts as the most recently added
  easy handle.
  
  Fixes #739

- configure/CURL_CHECK_FUNC_POLL: disable poll completely on mac
  
  ... so that the same libcurl build easier can run on any version.
  
  Follow-up to issue #1057

- RELEASE-NOTES: synced with f36f8c14551efc6772

- test14xx: fixed --libcurl output tests again after 8e8afa82cbb

- s/cURL/curl
  
  The tool was never called cURL, only the project. But even so, we have
  more and more over time switched to just use lower case.

- polarssl: indented code, removed unused variables

- polarssl: reduce #ifdef madness with a macro

- polarssl: fix unaligned SSL session-id lock

- Curl_polarsslthreadlock_thread_setup: clear array at init
  
  ... since if it fails to init the entire array and then tries to clean
  it up, it would attempt to work on an uninitialized pointer.

- curl: set INTERLEAVEDATA too
  
  As otherwise the callback could be called with a NULL pointer when RTSP
  data is provided.

- gopher: properly return error for poll failures

- select: switch to macros in uppercase
  
  Curl_select_ready() was the former API that was replaced with
  Curl_select_check() a while back and the former arg setup was provided
  with a define (in order to leave existing code unmodified).
  
  Now we instead offer SOCKET_READABLE and SOCKET_WRITABLE for the most
  common shortcuts where only one socket is checked. They're also more
  visibly macros.

- select: use more proper macro-looking names
  
  ... so that it becomes more obvious in the code what is what. Also added
  a typecast for one of the calculations.

- Curl_socket_check: add extra check to avoid integer overflow

- maketgz: make it support "only" generating version info
  
  ... to allow you to update the local repository with the given version
  number data.

Jay Satiro (17 Oct 2016)
- url: skip to-be-closed connections when pipelining (follow-up)
  
  - Change back behavior so that pipelining is considered possible for
  connections that have not yet reached the protocol level.
  
  This is a follow-up to e5f0b1a which had changed the behavior of
  checking if pipelining is possible to ignore connections that had
  'bits.close' set. Connections that have not yet reached the protocol
  level also have that bit set, and we need to consider pipelining
  possible on those connections.

Daniel Stenberg (17 Oct 2016)
- HTTP2: mention the tool's limited support

- RELEASE-NOTES: synced with a1a5cd04877fd6fd

- [David Woodhouse brought this change]

  curl: do not set CURLOPT_SSLENGINEDEFAULT automatically
  
  There were bugs in the PKCS#11 engine, and fixing them triggers bugs in
  OpenSSL. Just don't get involved; there's no need to be making the
  engine methods the default anyway.
  
  https://github.com/OpenSC/libp11/pull/108
  https://github.com/openssl/openssl/pull/1639
  
  Merges #1042

- KNOWN_BUGS: two more existing problems

Marcel Raad (16 Oct 2016)
- win: fix Universal Windows Platform build
  
  This fixes a merge error in commit 7f3df80 caused by commit 332e8d6.
  
  Additionally, this changes Curl_verify_windows_version for Windows App
  builds to assume to always be running on the target Windows version.
  There seems to be no way to determine the Windows version from a
  UWP app. Neither GetVersion(Ex), nor VerifyVersionInfo, nor the
  Version Helper functions are supported.
  
  Bug: https://github.com/curl/curl/pull/820#issuecomment-250889878
  Reported-by: Paul Joyce
  
  Closes https://github.com/curl/curl/pull/1048

Daniel Stenberg (16 Oct 2016)
- KNOWN_BUGS: minor formatting edit

Jay Satiro (14 Oct 2016)
- [Rider Linden brought this change]

  url: skip to-be-closed connections when pipelining
  
  No longer attempt to use "doomed" to-be-closed connections when
  pipelining. Prior to this change connections marked for deletion (e.g.
  timeout) would be erroneously used, resulting in sporadic crashes.
  
  As originally reported and fixed by Carlo Wood (origin unknown).
  
  Bug: https://github.com/curl/curl/issues/627
  Reported-by: Rider Linden
  
  Closes https://github.com/curl/curl/pull/1075
  Participation-by: nopjmp@users.noreply.github.com

Daniel Stenberg (13 Oct 2016)
- vtls: only re-use session-ids using the same scheme
  
  To make it harder to do cross-protocol mistakes

Jay Satiro (11 Oct 2016)
- [Torben Dannhauer brought this change]

  dist: add missing cmake modules to the tarball
  
  Closes https://github.com/curl/curl/pull/1070

Daniel Stenberg (11 Oct 2016)
- configure: detect the broken poll() in macOS 10.12
  
  Fixes #1057

- dist: remove PDF and HTML converted docs from the releases

- [Remo E brought this change]

  cmake: add nghttp2 support
  
  Closes #922

- [Andreas Streichardt brought this change]

  resolve: add error message when resolving using SIGALRM
  
  Closes #1066

- GIT-INFO: remove the Mac 10.1-specific details
  
  There shouldn't be many devs out there anymore using such outdated macOS
  versions. And it removes the dead link.
  
  Closes #1049

- RELEASE-NOTES: spellfix

- RELEASE-NOTES: synced with 82720490628cb53a
  
  5 more fixes, 2 more contributors

- [Tobias Stoeckmann brought this change]

  smb: properly check incoming packet boundaries
  
  Not all reply messages were properly checked for their lengths, which
  made it possible to access uninitialized memory (but this does not lead
  to out of boundary accesses).
  
  Closes #1052

- test557: verify printf() with 128 and 129 arguments

- mprintf: return error on too many arguments
  
  128 arguments should be enough for everyone

- ftp: fix Curl_ftpsendf()
  
  ... it no longer takes printf() arguments since it was only really taken
  advantage by one user and it was not written and used in a safe
  way. Thus the 'f' is removed from the function name and the proto is
  changed.
  
  Although the current code wouldn't end up in badness, it was a risk that
  future changes could end up springf()ing too large data or passing in a
  format string inadvertently.

- formpost: avoid silent snprintf() truncation
  
  The previous use of snprintf() could make libcurl silently truncate some
  input data and not report that back on overly large input, which could
  make data get sent over the network in a bad format.
  
  Example:
  
   $ curl --form 'a=b' -H "Content-Type: $(perl -e 'print "A"x4100')"

- TODO: build: Enable PIE and RELRO by default

- TODO: Support better than MD5 hostkey hash (for ssh)

- [Daniel Gustafsson brought this change]

  tests: Fix a small typo in the tests README (#1060)
  
  The subdirectory for logs in tests/ is named log/ without an 's'
  at the end.

- TODO: Introduce --fail-fast to exit on first transfer fail
  
  See #1054

- TODO: Leave secure cookies alone

- [Rainer Müller brought this change]

  CURLOPT_DEBUGFUNCTION.3: unused argument warning (#1056)
  
  The 'userp' argument is unused in this example code.

- TODO: TCP Fast Open for windows

- RELEASE-NOTES: synced with 8fd2a754f0de

- CURLOPT_KEEP_SENDING_ON_ERROR.3: mention when it is added

- memdup: use 'void *' as return and source type

- TODO: Add easy argument to formpost functions

- formpost: trying to attach a directory no longer crashes
  
  The error path would previously add a freed entry to the linked list.
  
  Reported-by: Toby Peterson
  
  Fixes #1053

- [Sergei Kuzmin brought this change]

  cookies: same domain handling changed to match browser behavior
  
  Cokie with the same domain but different tailmatching property are now
  considered different and do not replace each other.  If header contains
  following lines then two cookies will be set: Set-Cookie: foo=bar;
  domain=.foo.com; expires=Thu Mar 3 GMT 8:56:27 2033 Set-Cookie: foo=baz;
  domain=foo.com; expires=Thu Mar 3 GMT 8:56:27 2033
  
  This matches Chrome, Opera, Safari, and Firefox behavior. When sending
  stored tokens to foo.com Chrome, Opera, Firefox store send them in the
  stored order, while Safari pre-sort the cookies.
  
  Closes #1050

- [Stephen Brokenshire brought this change]

  FAQ: Fix typos in section 5.14 (#1047)
  
  Type required for YourClass::func C++ function (using size_t in line
  with the documentation for CURLOPT_WRITEFUNCTION) and missing second
  colon when specifying the static function for CURLOPT_WRITEFUNCTION.

- [Sebastian Mundry brought this change]

  KNOWN_BUGS: Fix typos in section 5.8.
  
  Closes #1046

- [mundry brought this change]

  CONTRIBUTE.md: Fix typo in 'About pull requests' section. (#1045)

- curl.1: --trace supports % for sending to stderr!

- KNOWN_BUGS: 5.8 configure finding libs in wrong directory

Dan Fandrich (24 Sep 2016)
- configure: Fixed builds with libssh2 in a custom location
  
  A libssh2 library in the standard system location was being used in
  preference to the desired one while linking.

Daniel Stenberg (23 Sep 2016)
- SECURITY: remove the top ascii logo

Michael Kaufmann (22 Sep 2016)
- New libcurl option to keep sending on error
  
  Add the new option CURLOPT_KEEP_SENDING_ON_ERROR to control whether
  sending the request body shall be completed when the server responds
  early with an error status code.
  
  This is suitable for manual NTLM authentication.
  
  Reviewed-by: Jay Satiro
  
  Closes https://github.com/curl/curl/pull/904

Kamil Dudka (22 Sep 2016)
- nss: add chacha20-poly1305 cipher suites if supported by NSS

- nss: add cipher suites using SHA384 if supported by NSS

- nss: fix typo in ecdhe_rsa_null cipher suite string
  
  As it seems to be a rarely used cipher suite (for securely established
  but _unencrypted_ connections), I believe it is fine not to provide an
  alias for the misspelled variant.

Jay Satiro (21 Sep 2016)
- docs: Remove that --proto is just used for initial retrieval
  
  .. and add that --proto-redir and CURLOPT_REDIR_PROTOCOLS do not
  override protocols denied by --proto and CURLOPT_PROTOCOLS.
  
  - Add a test to enforce: --proto deny must override --proto-redir allow
  
  Closes https://github.com/curl/curl/pull/1031

Daniel Stenberg (21 Sep 2016)
- dist: add CurlSymbolHiding.cmake to the tarball
  
  Follow-up to 6140dfcf3e784
  
  Reported-by: Alexander Sinditskiy

- curl_global_cleanup.3: don't unload the lib with sub threads running
  
  Discussed in #997
  
  Assisted-by: Jay Satiro

- MAIL-ETIQUETTE: language

Jay Satiro (20 Sep 2016)
- easy: Reset all statistical session info in curl_easy_reset
  
  Bug: https://github.com/curl/curl/issues/1017
  Reported-by: Jeroen Ooms

Daniel Stenberg (19 Sep 2016)
- RELEASE-NOTES: synced with 79607eec51055

Jay Satiro (19 Sep 2016)
- [Daniel Gustafsson brought this change]

  darwinssl: Fix typo in comment
  
  Closes https://github.com/curl/curl/pull/1028

Daniel Stenberg (19 Sep 2016)
- [Bernard Spil brought this change]

  libressl: fix version output
  
  LibreSSL defines `OPENSSL_VERSION_NUMBER` as `0x20000000L` for all
  versions returning `LibreSSL/2.0.0` for any LibreSSL version.
  
  This change provides a local OpenSSL_version_num function replacement
  returning LIBRESSL_VERSION_NUMBER instead.
  
  Closes #1029

- [rugk brought this change]

  TODO: Add PINNEDPUBLICKEY - HPKP compatibility, HSTS & HPKP
  
  Closes #1025
  Closes #1026
  Closes #1027

- openssl: don't call ERR_remote_thread_state on >= 1.1.0
  
  Follow-up fix to d9321562

- openssl: don’t call CRYTPO_cleanup_all_ex_data
  
  The OpenSSL function CRYTPO_cleanup_all_ex_data() cannot be called
  multiple times without crashing - and other libs might call it! We
  basically cannot call it without risking a crash. The function is a
  no-op since OpenSSL 1.1.0.
  
  Not calling this function only risks a small memory leak with OpenSSL <
  1.1.0.
  
  Bug: https://curl.haxx.se/mail/lib-2016-09/0045.html
  Reported-by: Todd Short

- TODO: Support SSLKEYLOGFILE

Jay Satiro (18 Sep 2016)
- CURLOPT_PINNEDPUBLICKEY.3: fix the AVAILABILITY formatting

Nick Zitzmann (18 Sep 2016)
- darwinssl: disable RC4 cipher-suite support
  
  RC4 was a nice alternative to CBC back in the days of BEAST, but it's insecure and obsolete now.

- configure: change "iOS/Mac OS X native" to "Apple OS native"
  
  Since I first wrote that text, Apple introduced tvOS and watchOS, and renamed "Mac OS X" to "macOS." Let's make the text a little more inclusive, since curl can be built for all four operating systems.

Jay Satiro (18 Sep 2016)
- test2048: fix url

- examples/imap-append: Set size of data to be uploaded
  
  Prior to this commit this example failed with error
  'Cannot APPEND with unknown input file size'.
  
  Bug: https://github.com/curl/curl/issues/1008
  Reported-by: lukaszgn@users.noreply.github.com
  
  Closes https://github.com/curl/curl/pull/1011

Daniel Stenberg (16 Sep 2016)
- [Tony Kelman brought this change]

  LICENSE-MIXING.md: update with mbedTLS dual licensing
  
  Recent versions of mbedTLS are available under either Apache 2.0 or GPL
  2.0, see https://tls.mbed.org/how-to-get
  
  Closes #1019

- KNOWN_BUGS: chunked-encoded requests with HTTP/2 is fixed

- http2: debug ouput sent HTTP/2 request headers

- http: accept "Transfer-Encoding: chunked" for HTTP/2 as well
  
  ... but don't send the actual header over the wire as it isn't accepted.
  Chunked uploading is still triggered using this method.
  
  Fixes #1013
  Fixes #662

- openssl: fix per-thread memory leak usiong 1.0.1 or 1.0.2
  
  OpenSSL 1.0.1 and 1.0.2 build an error queue that is stored per-thread
  so we need to clean it when easy handles are freed, in case the thread
  will be killed in which the easy handle was used. All OpenSSL code in
  libcurl should extract the error in association with the error already
  so clearing this queue here should be harmless at worst.
  
  Fixes #964

- RELEASE-NOTES: reset and go toward 7.51.0 (again)

Version 7.50.3 (14 Sep 2016)

Daniel Stenberg (14 Sep 2016)
- THANKS: updated with curl 7.50.3 contributors

- RELEASE-NOTES: curl 7.50.3

- test1605: verify negative input lengths to (un)escape functions

- curl_easy_unescape: deny negative string lengths as input
  
  CVE-2016-7167
  
  Bug: https://curl.haxx.se/docs/adv_20160914.html

- curl_easy_escape: deny negative string lengths as input
  
  CVE-2016-7167
  
  Bug: https://curl.haxx.se/docs/adv_20160914.html

- curl: make --create-dirs on windows grok both forward and backward slashes
  
  Reported-by: Ryan Scott
  
  Fixes #1007

- RELEASE-NOTES: synced with 665694979b6

- [Tony Kelman brought this change]

  mbedtls: switch off NTLM in build if md4 isn't available
  
  NTLM support with mbedTLS was added in 497e7c9 but requires that mbedTLS
  is built with the MD4 functions available, which it isn't in default
  builds. This now adapts if the funtion isn't there and builds libcurl
  without NTLM support if so.
  
  Fixes #1004

Jay Satiro (12 Sep 2016)
- CODE_STYLE: fix long-line guideline
  
  - Change maximum allowed line length from 80 to 79.

- CODE_STYLE: add column alignment section
  
  Note that since the added examples are for column alignment I had to
  encapsulate with ~~~c markdown to preserve their alignment.

Peter Wu (11 Sep 2016)
- cmake: fix curl-config --static-libs
  
  The `curl-config --static-libs` command should not output paths like
  -l/usr/lib/libssl.so, instead print the absolute path without `-l`.
  
  This also removes the confusing message "Static linking is broken" which
  was printed because curl-config --static-libs was disfunctional even
  though the static libcurl.a library works properly.
  
  Fixes https://github.com/curl/curl/issues/841

Daniel Stenberg (11 Sep 2016)
- http: refuse to pass on response body with NO_NODY was set
  
  ... like when a HTTP/0.9 response comes back without any headers at all
  and just a body this now prevents that body from being sent to the
  callback etc.
  
  Adapted test 1144 to verify.
  
  Fixes #973
  
  Assisted-by: Ray Satiro

- RELEASE-NOTES: synced with 257bf3ac67eb6

Jakub Zakrzewski (10 Sep 2016)
- CMake: Don't build unit tests if private symbols are hidden
  
  This only excludes building unit tests from default build ( 'all' Make
  target or "Build Solution" in VisualStudio). The projects and Make
  targets will still be generated and shown in supporting IDEs.
  
  Fixes https://github.com/curl/curl/issues/981
  Reported-by: Randy Armstrong
  
  Closes https://github.com/curl/curl/pull/990

- CMake: Try to (un-)hide private library symbols
  
  Detect support for compiler symbol visibility flags and apply those
  according to CURL_HIDDEN_SYMBOLS option.
  It should work true to the autotools build except it tries to unhide
  symbols on Windows when requested and prints warning if it fails.
  
  Ref: https://github.com/curl/curl/issues/981#issuecomment-242665951
  Reported-by: Daniel Stenberg

Daniel Stenberg (9 Sep 2016)
- openssl: fix bad memory free (regression)
  
  ... by partially reverting f975f06033b1. The allocation could be made by
  OpenSSL so the free must be made with OPENSSL_free() to avoid problems.
  
  Reported-by: Harold Stuart
  Fixes #1005

- http2: support > 64bit sized uploads
  
  ... by making sure we don't count down the "upload left" counter when the
  uploaded size is unknown and then it can be allowed to continue forever.
  
  Fixes #996

Jay Satiro (7 Sep 2016)
- errors: new alias CURLE_WEIRD_SERVER_REPLY (8)
  
  Since we're using CURLE_FTP_WEIRD_SERVER_REPLY in imap, pop3 and smtp as
  more of a generic "failed to parse" introduce an alias without FTP in
  the name.
  
  Closes https://github.com/curl/curl/pull/975

Daniel Stenberg (7 Sep 2016)
- bump: toward 7.51.0

- HISTORY: remove ascii logo to render nicer on web

- curl: whitelist use of strtok() in non-threaded context

- checksrc: detect strtok() use
  
  ... as that function slipped through once before.

GitHub (7 Sep 2016)
- [Viktor Szakats brought this change]

  mk-ca-bundle.pl: use SHA256 instead of SHA1
  
  This hash is used to verify the original downloaded certificate bundle
  and also included in the generated bundle's comment header. Also
  rename related internal symbols to algorithm-agnostic names.

Version 7.50.2 (7 Sep 2016)

Daniel Stenberg (7 Sep 2016)
- RELEASE-NOTES: curl 7.50.2 release

- THANKS: updated for 7.50.2

Jay Satiro (6 Sep 2016)
- [Gaurav Malhotra brought this change]

  openssl: fix CURLINFO_SSL_VERIFYRESULT
  
  CURLINFO_SSL_VERIFYRESULT does not get the certificate verification
  result when SSL_connect fails because of a certificate verification
  error.
  
  This fix saves the result of SSL_get_verify_result so that it is
  returned by CURLINFO_SSL_VERIFYRESULT.
  
  Closes https://github.com/curl/curl/pull/995

Daniel Stenberg (6 Sep 2016)
- [Daniel Gustafsson brought this change]

  darwinssl: test for errSecSuccess in PKCS12 import rather than noErr (#993)
  
  While noErr and errSecSuccess are defined as the same value, the API
  documentation states that SecPKCS12Import() returns errSecSuccess if
  there were no errors in importing. Ensure that a future change of the
  defined value doesn't break (however unlikely) and be consistent with
  the API docs.

- [Daniel Gustafsson brought this change]

  docs: Fix link to CONTRIBUTE in Github contribution guidelines (#994)

- [Marcel Raad brought this change]

  openssl: Fix compilation with OPENSSL_API_COMPAT=0x10100000L
  
  With OPENSSL_API_COMPAT=0x10100000L (OpenSSL 1.1 API), the cleanup
  functions are unavailable (they're no-ops anyway in OpenSSL 1.1). The
  replacements for SSL_load_error_strings, SSLeay_add_ssl_algorithms, and
  OpenSSL_add_all_algorithms are called automatically [1][2]. SSLeay() is
  now called OpenSSL_version_num().
  
  [1]: https://www.openssl.org/docs/man1.1.0/ssl/OPENSSL_init_ssl.html
  [2]: https://www.openssl.org/docs/man1.1.0/crypto/OPENSSL_init_crypto.html
  
  Closes #992

- RELEASE-NOTES: synced with 3d4c0c8b9bc1d

- http2: return EOF when done uploading without known size
  
  Fixes #982

- http2: skip the content-length parsing, detect unknown size

- http2: minor white space edit

- http2: use named define instead of magic constant in read callback

- [Craig Davison brought this change]

  configure: make the cpp -P detection not clobber CPPFLAGS
  
  CPPPFLAGS is now CPPPFLAG. Fixes CURL_CHECK_DEF.
  
  Fixes #958

- [Olivier Brunel brought this change]

  speed caps: not based on average speeds anymore
  
  Speed limits (from CURLOPT_MAX_RECV_SPEED_LARGE &
  CURLOPT_MAX_SEND_SPEED_LARGE) were applied simply by comparing limits
  with the cumulative average speed of the entire transfer; While this
  might work at times with good/constant connections, in other cases it
  can result to the limits simply being "ignored" for more than "short
  bursts" (as told in man page).
  
  Consider a download that goes on much slower than the limit for some
  time (because bandwidth is used elsewhere, server is slow, whatever the
  reason), then once things get better, curl would simply ignore the limit
  up until the average speed (since the beginning of the transfer) reached
  the limit.  This could prove the limit useless to effectively avoid
  using the entire bandwidth (at least for quite some time).
  
  So instead, we now use a "moving starting point" as reference, and every
  time at least as much as the limit as been transferred, we can reset
  this starting point to the current position. This gets a good limiting
  effect that applies to the "current speed" with instant reactivity (in
  case of sudden speed burst).
  
  Closes #971

- HISTORY.md: the multi socket was put in the wrong year!

- [Mark Hamilton brought this change]

  tool_helpers.c: fix comment typo (#989)

- [Mark Hamilton brought this change]

  libtest/test.h: fix typo (#988)

- CURLMOPT_PIPELINING.3: language

- CURLMOPT_PIPELINING.3: extended and clarified
  
  Especially in regards to the multiplexing part.

Steve Holme (31 Aug 2016)
- curl_sspi.c: Updated function description comments
  
  * Added description to Curl_sspi_free_identity()
  * Added parameter and return explanations to Curl_sspi_global_init()
  * Added parameter explaination to Curl_sspi_global_cleanup()

- README: Corrected the supported Visual Studio versions
  
  Missed from commit 8356022d17.

- KNOWN_BUGS: Move the Visual Studio project shortcomings from local README

- KNOWN_BUGS: Expand 6.4 to include Kerberos V5
  
  ...and discuss a possible solution.

Daniel Stenberg (30 Aug 2016)
- connect: fix #ifdefs for debug versions of conn/streamclose() macros
  
  CURLDEBUG is for the memory debugging
  
  DEBUGBUILD is for the extra debug stuff
  
  Pointed-out-by: Steve Holme

- KNOWN_BUGS: mention some cmake "support gaps"

Nick Zitzmann (28 Aug 2016)
- darwinssl: add documentation stating that the --cainfo option is intended for backward compatibility only
  
  In other news, I changed one other reference to "Mac OS X" in the documentation (that I previously wrote) to say "macOS" instead.

Daniel Stenberg (28 Aug 2016)
- http2: return CURLE_HTTP2_STREAM for unexpected stream close
  
  Follow-up to c3e906e9cd0f, seems like a more appropriate error code
  
  Suggested-by: Jay Satiro

- [Tatsuhiro Tsujikawa brought this change]

  http2: handle closed streams when uploading
  
  Fixes #986

- http2: make sure stream errors don't needlessly close the connection
  
  With HTTP/2 each transfer is made in an indivial logical stream over the
  connection, making most previous errors that caused the connection to get
  forced-closed now instead just kill the stream and not the connection.
  
  Fixes #941

- Curl_verify_windows_version: minor edit to avoid compiler warnings
  
  ... instead of if() before the switch(), add a default to the switch so
  that the compilers don't warn on "warning: enumeration value
  'PLATFORM_DONT_CARE' not handled in switch" anymore.

Steve Holme (27 Aug 2016)
- RELEASE-NOTES: Added missing fix from commit 15592143f

Jay Satiro (26 Aug 2016)
- schannel: Disable ALPN for Wine since it is causing problems
  
  - Disable ALPN on Wine.
  
  - Don't pass input secbuffer when ALPN is disabled.
  
  When ALPN support was added a change was made to pass an input secbuffer
  to initialize the context. When ALPN is enabled the buffer contains the
  ALPN information, and when it's disabled the buffer is empty. In either
  case this input buffer caused problems with Wine and connections would
  not complete.
  
  Bug: https://github.com/curl/curl/issues/983
  Reported-by: Christian Fillion

Kamil Dudka (26 Aug 2016)
- [Peter Wang brought this change]

  nss: work around race condition in PK11_FindSlotByName()
  
  Serialise the call to PK11_FindSlotByName() to avoid spurious errors in
  a multi-threaded environment. The underlying cause is a race condition
  in nssSlot_IsTokenPresent().
  
  Bug: https://bugzilla.mozilla.org/1297397
  
  Closes #985

- nss: refuse previously loaded certificate from file
  
  ... when we are not asked to use a certificate from file

Daniel Stenberg (26 Aug 2016)
- ftp_done: remove dead code

- TLS: random file/egd doesn't have to match for conn reuse

- test161: add comment for the exit code

Dan Fandrich (26 Aug 2016)
- test219: Add http as a required feature

Daniel Stenberg (25 Aug 2016)
- [Michael Kaufmann brought this change]

  HTTP: stop parsing headers when switching to unknown protocols
  
  - unknown protocols probably won't send more headers (e.g. WebSocket)
  - improved comments and moved them to the correct case statements
  
  Closes #899

- openssl: make build with 1.1.0 again
  
  synced with OpenSSL git master commit cc06906707

- INTERNALS: fix title

- configure: detect zlib with our pkg-config macros
  
  ... instead of relying on the pkg-config autoconf macros to be present.
  
  Fixes #972 (again...)

Jay Satiro (25 Aug 2016)
- http2: Remove incorrect comments
  
  .. also remove same from scp

Daniel Stenberg (23 Aug 2016)
- [Ales Novak brought this change]

  ftp: fix wrong poll on the secondary socket
  
  When we're uploading using FTP and the server issues a tiny pause
  between opening the connection to the client's secondary socket, the
  client's initial poll() times out, which leads to second poll() which
  does not wait for POLLIN on the secondary socket. So that poll() also
  has to time out, creating a long (200ms) pause.
  
  This patch adds the correct flag to the secondary socket, making the
  second poll() correctly wait for the connection there too.
  
  Signed-off-by: Ales Novak <alnovak@suse.cz>
  
  Closes #978

- RELEASE-NOTES: synced with 95ded2c56

- configure: make it work without PKG_CHECK_MODULES
  
  With commit c2f9b78 we added a new dependency on pkg-config for
  developers which may be unwanted. This change make the configure script
  still work as before if pkg-config isn't installed, it'll just use the
  old zlib detection logic without pkg-config.
  
  Reported-by: Marc Hörsken
  
  Fixes #972

Marc Hoersken (21 Aug 2016)
- Revert "KNOWN_BUGS: SOCKS proxy not working via IPv6"
  
  This reverts commit 9cb1059f92286a6eb5d28c477fdd3f26aed1d554.
  
  As discussed in #835 SOCKS5 supports IPv6 proxies and destinations.

Daniel Stenberg (21 Aug 2016)
- [Marco Deckel brought this change]

  win: Basic support for Universal Windows Platform apps
  
  Closes #820

Steve Holme (21 Aug 2016)
- sasl: Don't use GSSAPI authentication when domain name not specified
  
  Only choose the GSSAPI authentication mechanism when the user name
  contains a Windows domain name or the user is a valid UPN.
  
  Fixes #718

- vauth: Added check for supported SSPI based authentication mechanisms
  
  Completing commit 00417fd66c and 2708d4259b.

- http.c: Remove duplicate (authp->avail & CURLAUTH_DIGEST) check
  
  From commit 2708d4259b.

Marc Hoersken (20 Aug 2016)
- socks.c: display the hostname returned by the SOCKS5 proxy server
  
  Instead of displaying the requested hostname the one returned
  by the SOCKS5 proxy server is used in case of connection error.
  The requested hostname is displayed earlier in the connection sequence.
  
  The upper-value of the port is moved to a temporary variable and
  replaced with a 0-byte to make sure the hostname is 0-terminated.

Steve Holme (20 Aug 2016)
- urldata.h: Corrected comment for httpcode which is also populated by SMTP
  
  As of 7.25.0 and commit 5430007222.

Marc Hoersken (20 Aug 2016)
- socks.c: use Curl_printable_address in SOCKS5 connection sequence
  
  Replace custom string formatting with Curl_printable_address.
  Add additional debug and error output in case of failures.

- socks.c: align SOCKS4 connection sequence with SOCKS5
  
  Calling sscanf is not required since the raw IPv4 address is
  available and the protocol can be detected using ai_family.

Steve Holme (20 Aug 2016)
- http.c: Corrected indentation change from commit 2708d4259b
  
  Made by Visual Studio's auto-correct feature and missed by me in my own
  code reviews!

- http: Added calls to Curl_auth_is_<mechansism>_supported()
  
  Hooked up the HTTP authentication layer to query the new 'is mechanism
  supported' functions when deciding what mechanism to use.
  
  As per commit 00417fd66c existing functionality is maintained for now.

Marc Hoersken (20 Aug 2016)
- socks.c: improve verbose output of SOCKS5 connection sequence

- configure.ac: add missing quotes to PKG_CHECK_MODULES

Steve Holme (20 Aug 2016)
- sasl: Added calls to Curl_auth_is_<mechansism>_supported()
  
  Hooked up the SASL authentication layer to query the new 'is mechanism
  supported' functions when deciding what mechanism to use.
  
  For now existing functionality is maintained.

Daniel Stenberg (19 Aug 2016)
- [Miroslav Franc brought this change]

  spnego_sspi: fix memory leak in case *outlen is zero (#970)

- CURLMOPT_MAX_TOTAL_CONNECTIONS.3: mention it can also multiplex

Steve Holme (18 Aug 2016)
- vauth: Introduced Curl_auth_is_<mechansism>_supported() functions
  
  As Windows SSPI authentication calls fail when a particular mechanism
  isn't available, introduced these functions for DIGEST, NTLM, Kerberos 5
  and Negotiate to allow both HTTP and SASL authentication the opportunity
  to query support for a supported mechanism before selecting it.
  
  For now each function returns TRUE to maintain compatability with the
  existing code when called.

Daniel Stenberg (18 Aug 2016)
- test1144: verify HEAD with body-only response

Steve Holme (17 Aug 2016)
- RELEASE-PROCEDURE: Added some more future release dates
  
  ...and removed some old ones

Daniel Stenberg (17 Aug 2016)
- [David Woodhouse brought this change]

  curl: allow "pkcs11:" prefix for client certificates
  
  RFC7512 provides a standard method to reference certificates in PKCS#11
  tokens, by means of a URI starting 'pkcs11:'.
  
  We're working on fixing various applications so that whenever they would
  have been able to use certificates from a file, users can simply insert
  a PKCS#11 URI instead and expect it to work. This expectation is now a
  part of the Fedora packaging guidelines, for example.
  
  This doesn't work with cURL because of the way that the colon is used
  to separate the certificate argument from the passphrase. So instead of
  
     curl -E 'pkcs11:manufacturer=piv_II;id=%01' …
  
  I instead need to invoke cURL with the colon escaped, like this:
  
     curl -E 'pkcs11\:manufacturer=piv_II;id=%01' …
  
  This is suboptimal because we want *consistency* — the URI should be
  usable in place of a filename anywhere, without having strange
  differences for different applications.
  
  This patch therefore disables the processing in parse_cert_parameter()
  when the string starts with 'pkcs11:'. It means you can't pass a
  passphrase with an unescaped PKCS#11 URI, but there's no need to do so
  because RFC7512 allows a PIN to be given as a 'pin-value' attribute in
  the URI itself.
  
  Also, if users are already using RFC7512 URIs with the colon escaped as
  in the above example — even providing a passphrase for cURL to handling
  instead of using a pin-value attribute, that will continue to work
  because their string will start 'pkcs11\:' and won't match the check.
  
  What *does* break with this patch is the extremely unlikely case that a
  user has a file which is in the local directory and literally named
  just "pkcs11", and they have a passphrase on it. If that ever happened,
  the user would need to refer to it as './pkcs11:<passphrase>' instead.

- nss: make the global variables static

- openssl: use regular malloc instead of OPENSSL_malloc
  
  This allows for better memmory debugging and torture tests.

- proxy: fix tests as follow-up to 93b0d907d5
  
  This fixes tests that were added after 113f04e664b as the tests would
  fail otherwise.
  
  We bring back "Proxy-Connection: Keep-Alive" now unconditionally to fix
  regressions with old and stupid proxies, but we could possibly switch to
  using it only for CONNECT or only for NTLM in a future if we want to
  gradually reduce it.
  
  Fixes #954
  
  Reported-by: János Fekete

- Revert "Proxy-Connection: stop sending this header by default"
  
  This reverts commit 113f04e664b16b944e64498a73a4dab990fe9a68.

- CURLOPT_PROXY.3: unsupported schemes cause errors now
  
  Follow-up to a96319ebb9 (document the new behavior)

- tests/README: mention nghttpx for HTTP/2 tests

- README.md: add our CII Best Practices badge

- proxy: polished the error message for unsupported schemes
  
  Follow up to a96319ebb93

- test219: verify unsupported scheme for proxies get rejected

- proxy: reject attempts to use unsupported proxy schemes
  
  I discovered some people have been using "https://example.com" style
  strings as proxy and it "works" (curl doesn't complain) because curl
  ignores unknown schemes and then assumes plain HTTP instead.
  
  I think this misleads users into believing curl uses HTTPS to proxies
  when it doesn't. Now curl rejects proxy strings using unsupported
  schemes instead of just ignoring and defaulting to HTTP.

- RELEASE-NOTES: synced with b7ee5316c2fd5b

Marc Hoersken (14 Aug 2016)
- socks.c: Correctly calculate position of port in response packet
  
  Third commit to fix issue #944 regarding SOCKS5 error handling.
  
  Reported-by: David Kalnischkies

- socks.c: Do not modify and invalidate calculated response length
  
  Second commit to fix issue #944 regarding SOCKS5 error handling.
  
  Reported-by: David Kalnischkies

- socks.c: Move error output after reading the whole response packet
  
  First commit to fix issue #944 regarding SOCKS5 error handling.
  
  Reported-by: David Kalnischkies

Daniel Stenberg (13 Aug 2016)
- [Ronnie Mose brought this change]

  MANUAL: Remove invalid link to LDAP documentation (#962)
  
  The server developer.netscape.com does not resolve into any
  ip address and can be removed.

Jay Satiro (13 Aug 2016)
- openssl: accept subjectAltName iPAddress if no dNSName match
  
  Undo change introduced in d4643d6 which caused iPAddress match to be
  ignored if dNSName was present but did not match.
  
  Also, if iPAddress is present but does not match, and dNSName is not
  present, fail as no-match. Prior to this change in such a case the CN
  would be checked for a match.
  
  Bug: https://github.com/curl/curl/issues/959
  Reported-by: wmsch@users.noreply.github.com

Daniel Stenberg (12 Aug 2016)
- [Dambaev Alexander brought this change]

  configure.ac: add zlib search with pkg-config
  
  Closes #956

- rtsp: ignore whitespace in session id
  
  Follow-up to e577c43bb to fix test case 569 brekage: stop the parser at
  whitespace as well.
  
  Help-by: Erik Janssen

- HTTP: retry failed HEAD requests too
  
  Mark's new document about HTTP Retries
  (https://mnot.github.io/I-D/httpbis-retry/) made me check our code and I
  spotted that we don't retry failed HEAD requests which seems totally
  inconsistent and I can't see any reason for that separate treatment.
  
  So, no separate treatment for HEAD starting now. A HTTP request sent
  over a reused connection that gets cut off before a single byte is
  received will be retried on a fresh connection.
  
  Made-aware-by: Mark Nottingham

- mk-ca-bundle.1: document -m, added in 1.26

- RELEASE-NOTES: synced with e577c43bb5

- [Erik Janssen brought this change]

  rtsp: accept any RTSP session id
  
  Makes libcurl work in communication with gstreamer-based RTSP
  servers. The original code validates the session id to be in accordance
  with the RFC. I think it is better not to do that:
  
  - For curl the actual content is a don't care.
  
  - The clarity of the RFC is debatable, is $ allowed or only as \$, that
    is imho not clear
  
  - Gstreamer seems to url-encode the session id but % is not allowed by
  the RFC
  
  - less code
  
  With this patch curl will correctly handle real-life lines like:
  Session: biTN4Kc.8%2B1w-AF.; timeout=60
  
  Bug: https://curl.haxx.se/mail/lib-2016-08/0076.html

- symbols-in-versions: add CURL_STRICTER
  
  Added in 5fce88aa8c12564

- [Simon Warta brought this change]

  winbuild: Allow changing C compiler via environment variable CC (#952)
  
  This makes it possible to use specific compilers or a cache.
  
  Sample use for clcache:
  set CC=clcache.bat
  nmake /f Makefile.vc DEBUG=no MODE=static VC=14 GEN_PDB=no

- LICENSE-MIXING.md: switched to markdown

- docs-make: have markdown files use .md

- curl.h: make CURL_NO_OLDIES define CURL_STRICTER

- HISTORY.md: use markdown extension

- SSLCERTS.md: renamed to markdown extension

- INTERNALS.md: use markdown extension for markdown content

- CONTRIBUTE.md: markdown extension

- CONTRIBUTE: changed to markdown

- CONTRIBUTE: refreshed

- TODO: added an SSH section and two SFTP things to do

- TODO: remove the 1.22 duplicated item

- TODO: move "CURLOPT_MAIL_CLIENT" to SMTP section

- TODO: API for URL parsing/splitting

- TODO: move QUIC to the HTTP section

- [Simon Warta brought this change]

  winbuild: Free name $(CC) in Makefile (#950)
  
  In the old line number 290, CC and CURL_CC had the same value. After
  that, /DCURL_STATICLIB was added to CC but not CURL_CC (intended?).
  
  This gets rid of the CC variable entirely. It is a first step to make it
  possible to manualyl set a CC variable in order to be able to change the
  compiler.

- TODO: Use huge HTTP/2 windows

- [Simon Warta brought this change]

  winbuild: Avoid setting redundant CFLAGS to compile commands (#949)
  
  $(CURL_CC) is always used with $(CURL_CFLAGS) appended, so before this,
  all arguments in CURL_CFLAGS have been added twice.

Jay Satiro (8 Aug 2016)
- cmake: Enable win32 threaded resolver by default
  
  - Turn on USE_THREADS_WIN32 in Windows if ares isn't on
  
  This change is similar to what we already do in the autotools build.

- cmake: Enable win32 large file support by default
  
  All compilers used by cmake in Windows should support large files.
  
  - Add test SIZEOF_OFF_T
  - Remove outdated test SIZEOF_CURL_OFF_T
  - Turn on USE_WIN32_LARGE_FILES in Windows
  - Check for 'Largefile' during the features output

Daniel Stenberg (7 Aug 2016)
- TODO: added several ideas, removed SPDY

- http2: always wait for readable socket
  
  Since the server can at any time send a HTTP/2 frame to us, we need to
  wait for the socket to be readable during all transfers so that we can
  act on incoming frames even when uploading etc.
  
  Reminded-by: Tatsuhiro Tsujikawa

- RELEASE-NOTES: synced with 7b4bf37a44791

- [Thomas Glanzmann brought this change]

  mbedtls: set debug threshold to 4 (verbose) when MBEDTLS_DEBUG is defined
  
  In order to make MBEDTLS_DEBUG work, the debug threshold must be unequal
  to 0.  This patch also adds a comment how mbedtls must be compiled in
  order to make debugging work, and explains the possible debug levels.

- CURLOPT_TCP_NODELAY: now enabled by default
  
  After a few wasted hours hunting down the reason for slowness during a
  TLS handshake that turned out to be because of TCP_NODELAY not being
  set, I think we have enough motivation to toggle the default for this
  option. We now enable TCP_NODELAY by default and allow applications to
  switch it off.
  
  This also makes --tcp-nodelay unnecessary, but --no-tcp-nodelay can be
  used to disable it.
  
  Thanks-to: Tim Rühsen
  Bug: https://curl.haxx.se/mail/lib-2016-06/0143.html

- [Serj Kalichev brought this change]

  TFTP: Fix upload problem with piped input
  
  When input stream for curl is stdin and input stream is not a file but
  generated by a script then curl can truncate data transfer to arbitrary
  size since a partial packet is treated as end of transfer by TFTP.
  
  Fixes #857

- mk-ca-bundle.pl: -m keeps ca cert meta data in output
  
  Makes the script pass on comments holding meta data to the output
  file. Like fingerprinters, issuer, date ranges etc.
  
  Closes #937

- multi: make Curl_expire() work with 0 ms timeouts
  
  Previously, passing a timeout of zero to Curl_expire() was a magic code
  for clearing all timeouts for the handle. That is now instead made with
  the new Curl_expire_clear() function and thus a 0 timeout is fine to set
  and will trigger a timeout ASAP.
  
  This will help removing short delays, in particular notable when doing
  HTTP/2.

- transfer: return without select when the read loop reached maxcount
  
  Regression added in 790d6de48515. The was then added to avoid one
  particular transfer to starve out others. But when aborting due to
  reading the maxcount, the connection must be marked to be read from
  again without first doing a select as for some protocols (like SFTP/SCP)
  the data may already have been read off the socket.
  
  Reported-by: Dan Donahue
  Bug: https://curl.haxx.se/mail/lib-2016-07/0057.html

Steve Holme (3 Aug 2016)
- [Bill Nagel brought this change]

  mbedtls: Added support for NTLM

Daniel Stenberg (3 Aug 2016)
- [Sergei Nikulov brought this change]

  travis: removed option to rebuild autotool from source
  
  Fixes #943

- bump: start working toward 7.50.2

Version 7.50.1 (3 Aug 2016)

Daniel Stenberg (3 Aug 2016)
- THANKS: 7 new contributors from the 7.50.1 release

- RELEASE-NOTES: 7.50.1

- TLS: only reuse connections with the same client cert
  
  CVE-2016-5420
  Bug: https://curl.haxx.se/docs/adv_20160803B.html

- TLS: switch off SSL session id when client cert is used
  
  CVE-2016-5419
  Bug: https://curl.haxx.se/docs/adv_20160803A.html
  Reported-by: Bru Rom
  Contributions-by: Eric Rescorla and Ray Satiro

- curl_multi_cleanup: clear connection pointer for easy handles
  
  CVE-2016-5421
  Bug: https://curl.haxx.se/docs/adv_20160803C.html
  Reported-by: Marcelo Echeverria and Fernando Muñoz

- KNOWN_BUGS: SOCKS proxy not working via IPv6
  
  Closes #835

- KNOWN_BUGS: CURLOPT_SEEKFUNCTION not called with CURLFORM_STREAM
  
  Closes #768

- KNOWN_BUGS: transfer-encoding: chunked in HTTP/2
  
  Closes #662

- TODO: Provide cmake config-file
  
  Closes #885

Patrick Monnerat (2 Aug 2016)
- os400: define BUILDING_LIBCURL in make script.

Daniel Stenberg (1 Aug 2016)
- RELEASE-NOTES: synced with aa9f536a18b

Jay Satiro (1 Aug 2016)
- [Thomas Glanzmann brought this change]

  mbedtls: Fix debug function name
  
  This patch is necessary so that curl compiles if MBEDTLS_DEBUG is
  defined.
  
  Bug: https://curl.haxx.se/mail/lib-2016-08/0001.html

Daniel Stenberg (1 Aug 2016)
- [Sergei Nikulov brought this change]

  travis: fix OSX build by re-installing libtool
  
  Apparently due to a broken homebrew install
  
  fixes #934
  Closes #939

- [Martin Vejnár brought this change]

  win32: fix a potential memory leak in Curl_load_library
  
  If a call to GetSystemDirectory fails, the `path` pointer that was
  previously allocated would be leaked. This makes sure that `path` is
  always freed.
  
  Closes #938

- include: revert 9adf3c4 and make public types void * again
  
  Many applications assume the actual contents of the public types and use
  that do for example forward declarations (saving them from including our
  public header) which then breaks when we switch from void * to a struct
  *.
  
  I'm not convinced we were wrong, but since this practise seems
  widespread enough I'm willing to (partly) step down.
  
  Now libcurl uses the struct itself when it is built and it allows
  applications to use the struct type if CURL_STRICTER is defined at the
  time of the #include.
  
  Reported-by: Peter Frühberger
  Fixes #926

Jay Satiro (28 Jul 2016)
- [Yonggang Luo brought this change]

  cmake: Fix for schannel support
  
  The check_library_exists_concat do not check crypt32 library properly.
  So include it directly.
  
  Bug: https://github.com/curl/curl/pull/917
  Reported-by: Yonggang Luo
  
  Bug: https://github.com/curl/curl/issues/935
  Reported-by: Alain Danteny

- Revert "travis: Install libtool for OS X builds"
  
  Didn't work.
  
  This reverts commit 50723585ed380744358de054e2a55dccee65dfd7.

- travis: Install libtool for OS X builds
  
  CI is failing due to missing libtoolize, so I'm trying this.

Daniel Stenberg (26 Jul 2016)
- [Viktor Szakats brought this change]

  TODO: minor typo in last commit
  
  merged #931

- TODO: Timeout idle connections from the pool

Patrick Monnerat (25 Jul 2016)
- os400: minimum supported OS version: V6R1M0.
  Do not log compilation informational messages.

Jay Satiro (24 Jul 2016)
- tests: Fix for http/2 feature
  
  Bug: https://curl.haxx.se/mail/lib-2016-07/0070.html
  Reported-by: Paul Howarth

Steve Holme (23 Jul 2016)
- README: Mention wolfSSL in the 'Dependencies' section

- vauth.h: No need to query HAVE_GSSAPI || USE_WINDOWS_SSPI for SPNEGO
  
  As SPNEGO is only defined when these pre-processor variables are defined
  there is no need to query them explicitly.

- spnego: Corrected miss-placed * in Curl_auth_spnego_cleanup() declaration
  
  Typo introduced in commit ad5e9bfd5d.

Daniel Stenberg (22 Jul 2016)
- SECURITY: mention how to get windows-specific CVEs
  
  ... and make the distros link a proper link

Dan Fandrich (21 Jul 2016)
- test558: fix test by stripping file paths from FD lines

Kamil Dudka (21 Jul 2016)
- tests: distribute the http2-server.pl script, too

- docs: distribute the CURLINFO_HTTP_VERSION(3) man page, too

Daniel Stenberg (21 Jul 2016)
- bump: start working on 7.50.1

Version 7.50.0 (21 Jul 2016)

Daniel Stenberg (21 Jul 2016)
- RELEASE-NOTES: version 7.50.0 ready

- THANKS: 13 new contributors from the 7.50.0 release

Jay Satiro (21 Jul 2016)
- winbuild: fix embedded manifest option
  
  Embedded manifest option didn't work due to typo.
  
  Reported-by: Stefan Kanthak

- vauth: Fix memleak by freeing credentials if out of memory
  
  This is a follow up to the parent commit dcdd4be which fixes one leak
  but creates another by failing to free the credentials handle if out of
  memory. Also there's a second location a few lines down where we fail to
  do same. This commit fixes both of those issues.

Daniel Stenberg (20 Jul 2016)
- [Saurav Babu brought this change]

  vauth: Fixed memory leak due to function returning without free
  
  This patch allocates memory to "output_token" only when it is required
  so that memory is not leaked if function returns.

- test558: updated after ipv6-check move
  
  Follow-up commit to c50980807c5 to make this test pass.

Jay Satiro (20 Jul 2016)
- connect: disable TFO on Linux when using SSL
  
  - Linux TFO + TLS is not implemented yet.
  
  Bug: https://github.com/curl/curl/issues/907

Daniel Stenberg (19 Jul 2016)
- ROADMAP: QUIC and TLS 1.3

- RELEASE-NOTES: synced with c50980807c5

Jay Satiro (18 Jul 2016)
- [Brian Prodoehl brought this change]

  curl_global_init: Check if IPv6 works
  
  - Curl_ipv6works() is not thread-safe until after the first call, so
  call it once during global init to avoid a possible race condition.
  
  Bug: https://github.com/curl/curl/issues/915
  PR: https://github.com/curl/curl/pull/918

- [Timothy Polich brought this change]

  CURLMOPT_SOCKETFUNCTION.3: fix typo
  
  Closes https://github.com/curl/curl/pull/914

- [Miroslav Franc brought this change]

  library: Fix memory leaks found during static analysis
  
  Closes https://github.com/curl/curl/pull/913

- [Viktor Szakats brought this change]

  cookie.c: Fix misleading indentation
  
  Closes https://github.com/curl/curl/pull/911

- FAQ: Update FTP directory listing section for MLSD command
  
  Explain how some FTP servers support the machine readable listing
  format MLSD from RFC 3659 and compare it to LIST.
  
  Ref: https://github.com/curl/curl/issues/906

Daniel Stenberg (1 Jul 2016)
- [Sergei Nikulov brought this change]

  Appveyor: Updates for options - CURL_STATICLIB/BUILD_TESTING
  
  Closes #892

- TODO: 17.4 also brings more HTTP/2 support

- TODO: try next proxy if one doesn't work
  
  Closes #896

- conn: don't free easy handle data in handler->disconnect
  
  Reported-by: Gou Lingfeng
  Bug: https://curl.haxx.se/mail/lib-2016-06/0139.html

- test1244: test different proxy ports same URL

- curl_global_init.3: improved formatting of the flags

- curl_global_init.3: expand on the SSL and WIN32 bits purpose
  
  Reported-by: Richard Gray
  Bug: https://curl.haxx.se/mail/lib-2016-06/0136.html

- [Michael Kaufmann brought this change]

  cleanup: minor code cleanup in Curl_http_readwrite_headers()
  
  - the expression of an 'if' was always true
  - a 'while' contained a condition that was always true
  - use 'if(k->exp100 > EXP100_SEND_DATA)' instead of 'if(k->exp100)'
  - fixed a typo
  
  Closes #889

- SFTP: set a generic error when no SFTP one exists...
  
  ... as otherwise we could get a 0 which would count as no error and we'd
  wrongly continue and could end up segfaulting.
  
  Bug: https://curl.haxx.se/mail/lib-2016-06/0052.html
  Reported-by: 暖和的和暖

- ROADMAP: http2 tests are merged, mention http2 perf

- docs/README.md: to render nicer pages on github
  
  ... as previously the README.cmake would be picked and put at the bottom
  of the docs page there and it wasn't very representative!

- README.md: change host name for the svg logo
  
  rawgit.com asks to use the domain cdn.rawgit.com for production
  
  See #900

- [Viktor Szakats brought this change]

  README.md: use the SVG logo

- README.md: logo on top!

- KNOWN_BUGS: 3.4 POP3 expects "CRLF.CRLF" eob for some
  
  Closes #740

- RELEASE-NOTES: synced with d61c80515aa8

- [Michael Osipov brought this change]

  acinclude.m4: improve autodetection of CA bundle on FreeBSD
  
  The FreeBSD Port security/ca_root_nss installs the Mozilla NSS CA bundle
  to /usr/local/share/certs/ca-root-nss.crt. Use this bundle in the
  discovery process.
  
  This change also removes the former FreeBSD path that has been obsolete
  for 8 years since this FreeBSD ports commit:
  https://svnweb.freebsd.org/ports/head/security/?view=revision&revision=215953
  
  Closes #894

- configure: don't specify .lib for libs on windows
  
  Another follow up for crypt32.lib linking with winssl

- configure: fix winssl LIBS change typo
  
  follow-up from 120bf29e

- TODO: "TCP Fast Open" is done, add monitor pool connections

- configure: add crypt32.lib for winssl builds
  
  Necessary since 6cabd78531f

- Makefile.vc: link with crypt32.lib for winssl builds
  
  Necessary since 6cabd78531f
  
  Fixes #853

- [Joel Depooter brought this change]

  VC: Add crypt32.lib to Visual Sudio project template files
  
  Closes #854

- vc: fix the build for schannel certinfo support
  
  Broken since 6cabd785, which adds use of the Curl_extract_certinfo
  function from the x509asn1.c file.

- typedefs: use the full structs in internal code...
  
  ... and save the typedef'ed names for headers and external APIs.

- internals: rename the SessionHandle struct to Curl_easy

- headers: forward declare CURL, CURLM and CURLSH as structs
  
  Instead of typedef'ing to void, typedef to their corresponding actual
  struct names to allow compilers to type-check.
  
  Assisted-by: Reinhard Max

Jay Satiro (22 Jun 2016)
- vtls: Only call add/getsession if session id is enabled
  
  Prior to this change we called Curl_ssl_getsessionid and
  Curl_ssl_addsessionid regardless of whether session ID reusing was
  enabled. According to comments that is in case session ID reuse was
  disabled but then later enabled.
  
  The old way was not intuitive and probably not something users expected.
  When a user disables session ID caching I'd guess they don't expect the
  session ID to be cached anyway in case the caching is later enabled.

Daniel Stenberg (22 Jun 2016)
- curl.1: the used progress meter suffix is k in lower case
  
  Closes #883

- [Sergei Nikulov brought this change]

  cmake: now using BUILD_TESTING=ON/OFF
  
  CMake build now using BUILD_TESTING=ON/OFF (default is OFF) to build
  tests and enabling CTest integration. Options BUILD_CURL_TESTS and
  BUILD_DASHBOARD_REPORTS was removed.
  
  Closes #882
  
  Reviewed-by: Brad King

- [Michael Kaufmann brought this change]

  cleanup: fix method names in code comments
  
  Closes #887

Kamil Dudka (21 Jun 2016)
- curl-compilers.m4: improve detection of GCC's -fvisibility= flag
  
  Some builds of GCC produce output on both stdout and stderr when --help
  --verbose is used.  The 2>&1 redirection caused them to be arbitrarily
  interleaved with each other because of stream buffering.  Consequently,
  grep failed to match the fvisibility= string in the mixed output, even
  though the string was present in GCC's standard output.
  
  This led to silently disabling symbol hiding in some builds of curl.

Daniel Stenberg (19 Jun 2016)
- tests: fix the HTTP/2 tests
  
  The HTTP/2 tests brought with commit bf05606ef1f were using the internal
  name 'http2' for the HTTP/2 server, while in fact that name was already
  used for the second instance of the HTTP server. This made tests using
  the second instance (like test 2050) fail after a HTTP/2 test had run.
  
  The server is now known as HTTP/2 internally and within the <server>
  section in test cases. 1700, 1701 and 1702 were updated accordingly.

- openssl: use more 'const' to fix build warnings with 1.1.0 branch

- curl.1: missed 'T' in the progress unit suffixes

- curl.1: mention the unix for the progress meter

Patrick Monnerat (16 Jun 2016)
- os400: add new definitions to ILE/RPG binding.

Daniel Stenberg (16 Jun 2016)
- openssl: fix cert check with non-DNS name fields present
  
  Regression introduced in 5f5b62635 (released in 7.48.0)
  
  Reported-by: Fabian Ruff
  Fixes #875

Dan Fandrich (16 Jun 2016)
- axtls: Use Curl_wait_ms instead of the less-portable usleep

- axtls: Fixed compile after compile 31c521b0

- tests: Added HTTP proxy keywords to tests 1141 & 1142

Jay Satiro (15 Jun 2016)
- [Sergei Nikulov brought this change]

  cmake: Fix build with winldap
  
  Bug: https://github.com/curl/curl/pull/874
  Reported-by: Sergei Nikulov

- CURLOPT_POSTFIELDS.3: Clarify what happens when set empty
  
  When CURLOPT_POSTFIELDS is set to an empty string libcurl will send a
  zero-byte POST. Prior to this change it was documented as sending data
  from the read callback.
  
  This also changes the wording of what happens when empty or NULL so that
  it's hopefully easier to understand for people whose primary language
  isn't English.
  
  Bug: https://github.com/curl/curl/issues/862
  Reported-by: Askar Safin

- [Michael Wallner brought this change]

  curl_multi_socket_action.3: Fix rewording
  
  - Remove some erroneous text.
  
  Closes https://github.com/curl/curl/pull/865

- [Luo Jinghua brought this change]

  resolve: enable protocol family logic for synthesized IPv6
  
  - Enable protocol family logic for IPv6 resolves even when support
  for synthesized addresses is enabled.
  
  This is a follow up to the parent commit that added support for
  synthesized IPv6 addresses from IPv4 on iOS/OS X. The protocol family
  logic needed for IPv6 was inadvertently excluded if support for
  synthesized addresses was enabled.
  
  Bug: https://github.com/curl/curl/issues/863
  Ref: https://github.com/curl/curl/pull/866
  Ref: https://github.com/curl/curl/pull/867

Daniel Stenberg (7 Jun 2016)
- [Luo Jinghua brought this change]

  resolve: add support for IPv6 DNS64/NAT64 Networks on OS X + iOS
  
  Use getaddrinfo() to resolve the IPv4 address literal on iOS/Mac OS X.
  If the current network interface doesn’t support IPv4, but supports
  IPv6, NAT64, and DNS64.
  
  Closes #866
  Fixes #863

- tests: two more HTTP/2 tests
  
  1701 and 1702

- runtests: don't display logs when http2 server fails to start

- runtests: make stripfile work on stdout as well
  
  ... and have test 1700 use that to strip out the nghttpx server: headers

- http2-tests: test1700 is the first real HTTP/2 test
  
  It requires that 'nghttpx' is in the PATH, and it will run the tests
  using nghttpx as a front-end proxy in front of the standard HTTP/1 test
  server. This uses HTTP/2 over plain TCP.
  
  If you like me have nghttpx installed in a custom path, you can run test 1700
  like this:
  
  $ PATH=$PATH:$HOME/build-nghttp2/bin/ ./runtests.pl 1700

- RELEASE-NOTES: synced with 34855feeb4c299

Steve Holme (6 Jun 2016)
- schannel: Disable ALPN on Windows < 8.1
  
  Calling QueryContextAttributes with SECPKG_ATTR_APPLICATION_PROTOCOL
  fails on Windows < 8.1 so we need to disable ALPN on these OS versions.
  
  Inspiration provide by: Daniel Seither
  
  Closes #848
  Fixes #840

Jay Satiro (5 Jun 2016)
- checksrc: Add LoadLibrary to the banned functions list
  
  LoadLibrary was supplanted by Curl_load_library for security
  reasons in 6df916d.

- http: Fix HTTP/2 connection reuse
  
  - Change the parser to not require a minor version for HTTP/2.
  
  HTTP/2 connection reuse broke when we changed from HTTP/2.0 to HTTP/2
  in 8243a95 because the parser still expected a minor version.
  
  Bug: https://github.com/curl/curl/issues/855
  Reported-by: Andrew Robbins, Frank Gevaerts

Steve Holme (4 Jun 2016)
- connect.c: Fixed compilation warning from commit 332e8d6164
  
  connect.c:952:5: warning: suggest explicit braces to avoid ambiguous 'else'

- win32: Used centralised verify windows version function
  
  Closes #845

- win32: Added verify windows version functionality

- win32: Introduced centralised verify windows version function

Kamil Dudka (3 Jun 2016)
- tool_urlglob: fix off-by-one error in glob_parse()
  
  ... causing SIGSEGV while parsing URL with too many globs.
  Minimal example:
  
  $ curl $(for i in $(seq 101); do printf '{a}'; done)
  
  Reported-by: Romain Coltel
  Bug: https://bugzilla.redhat.com/1340757

Daniel Stenberg (1 Jun 2016)
- [Benjamin Kircher brought this change]

  libcurl-multi.3: fix small typo
  
  Closes #850

- [Viktor Szakats brought this change]

  makefile.m32: add crypt32 for winssl builds
  
  Dependency added by 6cabd78
  
  Closes #849

- [Ivan Avdeev brought this change]

  vtls: fix ssl session cache race condition
  
  Sessionid cache management is inseparable from managing individual
  session lifetimes. E.g. for reference-counted sessions (like those in
  SChannel and OpenSSL engines) every session addition and removal
  should be accompanied with refcount increment and decrement
  respectively. Failing to do so synchronously leads to a race condition
  that causes symptoms like use-after-free and memory corruption.
  This commit:
   - makes existing session cache locking explicit, thus allowing
     individual engines to manage lock's scope.
   - fixes OpenSSL and SChannel engines by putting refcount management
     inside this lock's scope in relevant places.
   - adds these explicit locking calls to other engines that use
     sessionid cache to accommodate for this change. Note, however,
     that it is unknown whether any of these engines could also have
     this race.
  
  Bug: https://github.com/curl/curl/issues/815
  Fixes #815
  Closes #847

- [Andrew Kurushin brought this change]

  schannel: add CURLOPT_CERTINFO support
  
  Closes #822

- RELEASE-NOTES: synced with 142ee9fa15002315

- openssl: rename the private SSL_strerror
  
  ... to make it not look like an OpenSSL function

- [Michael Kaufmann brought this change]

  openssl: Use correct buffer sizes for error messages
  
  Closes #844

- curl: fix -q [regression]
  
  This broke in 7.49.0 with commit e200034425a7625
  
  Fixes #842

- URL parser: allow URLs to use one, two or three slashes
  
  Mostly in order to support broken web sites that redirect to broken URLs
  that are accepted by browsers.
  
  Browsers are typically even more leniant than this as the WHATWG URL
  spec they should allow an _infinite_ amount. I tested 8000 slashes with
  Firefox and it just worked.
  
  Added test case 1141, 1142 and 1143 to verify the new parser.
  
  Closes #791

- [Renaud Lehoux brought this change]

  cmake: Added missing mbedTLS support
  
  Closes #837

- [Renaud Lehoux brought this change]

  mbedtls: removed unused variables
  
  Closes #838

- [Frank Gevaerts brought this change]

  http: add CURLINFO_HTTP_VERSION and %{http_version}
  
  Adds access to the effectively used http version to both libcurl and
  curl.
  
  Closes #799

- bump: start the journey toward 7.50.0

- [Marcel Raad brought this change]

  openssl: fix build with OPENSSL_NO_COMP
  
  With OPENSSL_NO_COMP defined, there is no function
  SSL_COMP_free_compression_methods
  
  Closes #836

- [Gisle Vanem brought this change]

  memdebug: fix MSVC crash with -DMEMDEBUG_LOG_SYNC
  
  Fixes #828

- [Jonathan brought this change]

  README.md: polish
  
  Closes #834

- RELEASE-NOTES: fix vuln link

Version 7.49.1 (30 May 2016)

Daniel Stenberg (30 May 2016)
- RELEASE-NOTES: 7.49.1

- [Steve Holme brought this change]

  loadlibrary: Only load system DLLs from the system directory
  
  Inspiration provided by: Daniel Stenberg and Ray Satiro
  
  Bug: https://curl.haxx.se/docs/adv_20160530.html
  
  Ref: Windows DLL hijacking with curl, CVE-2016-4802

- ssh: fix version number check typo

Jay Satiro (29 May 2016)
- curl_share_setopt.3: Add min ver needed for ssl session lock
  
  Bug: https://github.com/curl/curl/issues/826
  Reported-by: Michael Wallner

Daniel Stenberg (29 May 2016)
- ssh: fix build for libssh2 before 1.2.6
  
  The statvfs functionality was added to libssh2 in that version, so we
  switch off that functionality when built with older libraries.
  
  Fixes #831

- mbedtls: fix includes so snprintf() works
  
  Regression from the previous *printf() rearrangements, this file missed to
  include the correct header to make sure snprintf() works universally.
  
  Reported-by: Moti Avrahami
  Bug: https://curl.haxx.se/mail/lib-2016-05/0196.html

Steve Holme (23 May 2016)
- checksrc.pl: Added variants of strcat() & strncat() to banned function list
  
  Added support for checking the tchar, unicode and mbcs variants of
  strcat() and strncat() in the banned function list.

Daniel Stenberg (23 May 2016)
- smtp: minor ident (white space) fixes

- THANKS: updated after script fixes
  
  Now giving credit properly to github user names, fixed some UTF-8 issues
  and added names discovered when contrithanks was improved.

- THANKS-filter: more name cleanups

- contrithanks.sh: exclude existing names case insensitively

- contrithanks.sh: use same grep pattern and -a flag as contributors.sh

- contributors.sh: better grep pattern, use grep -a

- THANKS-filter: fix more names

- contrithanks.sh: do the same github fix as contributors.sh
  
  from 1577bfa35ba

Jay Satiro (23 May 2016)
- contributors: Show GitHub username if real name unknown
  
  Prior to this change if a GitHub contributor's real name was unknown
  they would be omitted from the list.
  
  Bug: https://github.com/curl/curl/issues/824

Daniel Stenberg (21 May 2016)
- RELEASE-NOTES: synced with 3caaeffbe8ded4

Jay Satiro (20 May 2016)
- openssl: cleanup must free compression methods
  
  - Free compression methods if OpenSSL 1.0.2 to avoid a memory leak.
  
  Bug: https://github.com/curl/curl/issues/817
  Reported-by: jveazey@users.noreply.github.com

Daniel Stenberg (20 May 2016)
- [Gisle Vanem brought this change]

  curl_multibyte: fix compiler error
  
  While compiling lib/curl_multibyte.c with '-DUSE_WIN32_IDN' etc. I was
  getting:
  
  f:\mingw32\src\inet\curl\lib\memdebug.h(38): error C2054: expected '('
  to follow 'CURL_EXTERN'
  
  f:\mingw32\src\inet\curl\lib\memdebug.h(38): error C2085:
  'curl_domalloc': not in formal parameter list

- THANKS-filter: make Jan-E get proper credit

- [Jan-E brought this change]

  winbuild/Makefile.vc: Fix check on SSL, MBEDTLS, WINSSL exclusivity
  
  Closes #818

- [Alexander Traud brought this change]

  libcurl.m4: Avoid obsolete warning
  
  Closes #821

Jay Satiro (20 May 2016)
- [Michael Kaufmann brought this change]

  CURLOPT_CONNECT_TO.3: user must not free the list prematurely
  
  The connect-to list isn't copied so as long as the handle may be used
  for a transfer the list must be valid.
  
  Bug: https://github.com/curl/curl/pull/819
  Reported-by: Michael Kaufmann

Daniel Stenberg (19 May 2016)
- RELEASE-NOTES: synced with 48114a8634242c

- openssl: ERR_remove_thread_state() is deprecated in latest 1.1.0
  
  See OpenSSL commit 21e001747d4a

- http2: use HTTP/2 in the HTTP/1.1-alike header
  
  ... when generating them, not "2.0" as the protocol is called just
  HTTP/2 and nothing else.

Jay Satiro (19 May 2016)
- dist: include curl_multi_socket_all.3
  
  Closes https://github.com/curl/curl/pull/816

Steve Holme (18 May 2016)
- bump: Start work on 7.49.1

Daniel Stenberg (18 May 2016)
- curlbuild.h.dist: check __LP64__ as well to fix MIPS build
  
  The preprocessor check that sets up the 32bit defines for non-configure
  builds didn't work properly for MIPS systems as __mips__ is defined for
  both 32bit and 64bit. Now __LP64__ is also checked and indicates 64bit.
  
  Reported-by: Tomas Jakobsson
  Fixes #813

- [Marcel Raad brought this change]

  schannel: fix compile break with MSVC XP toolset
  
  For the Windows XP toolset of Visual C++ 2013/2015, the old Windows SDK
  7.1 is used. In this case, _USING_V110_SDK71_ is defined.
  
  Closes #812

- dist: include CHECKSRC.md
  
  Reported-by: Paul Howarth
  Bug: https://curl.haxx.se/mail/lib-2016-05/0116.html

- test/Makefile.am: include manpage-scan.pl and nroff-scan.pl in dist
  
  Reported-by: Ray Satiro
  Bug: https://curl.haxx.se/mail/lib-2016-05/0113.html

Version 7.49.0 (17 May 2016)

Daniel Stenberg (17 May 2016)
- THANKS: 24 new names from 7.49.0 release notes

- RELEASE-NOTES: 7.49.0

- mbedtls/polarssl: set "hostname" unconditionally
  
  ...as otherwise the TLS libs will skip the CN/SAN check and just allow
  connection to any server. curl previously skipped this function when SNI
  wasn't used or when connecting to an IP address specified host.
  
  CVE-2016-3739
  
  Bug: https://curl.haxx.se/docs/adv_20160518A.html
  Reported-by: Moti Avrahami

- [Frank Gevaerts brought this change]

  CURLOPT_RESOLVE.3: fix typo
  
  Closes #811

- docs: CURLOPT_RESOLVE overrides CURLOPT_IPRESOLVE

- KNOWN_BUGS: GnuTLS backend skips really long certificate fields
  
  Closes #762

- CURLOPT_HTTPPOST.3: the data needs to be around while in use

- openssl: get_cert_chain: fix NULL dereference
  
  CID 1361815: Explicit null dereferenced (FORWARD_NULL)

- openssl: get_cert_chain: avoid NULL dereference
  
  CID 1361811: Explicit null dereferenced (FORWARD_NULL)

- dprintf_formatf: fix (false?) Coverity warning
  
  CID 1024412: Memory - illegal accesses (OVERRUN). Claimed to happen when
  we run over 'workend' but the condition says <= workend and for all I
  can see it should be safe. Compensating for the warning by adding a byte
  margin in the buffer.
  
  Also, removed the extra brace level indentation in the code and made it
  so that 'workend' is only assigned once within the function.

- RELEASE-NOTES: synced with 2dcb5adc72d6

- THANKS-filter: fixed Jonathan Cardoso

Jay Satiro (15 May 2016)
- ftp: fix incorrect out-of-memory code in Curl_pretransfer
  
  - Return value type must match function type.
  
  s/CURLM_OUT_OF_MEMORY/CURLE_OUT_OF_MEMORY/
  
  Caught by Travis CI

Daniel Stenberg (15 May 2016)
- ftp wildcard: segfault due to init only in multi_perform
  
  The proper FTP wildcard init is now more properly done in Curl_pretransfer()
  and the corresponding cleanup in Curl_close().
  
  The previous place of init/cleanup code made the internal pointer to be NULL
  when this feature was used with the multi_socket() API, as it was made within
  the curl_multi_perform() function.
  
  Reported-by: Jonathan Cardoso Machado
  Fixes #800

Jay Satiro (13 May 2016)
- libcurl-tlibcurl-thread: Update OpenSSL links
  
  Because the old OpenSSL link now redirects to their master documentation
  (currently 1.1.0), which does not document the required actions for
  OpenSSL <= 1.0.2.

Daniel Stenberg (13 May 2016)
- [Viktor Szakats brought this change]

  darwinssl.c: fix OS X codename typo in comment

- RELEASE-NOTES: synced with 68701e51c1f7
  
  Added 8 bug fixes and 5 more contrbutors

- [Jay Satiro brought this change]

  mprintf: Fix processing of width and prec args
  
  Prior to this change a width arg could be erroneously output, and also
  width and precision args could not be used together without crashing.
  
  "%0*d%s", 2, 9, "foo"
  
  Before: "092"
  After: "09foo"
  
  "%*.*s", 5, 2, "foo"
  
  Before: crash
  After: "   fo"
  
  Test 557 is updated to verify this and more

- [Michael Kaufmann brought this change]

  ConnectionExists: follow-up fix for proxy re-use
  
  Follow-up commit to 5823179
  
  Closes #648

- [Per Malmberg brought this change]

  darwinssl: fix certificate verification disable on OS X 10.8
  
  The new way of disabling certificate verification doesn't work on
  Mountain Lion (OS X 10.8) so we need to use the old way in that version
  too. I've tested this solution on versions 10.7.5, 10.8, 10.9, 10.10.2
  and 10.11.
  
  Closes #802

- [Cory Benfield brought this change]

  http2: Add space between colon and header value
  
  curl's representation of HTTP/2 responses involves transforming the
  response to a format that is similar to HTTP/1.1. Prior to this change,
  curl would do this by separating header names and values with only a
  colon, without introducing a space after the colon.
  
  While this is technically a valid way to represent a HTTP/1.1 header
  block, it is much more common to see a space following the colon. This
  change introduces that space, to ensure that incautious tools are safely
  able to parse the header block.
  
  This also ensures that the difference between the HTTP/1.1 and HTTP/2
  response layout is as minimal as possible.
  
  Bug: https://github.com/curl/curl/issues/797
  
  Closes #798
  Fixes #797

Kamil Dudka (12 May 2016)
- openssl: fix compile-time warning in Curl_ossl_check_cxn()
  
  ... introduced in curl-7_48_0-293-g2968c83:
  
  Error: COMPILER_WARNING:
  lib/vtls/openssl.c: scope_hint: In function ‘Curl_ossl_check_cxn’
  lib/vtls/openssl.c:767:15: warning: conversion to ‘int’ from ‘ssize_t’
  may alter its value [-Wconversion]

Jay Satiro (11 May 2016)
- openssl: stricter connection check function
  
  - In the case of recv error, limit returning 'connection still in place'
  to EINPROGRESS, EAGAIN and EWOULDBLOCK.
  
  This is an improvement on the parent commit which changed the openssl
  connection check to use recv MSG_PEEK instead of SSL_peek.
  
  Ref: https://github.com/curl/curl/commit/856baf5#comments

Daniel Stenberg (11 May 2016)
- [Anders Bakken brought this change]

  TLS: SSL_peek is not a const operation
  
  Calling SSL_peek can cause bytes to be read from the raw socket which in
  turn can upset the select machinery that determines whether there's data
  available on the socket.
  
  Since Curl_ossl_check_cxn only tries to determine whether the socket is
  alive and doesn't actually need to see the bytes SSL_peek seems like
  the wrong function to call.
  
  We're able to occasionally reproduce a connect timeout due to this
  bug. What happens is that Curl doesn't know to call SSL_connect again
  after the peek happens since data is buffered in the SSL buffer and thus
  select won't fire for this socket.
  
  Closes #795

Jay Satiro (9 May 2016)
- [Daniel Stenberg brought this change]

  TLS: move the ALPN/NPN enable bits to the connection
  
  Only protocols that actually have a protocol registered for ALPN and NPN
  should try to get that negotiated in the TLS handshake. That is only
  HTTPS (well, http/1.1 and http/2) right now. Previously ALPN and NPN
  would wrongly be used in all handshakes if libcurl was built with it
  enabled.
  
  Reported-by: Jay Satiro
  
  Fixes #789

Daniel Stenberg (8 May 2016)
- libcurl-thread.3: openssl 1.1.0 is safe, and so is boringssl

- [Antonio Larrosa brought this change]

  connect: fix invalid "Network is unreachable" errors
  
  Sometimes, in systems with both ipv4 and ipv6 addresses but where the
  network doesn't support ipv6, Curl_is_connected returns an error
  (intermittently) even if the ipv4 socket connects successfully.
  
  This happens because there's a for-loop that iterates on the sockets but
  the error variable is not resetted when the ipv4 is checked and is ok.
  
  This patch fixes this problem by setting error to 0 when checking the
  second socket and not having a result yet.
  
  Fixes #794

Jay Satiro (5 May 2016)
- FAQ: refer to thread safety guidelines

Daniel Stenberg (3 May 2016)
- connections: non-HTTP proxies on different ports aren't reused either
  
  Reported-by: Oleg Pudeyev and fuchaoqun
  
  Fixes #648

- http: make sure a blank header overrides accept_decoding
  
  Reported-by: rcanavan
  Assisted-by: Isaac Boukris
  Closes #785

- CHECKSRC.md: clarified, explained the whitelist file

- nroff-scan.pl: verify that references are made with \fI

- docs: unified man page references to use \fI

- TODO: 17.14 --fail without --location should treat 3xx as a failure
  
  Closes #727

- RELEASE-NOTES: synced with 7987f5cb14d

- [Isaac Boukris brought this change]

  CURLOPT_ACCEPT_ENCODING.3: Follow-up clarification
  
  Mention possible content-length mismatch with sum of bytes reported
  by write callbacks when auto decoding is enabled.
  
  See #785

- test1140: run nroff-scan to verify man pages

- nroff-scan.pl: verify the .BR references as well

- CURLOPT_CONV_TO_NETWORK_FUNCTION.3: fix bad man page reference

- CURLOPT_BUFFERSIZE.3: fix reference to CURLOPT_MAX_RECV_SPEED_LARGE

- curl_easy_pause.3: fix man page reference

Jay Satiro (1 May 2016)
- tool_cb_hdr: Fix --remote-header-name with schemeless URL
  
  - Move the existing scheme check from tool_operate.
  
  In the case of --remote-header-name we want to parse Content-disposition
  for a filename, but only if the scheme is http or https. A recent
  adjustment 0dc4d8e was made to account for schemeless URLs however it's
  not 100% accurate. To remedy that I've moved the scheme check to the
  header callback, since at that point the library has already determined
  the scheme.
  
  Bug: https://github.com/curl/curl/issues/760
  Reported-by: Kai Noda

Daniel Stenberg (1 May 2016)
- tls: make setting pinnedkey option fail if not supported
  
  to make it obvious to users trying to use the feature with TLS backends
  not supporting it.
  
  Discussed in #781
  Reported-by: Travis Burtrum

- nroff-scan.pl: verifies nroff pages
  
  ... not used by any test yet but can be used stand-alone.

- opts: fix broken/bad references

- [Michael Kaufmann brought this change]

  docs: fix bugs in CURLOPT_HTTP_VERSION.3 and CURLOPT_PIPEWAIT.3
  
  Closes #786

- CURLOPT_ACCEPT_ENCODING.3: clarified
  
  As discussed in #785

- curl.1: --mail-rcpt can be used multiple times
  
  Reported-by: mgendre
  Closes #784

- [Karlson2k brought this change]

  tests: Use 'pathhelp' for paths conversions in secureserver.pl
  
  Closes #675

- [Karlson2k brought this change]

  tests: Use 'pathhelp' for paths conversions in sshserver.pl

- [Karlson2k brought this change]

  tests: Use 'pathhelp' for current path in runtests.pl

- [Karlson2k brought this change]

  tests: pathhelp.pm to process paths on Msys/Cygwin

- lib: include curl_printf.h as one of the last headers
  
  curl_printf.h defines printf to curl_mprintf, etc. This can cause
  problems with external headers which may use
  __attribute__((format(printf, ...))) markers etc.
  
  To avoid that they cause problems with system includes, we include
  curl_printf.h after any system headers. That makes the three last
  headers to always be, and we keep them in this order:
  
   curl_printf.h
   curl_memory.h
   memdebug.h
  
  None of them include system headers, they all do funny #defines.
  
  Reported-by: David Benjamin
  
  Fixes #743

- memdebug.h: remove inclusion of other headers
  
  Mostly because they're not needed, because memdebug.h is always included
  last of all headers so the others already included the correct ones.
  
  But also, starting now we don't want this to accidentally include any
  system headers, as the header included _before_ this header may add
  defines and other fun stuff that we won't want used in system includes.

- [Jay Satiro brought this change]

  curl -J: make it work even without http:// scheme on URL
  
  It does open up a miniscule risk that one of the other protocols that
  libcurl could use would send back a Content-Disposition header and then
  curl would act on it even if not HTTP.
  
  A future mitigation for this risk would be to allow the callback to ask
  libcurl which protocol is being used.
  
  Verified with test 1312
  
  Closes #760

- manpage-scan.pl: also verify the command line option docs
  
  This script now also scans src/tool_getparam.c, docs/curl.1 and
  src/tool_help.c and will warn if any of them lists a command line option
  not mentioned in one of the other places.

- curl: show the long option version of -q in the -h list

- curl: remove "--socks" as "--socks5" turned 8
  
  In commit 2e42b0a2524 (Jan 2008) we made the option "--socks" deprecated
  and it has not been documented since. The more explicit socks options
  (like --socks4 or --socks5) should be used.

- curl.1: document the deprecated --ftp-ssl option

- curl: remove --http-request
  
  It was mentioned as deprecated already in commit ae1912cb0d4 from
  1999. It has not been documented in this millennium.

- curl: mention --ntlm-wb in -h list

- curl: -h output lacked --proxy-header

- curl.1: document --ntlm-wb

- curl.1: document the long format of -q: --disable

- curl.1: mention the deprecated --krb4 option

- curl.1: document --ftp-ssl-reqd
  
  Even if deprecated, document it so that people will find it as old
  scripts may still use it.

- curl: use --telnet-option as documented
  
  The code said "telnet-options" but no documentation ever said so. It
  worked fine since the code is fine with a unique match of the first
  part.

- getparam: remove support for --ftpport
  
  It has been deprecated and undocumented since commit ad5ead8bed7 (Dec
  2003). --ftp-port is the proper long option name.

- curl: make --disable work as long form of -q
  
  To make the aliases list reflect reality.

- aliases: remove trailing space from capath string

- cmdline parse: only single letter options have single-letter strings
  
  ... moved around options so that parsing the code to find all
  single-letter options easier.

Jay Satiro (28 Apr 2016)
- CURLINFO_TLS_SSL_PTR.3: Clarify SSL pointer availability
  
  Bug: https://curl.haxx.se/mail/lib-2016-04/0126.html
  Reported-by: Bru Rom

Daniel Stenberg (28 Apr 2016)
- curl_easy_getinfo.3: remove superfluous blank lines

- test1139: verifies libcurl option man page presence
  
  - checks that each option has its own man page present
  
  - checks that each option is mentioned in its corresponding index man
    page

- curl_easy_getinfo.3: added missing mention of CURLINFO_TLS_SESSION
  
  ... although it is deprecated.

Jay Satiro (28 Apr 2016)
- mbedtls: Fix session resume
  
  This also fixes PolarSSL session resume.
  
  Prior to this change the TLS session information wasn't properly
  saved and restored for PolarSSL and mbedTLS.
  
  Bug: https://curl.haxx.se/mail/lib-2016-01/0070.html
  Reported-by: Thomas Glanzmann
  
  Bug: https://curl.haxx.se/mail/lib-2016-04/0095.html
  Reported-by: Moti Avrahami

Daniel Stenberg (27 Apr 2016)
- RELEASE-NOTES: synced with f4298fcc6d2

- [Michael Kaufmann brought this change]

  opts: Fix some syntax errors in example code fragments
  
  Fixes #779

- openssl: avoid BN_print a NULL bignum
  
  OpenSSL 1.1.0-pre seems to return NULL(?) for a whole lot of those
  numbers so make sure the function handles this.
  
  Reported-by: Linus Nordberg

- [Marcel Raad brought this change]

  CONNECT_ONLY: don't close connection on GSS 401/407 reponses
  
  Previously, connections were closed immediately before the user had a
  chance to extract the socket when the proxy required Negotiate
  authentication.
  
  This regression was brought in with the security fix in commit
  79b9d5f1a42578f
  
  Closes #655

- CURLINFO_TLS_SESSION.3: clarify TLS library support before 7.48.0

- mbedtls.c: silly spellfix of a comment

- KNOWN_BUGS: 1.10 Strips trailing dot from host name
  
  Closes #716

- test1322: verify stripping of trailing dot from host name
  
  While being debated (in #716) and a violation of RFC 7230 section 5.4,
  this test verifies that the existing functionality works as intended. It
  strips the dot from the host name and uses the host without dot
  throughout the internals.

- multi: accidentally used resolved host name instead of proxy
  
  Regression introduced in 09b5a998
  
  Bug: https://curl.haxx.se/mail/lib-2016-04/0084.html
  Reported-by: BoBo

- symbols-in-versions: added new CURLSSLBACKEND_ symbols

- test148: fixed after the --ftp-create-dirs retry change
  
  follow-up commit to 3c1e84f569 as it made curl try a little harder

- curl.h: clarify curl_sslbackend for openssl clones and renames

- [Karlson2k brought this change]

  url.c: fixed DEBUGASSERT() for WinSock workaround
  
  If buffer is allocated, but nothing is received during prereceive
  stage, than number of processed bytes must be zero.
  
  Closes #778

- KNOWN_BUGS: --interface for ipv6 binds to unusable IP address
  
  Closes #686 for now.

- TODO: 1.17 Add support for IRIs
  
  Adding support for IRIs is a mouthful, but is probably interesting at
  least for areas and countries where the use of such "URLs" are growing
  popularity.
  
  Closes #776

- THANKS-filter: Travis Burtrum

- lib1517: checksrc compliance

- [moparisthebest brought this change]

  PolarSSL: Implement public key pinning

Patrick Monnerat (22 Apr 2016)
- os400: upgrade ILE/RPG binding

- curl.h: CURLOPT_CONNECT_TO sets a struct slist *, not a string

Daniel Stenberg (22 Apr 2016)
- contributors.sh: make --releasenotes implied
  
  It got too annoying to type =)

- RELEASE-NOTES: synced with 3c1e84f5693d8093

- curl: make --ftp-create-dirs retry on failure
  
  The underlying libcurl option used for this feature is
  CURLOPT_FTP_CREATE_MISSING_DIRS which has the ability to retry the dir
  creation, but it was never set to do that by the command line tool.
  
  Now it does.
  
  Bug: https://curl.haxx.se/mail/archive-2016-04/0021.html
  Reported-by: John Wanghui
  Help-by: Leif W

- [Henrik Gaßmann brought this change]

  winbuild: add mbedtls support
  
  Add WITH_MBEDTLS option. Make WITH_SSL, WITH_MBEDTLS and ENABLE_WINSSL
  options mutual exclusive.
  
  Closes #606

- KNOWN_BUGS: fixed "5.6 Improper use of Autoconf cache variables"
  
  As of commit d9f3b365a3

- [Irfan Adilovic brought this change]

  configure: ac_cv_ -> curl_cv_ for write-only vars
  
  These configure vars are modified in a curl-specific way but never
  evaluated or loaded from cache, even though they are designated as
  _cv_. We could either implement proper AC_CACHE_CHECKs for them, or
  remove them completely.
  
  Fixes #603 as ac_cv_func_gethostbyname is no longer clobbered, and
  AC_CHECK_FUNC(gethostbyname...) will no longer spuriously succeed after
  the first configure run with caching.
  
  `ac_cv_func_strcasecmp` is curious, see #770.
  
  `eval "ac_cv_func_$func=yes"` can still cause problems as it works in
  tandem with AC_CHECK_FUNCS and then potentially modifies its result. It
  would be best to rewrite this test to use a new CURL_CHECK_FUNCS macro,
  which works the same as AC_CHECK_FUNCS but relies on caching the values
  of curl_cv_func_* variables, without modifiying ac_cv_func_*.

- [Irfan Adilovic brought this change]

  configure: ac_cv_ -> curl_cv_ for r/w vars
  
  These configure vars are modified in a curl-specific way and modified by
  the configure process, but are never loaded from cache, even though they
  are designated as _cv_. We should implement proper AC_CACHE_CHECKs for
  them eventually.

- [Irfan Adilovic brought this change]

  configure: ac_cv_func_clock_gettime -> curl_...
  
  This variable must not be cached in its current form, as any cached
  information will prevent the next configure run from determining the
  correct LIBS needed for the function. Thus, rename prefix `ac_cv_` to
  just `curl_`.

- [Irfan Adilovic brought this change]

  configure: ac_cv_ -> curl_cv_ for all cached vars
  
  This was automated by:
  
  sed -b -i -f <(ack -A1 AC_CACHE_CHECK | \
                 ack -o 'ac_cv_.*?\b' | \
                 sort -u | xargs -n1 bash -c \
                      'echo "s/$0/curl_cv_${0#ac_cv_}/g"') \
      $(git ls-files)
  
  This only changed the prefix for 16 variables actually checked with
  AC_CACHE_CHECK.

- openssl: builds with OpenSSL 1.1.0-pre5
  
  The RSA, DSA and DH structs are now opaque and require use of new APIs
  
  Fixes #763

Steve Holme (20 Apr 2016)
- url.c: Prefer we don't use explicit NULLs in conditions
  
  Fixed commit fa5fa65a30 to not use NULLs in if condition.

Daniel Stenberg (20 Apr 2016)
- [Isaac Boukris brought this change]

  NTLM: check for NULL pointer before deferencing
  
  At ConnectionExists, both check->proxyuser and check->proxypasswd
  could be NULL, so make sure to check first.
  
  Fixes #765

- [Karlson2k brought this change]

  tests: added test1517
  
  ... for checking ability to receive full HTTP response when POST request
  is used with slow read callback function.
  
  This test checks for bug #657 and verifies the work-around from
  72d5e144fbc6.
  
  Closes #720

- [Karlson2k brought this change]

  sendf.c: added ability to call recv() before send() as workaround
  
  WinSock destroys recv() buffer if send() is failed. As result - server
  response may be lost if server sent it while curl is still sending
  request. This behavior noticeable on HTTP server short replies if
  libcurl use several send() for request (usually for POST request).
  To workaround this problem, libcurl use recv() before every send() and
  keeps received data in intermediate buffer for further processing.
  
  Fixes: #657
  Closes: #668

Kamil Dudka (19 Apr 2016)
- connect: make sure that rc is initialized in singleipconnect()
  
  This commit fixes a Clang warning introduced in curl-7_48_0-190-g8f72b13:
  
  Error: CLANG_WARNING:
  lib/connect.c:1120:11: warning: The right operand of '==' is a garbage value
  1118|       }
  1119|
  1120|->     if(-1 == rc)
  1121|         error = SOCKERRNO;
  1122|     }

Daniel Stenberg (19 Apr 2016)
- make/checksrc: use $srcdir, not $top_srcdir

- src/checksrc.whitelist: removed

- tool_operate: switch to inline checksrc ignore

- lib/checksrc.whitelist: not needed anymore
  
  ... as checksrc now skips comments

- vtls.h: remove a space before semicolon
  
  ... that the new checksrc detected

- darwinssl: removed commented out code

- http_chunks: removed checksrc disable
  
  ... since checksrc now skips comments

- imap: inlined checksrc disable instead of whitelist edit

- checksrc: taught to skip comments
  
  ... but output non-stripped version of the line, even if that then can
  make the script identify the wrong position in the line at
  times. Showing the line stripped (ie without comments) is just too
  surprising.

- opts/Makefile.am: list all docs file one by one
  
  ... to make it easier to add lines in patches that won't just break all
  other patches trying to add lines too.

- curl_easy_setopt.3: mention CURLOPT_TCP_FASTOPEN

- RELEASE-NOTES: synced with 03de4e4b219
  
  (since we just merged two major features)

- [Alessandro Ghedini brought this change]

  connect: implement TCP Fast Open for Linux
  
  Closes #660

- [Alessandro Ghedini brought this change]

  tool: add --tcp-fastopen option

- [Alessandro Ghedini brought this change]

  connect: implement TCP Fast Open for OS X

- [Alessandro Ghedini brought this change]

  url: add CURLOPT_TCP_FASTOPEN option

- checksrc: pass on -D so the whitelists are found correctly

- configure: remove check for libresolve
  
  'strncasecmp' was once provided by libresolv (no trailing e) for SunOS,
  but this check is broken and most likely adds nothing useful. Removing
  now.
  
  Reported-by: Irfan Adilovic
  
  Discussed in #770

- scripts/make: use $(EXEEXT) for executables
  
  Reported-by: bodop
  
  Fixes #771

- includes: avoid duplicate memory callback typdefs even harder

- checksrc/makefile.am: use $top_srcdir to find source files
  
  ... to properly support out of source tree builds.

- RELEASE-NOTES: synced with 26ec93dd6aeba8dfb5

- opts: fix option references missing (section)

- [Michael Kaufmann brought this change]

  news: CURLOPT_CONNECT_TO and --connect-to
  
  Makes curl connect to the given host+port instead of the host+port found
  in the URL.

- makefile.vc6: use d suffix on debug object
  
  To allow both release and debug builds in parallel.
  
  Reported-by: Rod Widdowson
  
  Fixes #769

Jay Satiro (12 Apr 2016)
- http2: Use size_t type for data drain count
  
  Ref: https://github.com/curl/curl/issues/659
  Ref: https://github.com/curl/curl/pull/663

- http2: Improve header parsing
  
  - Error if a header line is larger than supported.
  
  - Warn if cumulative header line length may be larger than supported.
  
  - Allow spaces when parsing the path component.
  
  - Make sure each header line ends in \r\n. This fixes an out of bounds.
  
  - Disallow header continuation lines until we decide what to do.
  
  Ref: https://github.com/curl/curl/issues/659
  Ref: https://github.com/curl/curl/pull/663

- http2: Add Curl_http2_strerror for HTTP/2 error codes
  
  Ref: https://github.com/curl/curl/issues/659
  Ref: https://github.com/curl/curl/pull/663

- [Tatsuhiro Tsujikawa brought this change]

  http2: Don't increment drain when one header field is received
  
  Sicne we write header field in temporary location, not in the memory
  that upper layer provides, incrementing drain should not happen.
  
  Ref: https://github.com/curl/curl/issues/659
  Ref: https://github.com/curl/curl/pull/663

- [Tatsuhiro Tsujikawa brought this change]

  http2: Ensure that http2_handle_stream_close is called
  
  This commit ensures that streams which was closed in on_stream_close
  callback gets passed to http2_handle_stream_close.  Previously, this
  might not happen.  To achieve this, we increment drain property to
  forcibly call recv function for that stream.
  
  To more accurately check that we have no pending event before shutting
  down HTTP/2 session, we sum up drain property into
  http_conn.drain_total.  We only shutdown session if that value is 0.
  
  With this commit, when stream was closed before reading response
  header fields, error code CURLE_HTTP2_STREAM is returned even if
  HTTP/2 level error is NO_ERROR.  This signals the upper layer that
  stream was closed by error just like TCP connection close in HTTP/1.
  
  Ref: https://github.com/curl/curl/issues/659
  Ref: https://github.com/curl/curl/pull/663

- [Tatsuhiro Tsujikawa brought this change]

  http2: Process paused data first before tear down http2 session
  
  This commit ensures that data from network are processed before HTTP/2
  session is terminated.  This is achieved by pausing nghttp2 whenever
  different stream than current easy handle receives data.
  
  This commit also fixes the bug that sometimes processing hangs when
  multiple HTTP/2 streams are multiplexed.
  
  Ref: https://github.com/curl/curl/issues/659
  Ref: https://github.com/curl/curl/pull/663

- [Tatsuhiro Tsujikawa brought this change]

  http2: Check session closure early in http2_recv
  
  Ref: https://github.com/curl/curl/issues/659
  Ref: https://github.com/curl/curl/pull/663

- [Tatsuhiro Tsujikawa brought this change]

  http2: Add handling stream level error
  
  Previously, when a stream was closed with other than NGHTTP2_NO_ERROR
  by RST_STREAM, underlying TCP connection was dropped.  This is
  undesirable since there may be other streams multiplexed and they are
  very much fine.  This change introduce new error code
  CURLE_HTTP2_STREAM, which indicates stream error that only affects the
  relevant stream, and connection should be kept open.  The existing
  CURLE_HTTP2 means connection error in general.
  
  Ref: https://github.com/curl/curl/issues/659
  Ref: https://github.com/curl/curl/pull/663

Daniel Stenberg (11 Apr 2016)
- http2: drain the socket better...
  
  ... but ignore EAGAIN if the stream has ended so that we don't end up in
  a loop. This is a follow-up to c8ab613 in order to avoid the problem
  d261652 was made to fix.
  
  Reported-by: Jay Satiro
  Clues-provided-by: Tatsuhiro Tsujikawa
  
  Discussed in #750

- KNOWN_BUGS: added info for "Hangs with PolarSSL"

- KNOWN_BUGS: 1.9 HTTP/2 frames while in the connection pool kill reuse
  
  Closes #750

- build: include scripts/ in the dist

Steve Holme (9 Apr 2016)
- CURLOPT_SOCKS5_GSSAPI_SERVICE: Merged with CURLOPT_PROXY_SERVICE_NAME
  
  As these two options provide identical functionality, the former for
  SOCK5 proxies and the latter for HTTP proxies, merged the two options
  together.
  
  As such CURLOPT_SOCKS5_GSSAPI_SERVICE is marked as deprecated as of
  7.49.0.

- urldata: Use bool for socks5_gssapi_nec as it is a flag
  
  This value is set to TRUE or FALSE so should be a bool and not a long.

- url: Ternary operator code style changes

- CODE_STYLE: Added ternary operator example to 'Space around operators'
  
  Following conversation on the libcurl mailing list.

- sasl: Fixed compilation errors from commit 9d89a0387
  
  ...when GSS-API or Windows SSPI are not used.

- url: Corrected comments following 9d89a0387

- docs: Added clarification following commit 9d89a0387

- Makefile: Fixed echo of checksrc check

- checksrc: Fix issue with the autobuilds not picking up the whitelist

- checksrc: Added missing vauth and vtls directories

- ftp/imap/pop3/smtp: Allow the service name to be overridden
  
  Allow the service name to be overridden for DIGIST-MD5 and Kerberos 5
  authentication in FTP, IMAP, POP3 and SMTP.

- http_negotiate: Calculate service name and proxy service name locally
  
  Calculate the service name and proxy service names locally, rather than
  in url.c which will allow for us to support overriding the service name
  for other protocols such as FTP, IMAP, POP3 and SMTP.

- ROADMAP: Updated following the move of the authentication code

Patrick Monnerat (8 Apr 2016)
- KNOWN_BUGS: openldap hangs. TODO: binary SASL.

Daniel Stenberg (8 Apr 2016)
- KNOWN_BUGS: 5.6 Improper use of Autoconf cache variables
  
  Closes #603

- KNOWN_BUGS: 11.2 error buffer not set...
  
  Closes #544

- KNOWN_BUGS: 11.1 Curl leaks .onion hostnames in DNS
  
  Closes #543

- KNOWN_BUGS: 1.8 DNS timing is wrong for HTTP redirects
  
  Closes #522

- TODO: HTTP/2 "prior knowledge" is implemented!

- [Damien Vielpeau brought this change]

  mbedtls: fix MBEDTLS_DEBUG builds

- mbedtls: implement and provide *_data_pending()
  
  ... as otherwise we might get stuck thinking there's no more data to
  handle.
  
  Reported-by: Damien Vielpeau
  
  Fixes #737

- mbedtls: follow-up for the previous commit

- mbedtls.c: name space pollution fix, Use 'Curl_'

- mbedtls.c: changed private prefix to mbed_
  
  mbedtls_ is the prefix used by the mbedTLS library itself so we should
  avoid using that for our private functions.

- mbedtls.h: fix compiler warnings

- Revert "winbuild: trying to set some files eol=crlf for git"
  
  This reverts commit 9c08b4f1e7eced5a4d3782a3e0daa484c9d77d21.
  
  Didn't help. Caused problems.
  
  Fixes #756

- curl.1: use example.com more
  
  Make (most) example snippets use the example.com domain instead of the
  random ones picked and used before. Some of those were probably
  legitimate sites and some not. example.com is designed for this purpose.

- [Michael Kaufmann brought this change]

  HTTP2: Add a space character after the status code
  
  The space character after the status code is mandatory, even if the
  reason phrase is empty (see RFC 7230 section 3.1.2)
  
  Closes #755

- [Viktor Szakats brought this change]

  URLs: change http to https in many places
  
  Closes #754

- winbuild: trying to set some files eol=crlf for git
  
  Thinking it might help to apply patches etc with git.

- [Theodore Dubois brought this change]

  curl.1: change example for -F
  
  It's a bad idea to send your passwords anywhere, especially over HTTP.
  Modified example to send a picture instead.
  
  Fixes #752

- KNOWN_BUGS: reorganized and cleaned up
  
  Now sorted into categories and organized in the same style we do the
  TODO document. It will make each issue linked properly on the
  https://curl.haxx.se/docs/knownbugs.html web page.
  
  The sections should make it easier to find issues and issues related to
  areas of the reader's specific interest.

Jay Satiro (6 Apr 2016)
- KNOWN_BUGS: #95 curl in Windows can't handle Unicode arguments

Steve Holme (6 Apr 2016)
- KNOWN_BUGS: Use https://curl.haxx.se URL for github based issues

- CHECKSRC.md: Corrected some typos

- RELEASE-NOTES: Corrected last updated
  
  Included a summary of the checksrc.bat updates and combined two krb5
  changes as they should have been implemented at the same time.

- vauth: Corrected a number of typos in comments
  
  Reported-by: Michael Osipov

Jay Satiro (5 Apr 2016)
- KNOWN_BUGS: #94 IMAP custom requests use the LIST handler
  
  Bug: https://github.com/curl/curl/issues/536
  Reported-by: eXeC64@users.noreply.github.com

Daniel Stenberg (5 Apr 2016)
- KNOWN_BUGS: remove 68, 70 and 72.
  
  Due to their age (we don't fully know if they actually remain) and lack
  of detail - very few people will bother to find out what they're about
  or work on them. If people truly still suffer from any of these, I
  assume they will be reported again and then we'll deal with them.
  
  72. "Pausing pipeline problems."
    https://curl.haxx.se/mail/lib-2009-07/0214.html
  
  70. Problem re-using easy handle after call to curl_multi_remove_handle
    https://curl.haxx.se/mail/lib-2009-07/0249.html
  
  68. "More questions about ares behavior".
    https://curl.haxx.se/mail/lib-2009-08/0012.html

- KNOWN_BUGS: remove 92 and 88, fixed

- http2: fix connection reuse when PING comes after last DATA
  
  It turns out the google GFE HTTP/2 servers send a PING frame immediately
  after a stream ends and its last DATA has been received by curl. So if
  we don't drain that from the socket, it makes the socket readable in
  subsequent checks and libcurl then (wrongly) assumes the connection is
  dead when trying to reuse the connection.
  
  Reported-by: Joonas Kuorilehto
  
  Discussed in #750

- multi: remove trailing space in debug output

- RELEASE-NOTES: synced with 86e97b642fb

- CHECKSRC.md: mention cmdline options, fix the bullet list

- docs/CHECKSRC.md: initial version

Steve Holme (3 Apr 2016)
- checksrc.bat: Added support for the examples

Daniel Stenberg (3 Apr 2016)
- lib/src: fix the checksrc invoke
  
  ... now works correctly when invoke from the root makefile
>>>>>>> origin/tomato-shibby-RT-AC
